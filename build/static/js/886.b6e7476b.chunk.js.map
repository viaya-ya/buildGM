{"version":3,"file":"static/js/886.b6e7476b.chunk.js","mappings":"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","sources":["webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","webpack://good_management/./src/UI/Custom/ModalWindow.module.css?7f9e","UI/Custom/ModalWindow.jsx","webpack://good_management/./src/UI/Custom/SelectBorder/SelectBorder.module.css?11b5","UI/Custom/SelectBorder/SelectBorder.jsx","webpack://good_management/./src/UI/Custom/TextArea/TextArea.module.css?c32b","UI/Custom/TextArea/TextArea.jsx","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx","webpack://good_management/./src/UI/app/StrategyPage/Strategy.module.css?5cac","UI/app/StrategyPage/Strategy.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__6e9Ca\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__YWbBU\"};","import React from \"react\";\r\nimport classes from \"./ButtonAction.module.css\";\r\nimport iconAdd from \"../../../../image/iconAdd.svg\";\r\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\r\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\r\nexport default function ButtonAction({ create, update, refUpdate, refCreate }) {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {create && (\r\n        <ButtonImage\r\n          refAction={refCreate}\r\n          name={\"создать\"}\r\n          icon={iconAdd}\r\n          onClick={create}\r\n        ></ButtonImage>\r\n      )}\r\n\r\n      {update && (\r\n        <ButtonImage\r\n          refAction={refUpdate}\r\n          name={\"обновить\"}\r\n          icon={Blacksavetmp}\r\n          onClick={update}\r\n        ></ButtonImage>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport classes from \"./BottomHeaders.module.css\"\r\nimport ButtonAction from './ButtonAction/ButtonAction'\r\n\r\nexport default function BottomHeaders({children, create, update,  refUpdate, refCreate}) {\r\n  return (\r\n    <div className={classes.editText}>\r\n        {children}\r\n        <ButtonAction create={create} update={update} refUpdate={refUpdate} refCreate={refCreate}></ButtonAction>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDelete\":\"ModalWindow_modalDelete__6F2XA\",\"modalDeleteElement\":\"ModalWindow_modalDeleteElement__BWKSd\",\"modalRow1\":\"ModalWindow_modalRow1__lAjGg\",\"modalRow2\":\"ModalWindow_modalRow2__s2-a6\",\"btnYes\":\"ModalWindow_btnYes__ScZrA\",\"btnNo\":\"ModalWindow_btnNo__q5w-4\",\"textBtnYes\":\"ModalWindow_textBtnYes__nsbep\",\"textBtnNo\":\"ModalWindow_textBtnNo__3q10K\",\"text\":\"ModalWindow_text__LCc-R\",\"exitImage\":\"ModalWindow_exitImage__OFdfY\"};","import React from \"react\";\r\nimport classes from \"./ModalWindow.module.css\";\r\nimport exit from \"../image/exitModal.svg\";\r\n\r\nexport default function ModalWindow({ text, close, btnYes, btnNo, exitBtn }) {\r\n  return (\r\n    <div className={classes.modalDelete}>\r\n      <div className={classes.modalDeleteElement}>\r\n        <img\r\n          src={exit}\r\n          alt=\"exit\"\r\n          className={classes.exitImage}\r\n          onClick={() => close(false)}\r\n        />\r\n        <div className={classes.modalRow1}>\r\n          <span className={classes.text}>{text}</span>\r\n        </div>\r\n        {!exitBtn && (\r\n          <div className={classes.modalRow2}>\r\n            <button\r\n              className={`${classes.btnYes} ${classes.textBtnYes}`}\r\n              onClick={btnYes}\r\n            >\r\n              Да\r\n            </button>\r\n            <button\r\n              className={`${classes.btnNo} ${classes.textBtnNo}`}\r\n              onClick={btnNo}\r\n            >\r\n              Нет\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SelectBorder_item__fFqI+\",\"select\":\"SelectBorder_select__9Mkwg\",\"Активный\":\"SelectBorder_Активный__2n7E0\",\"Черновик\":\"SelectBorder_Черновик__+JQtL\",\"Завершено\":\"SelectBorder_Завершено__Y7edP\"};","import React from \"react\";\r\nimport classes from \"./SelectBorder.module.css\";\r\n\r\nexport default function SelectBorder({\r\n  value,\r\n  onChange,\r\n  array,\r\n  array1,\r\n  arrayItem,\r\n  prefix,\r\n  styleSelected\r\n}) {\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <select\r\n        name=\"mySelect\"\r\n        value={value}\r\n        onChange={(e) => {\r\n          onChange(e.target.value);\r\n        }}\r\n        className={`${classes.select} ${classes[styleSelected]}`}\r\n      >\r\n        <option value=\"\" disabled>\r\n          Выберите стратегию\r\n        </option>\r\n\r\n        {array?.map((item) => (\r\n          <>\r\n            <option key={item.id} value={item.id} className={classes[item.state]}>\r\n              {prefix}\r\n              {item[arrayItem]}\r\n            </option>\r\n          </>\r\n        ))}\r\n\r\n        {array1?.map((item) => {\r\n          return (\r\n            <option key={item.id} value={item.id} className={classes[item.state]}>\r\n              {prefix}\r\n              {item[arrayItem]}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"textArea\":\"TextArea_textArea__dawEa\",\"textColor\":\"TextArea_textColor__qu0hR\"};","import React from \"react\";\r\nimport classes from \"./TextArea.module.css\";\r\n\r\nexport default function TextArea({ value, onChange, readOnly }) {\r\n  return (\r\n    <textarea\r\n      className={`${classes.textArea} ${readOnly ? classes.textColor : \"\"}`}\r\n      value={value}\r\n      onChange={(e) => onChange(e.target.value)}\r\n      disabled={readOnly}\r\n    ></textarea>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__DfO0r\"};","import React from \"react\";\r\nimport classes from \"./WaveLetters.module.css\";\r\nexport default function WaveLetters({ letters }) {\r\n  const arrayLetters = letters.split(\"\");\r\n  return (\r\n    <div className={classes.wave}>\r\n      {arrayLetters?.map((item, index) => (\r\n        <span key={index} style={{ \"--i\": index + 1 }}>\r\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Strategy_dialog__kw-u4\",\"header\":\"Strategy_header__I2r5Z\",\"fon\":\"Strategy_fon__Pg-ST\",\"pomoshnikSearch\":\"Strategy_pomoshnikSearch__jSggq\",\"pomoshnik\":\"Strategy_pomoshnik__koFLu\",\"iconBack\":\"Strategy_iconBack__fpTQP\",\"search\":\"Strategy_search__fBWvL\",\"spanPomoshnik\":\"Strategy_spanPomoshnik__JzzbV\",\"editText\":\"Strategy_editText__fZNye\",\"two\":\"Strategy_two__GZ-q+\",\"iconSavetmp\":\"Strategy_iconSavetmp__4o4mz\",\"blockSelect\":\"Strategy_blockSelect__pB+iw\",\"option\":\"Strategy_option__nIkvH\",\"date\":\"Strategy_date__EFr0f\",\"actionButton\":\"Strategy_actionButton__YoTUV\",\"iconAdd\":\"Strategy_iconAdd__JAoE1\",\"iconSave\":\"Strategy_iconSave__GFYMt\",\"image\":\"Strategy_image__h9cwk\",\"itemName\":\"Strategy_itemName__+Jo+s\",\"select\":\"Strategy_select__qy5kW\",\"div\":\"Strategy_div__uvyzG\",\"main\":\"Strategy_main__zdeKp\",\"Teaxtaera\":\"Strategy_Teaxtaera__q63YV\",\"active\":\"Strategy_active__XgZhZ\",\"completed\":\"Strategy_completed__biEwf\",\"draft\":\"Strategy_draft__qiMHu\"};","import React, { useState, useEffect } from \"react\";\r\nimport classes from \"./Strategy.module.css\";\r\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\r\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\r\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\r\nimport ModalWindow from \"@Custom/ModalWindow.jsx\";\r\nimport TextArea from \"@Custom/TextArea/TextArea.jsx\";\r\nimport Headers from \"@Custom/Headers/Headers\";\r\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\r\nimport SelectBorder from \"@Custom/SelectBorder/SelectBorder\";\r\nimport Select from \"@Custom/Select/Select\";\r\nimport {useStrategyHook} from \"@hooks\";\r\n\r\nexport default function Strategy() {\r\n  const [number, setNumber] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [editorState, setEditorState] = useState(\"\");\r\n\r\n  const [postId, setPostId] = useState(null);\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openModalDraft, setOpenModalDraft] = useState(false);\r\n\r\n  const {\r\n    reduxSelectedOrganizationId,\r\n\r\n    // Получить все стратегии\r\n    activeAndDraftStrategies,\r\n    archiveStrategies,\r\n    activeStrategyId,\r\n    hasDraftStrategies,\r\n    isLoadingStrategies,\r\n    isErrorStrategies,\r\n\r\n    // Создать стратегию\r\n    postStrategy,\r\n    isLoadingPostStrategyMutation,\r\n    isSuccessPostStrategyMutation,\r\n    isErrorPostStrategyMutation,\r\n    errorPostStrategyMutation,\r\n    localIsResponsePostStrategyMutation,\r\n\r\n    // Получить стратегию по id\r\n    currentStrategy,\r\n    currentStrategyState,\r\n    isLoadingStrategyId,\r\n    isFetchingStrategyId,\r\n    isErrorStrategyId,\r\n    \r\n\r\n    // Обновить стратегию\r\n    updateStrategy,\r\n    isLoadingUpdateStrategyMutation,\r\n    isSuccessUpdateStrategyMutation,\r\n    isErrorUpdateStrategyMutation,\r\n    errorUpdateStrategyMutation,\r\n    localIsResponseUpdateStrategyMutation\r\n  } = useStrategyHook(number);\r\n\r\n  const stateMapping = {\r\n    Черновик: [\"Активный\", \"Черновик\"],\r\n    Активный: [\"Активный\", \"Завершено\"],\r\n    Завершено: [\"Завершено\"],\r\n  };\r\n\r\n  const filteredArrayState = (stateMapping[currentStrategy.state] || []).map(\r\n    (id) => ({\r\n      id,\r\n      value: id,\r\n    })\r\n  );\r\n\r\n  const handleNumberOnChange = (e) => {\r\n    setNumber(e);\r\n  };\r\n\r\n  const newStrateg = () => {\r\n    if (hasDraftStrategies === true) {\r\n      setOpenModalDraft(true);\r\n    } else {\r\n      savePostStarteg();\r\n    }\r\n  };\r\n\r\n  const savePostStarteg = async () => {\r\n    await postStrategy({\r\n      content: \" \",\r\n      organizationId: reduxSelectedOrganizationId,\r\n    })\r\n      .unwrap()\r\n      .then((result) => {\r\n        setPostId(result.id);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\r\n      });\r\n  };\r\n\r\n  const save = () => {\r\n    console.log(\"activeStrategyId\");\r\n    console.log(activeStrategyId);\r\n    if (\r\n      state === \"Активный\" &&\r\n      currentStrategy.state === \"Черновик\" &&\r\n      activeStrategyId\r\n    ) {\r\n      setOpenModal(true);\r\n    } else {\r\n      saveUpdateStrateg();\r\n    }\r\n  };\r\n\r\n  const saveUpdateStrateg = async () => {\r\n    const Data = [];\r\n    if (state !== \"\" && state !== currentStrategy.state) {\r\n      Data.state = state;\r\n    }\r\n    console.log(editorState);\r\n    if (editorState !== currentStrategy.content) {\r\n      Data.content = editorState;\r\n    }\r\n    await updateStrategy({\r\n      _id: number,\r\n      ...Data,\r\n    })\r\n      .unwrap()\r\n      .then(() => {\r\n        setOpenModal(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\r\n      });\r\n  };\r\n\r\n  const btnYes = async () => {\r\n    await updateStrategy({\r\n      _id: activeStrategyId,\r\n      state: \"Завершено\",\r\n    })\r\n      .unwrap()\r\n      .then(() => {\r\n        saveUpdateStrateg();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2));\r\n      });\r\n  };\r\n\r\n  const btnNo = async () => {\r\n    const Data = [];\r\n    if (editorState !== currentStrategy.content) {\r\n      Data.content = editorState;\r\n    }\r\n    if (Data.content) {\r\n      await updateStrategy({\r\n        _id: number,\r\n        ...Data,\r\n      })\r\n        .unwrap()\r\n        .then(() => {\r\n          setState(\"Черновик\");\r\n          setOpenModal(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\r\n        });\r\n    } else {\r\n      setOpenModal(false);\r\n      setState(\"Черновик\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (postId !== null) {\r\n      setNumber(postId);\r\n    }\r\n  }, [postId]);\r\n\r\n  useEffect(() => {\r\n    if (currentStrategy.content) {\r\n      setEditorState(currentStrategy.content);\r\n    }\r\n\r\n    if (currentStrategy.state) {\r\n      setState(currentStrategy.state);\r\n    }\r\n  }, [currentStrategy.id]);\r\n\r\n  return (\r\n    <div className={classes.dialog}>\r\n      <Headers name={\"стратегия\"}>\r\n        <BottomHeaders create={newStrateg} update={save}>\r\n          <SelectBorder\r\n            value={number}\r\n            onChange={handleNumberOnChange}\r\n            array={activeAndDraftStrategies}\r\n            array1={archiveStrategies}\r\n            arrayItem={\"strategyNumber\"}\r\n            prefix={\"Стратегия №\"}\r\n            styleSelected={currentStrategyState}\r\n          ></SelectBorder>\r\n          {number && (\r\n            <Select\r\n              name={\"Состояние\"}\r\n              value={state}\r\n              onChange={setState}\r\n              array={filteredArrayState}\r\n              arrayItem={\"value\"}\r\n              disabledPole={currentStrategy.state === \"Завершено\"}\r\n            ></Select>\r\n          )}\r\n        </BottomHeaders>\r\n      </Headers>\r\n\r\n      <div className={classes.main}>\r\n        {isErrorStrategies ? (\r\n          <>\r\n            <HandlerQeury Error={true}></HandlerQeury>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {isErrorStrategyId ? (\r\n              <HandlerQeury Error={isErrorStrategyId}></HandlerQeury>\r\n            ) : (\r\n              <>\r\n                <HandlerQeury Loading={isLoadingStrategies}></HandlerQeury>\r\n\r\n                {isLoadingStrategyId || isFetchingStrategyId ? (\r\n                  <HandlerQeury\r\n                    Loading={isLoadingStrategyId}\r\n                    Fetching={isFetchingStrategyId}\r\n                  ></HandlerQeury>\r\n                ) : (\r\n                  <>\r\n                    {currentStrategy.id ? (\r\n                      <>\r\n                        <TextArea\r\n                          key={currentStrategy.id}\r\n                          value={editorState}\r\n                          onChange={setEditorState}\r\n                          readOnly={currentStrategy.state === \"Завершено\"}\r\n                        ></TextArea>\r\n\r\n                        <HandlerMutation\r\n                          Loading={isLoadingUpdateStrategyMutation}\r\n                          Error={isErrorUpdateStrategyMutation && localIsResponseUpdateStrategyMutation}\r\n                          Success= {isSuccessUpdateStrategyMutation && localIsResponseUpdateStrategyMutation}\r\n                          textSuccess={\"Стратегия обновлена\"}\r\n                          textError={\r\n                            errorUpdateStrategyMutation?.data?.errors?.[0]\r\n                              ?.errors?.[0]\r\n                              ? errorUpdateStrategyMutation.data.errors[0]\r\n                                  .errors[0]\r\n                              : errorUpdateStrategyMutation?.data?.message\r\n                          }\r\n                        ></HandlerMutation>\r\n\r\n                        <HandlerMutation\r\n                          Loading={isLoadingPostStrategyMutation}\r\n                          Error={isErrorPostStrategyMutation && localIsResponsePostStrategyMutation}\r\n                          Success={ isSuccessPostStrategyMutation && localIsResponsePostStrategyMutation }\r\n                          textSuccess={\"Стратегия успешно создана.\"}\r\n                          textError={\r\n                            errorPostStrategyMutation?.data?.errors?.[0]\r\n                              ?.errors?.[0]\r\n                              ? errorPostStrategyMutation.data.errors[0]\r\n                                  .errors[0]\r\n                              : errorPostStrategyMutation?.data?.message\r\n                          }\r\n                        ></HandlerMutation>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <WaveLetters\r\n                          letters={\"Выберите стратегию\"}\r\n                        ></WaveLetters>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {openModal ? (\r\n          <ModalWindow\r\n            text={\r\n              \"У Вас уже есть Активная стратегия, при нажатии на Да, Она будет завершена.\"\r\n            }\r\n            close={setOpenModal}\r\n            btnYes={btnYes}\r\n            btnNo={btnNo}\r\n          ></ModalWindow>\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        {openModalDraft ? (\r\n          <ModalWindow\r\n            text={\"У Вас уже есть Черновик стратегии\"}\r\n            close={setOpenModalDraft}\r\n            exitBtn={true}\r\n          ></ModalWindow>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ButtonAction","_ref","create","update","refUpdate","refCreate","_jsxs","className","classes","wrapper","children","_jsx","ButtonImage","refAction","name","icon","iconAdd","onClick","Blacksavetmp","BottomHeaders","editText","ModalWindow","text","close","btnYes","btnNo","exitBtn","modalDelete","modalDeleteElement","src","exit","alt","exitImage","modalRow1","modalRow2","concat","textBtnYes","textBtnNo","SelectBorder","value","onChange","array","array1","arrayItem","prefix","styleSelected","item","e","target","select","disabled","map","_Fragment","id","state","TextArea","readOnly","textArea","textColor","WaveLetters","letters","arrayLetters","split","wave","index","style","Strategy","_errorUpdateStrategyM","_errorUpdateStrategyM2","_errorUpdateStrategyM3","_errorUpdateStrategyM4","_errorUpdateStrategyM5","_errorPostStrategyMut","_errorPostStrategyMut2","_errorPostStrategyMut3","_errorPostStrategyMut4","_errorPostStrategyMut5","number","setNumber","useState","setState","editorState","setEditorState","postId","setPostId","openModal","setOpenModal","openModalDraft","setOpenModalDraft","reduxSelectedOrganizationId","activeAndDraftStrategies","archiveStrategies","activeStrategyId","hasDraftStrategies","isLoadingStrategies","isErrorStrategies","postStrategy","isLoadingPostStrategyMutation","isSuccessPostStrategyMutation","isErrorPostStrategyMutation","errorPostStrategyMutation","localIsResponsePostStrategyMutation","currentStrategy","currentStrategyState","isLoadingStrategyId","isFetchingStrategyId","isErrorStrategyId","updateStrategy","isLoadingUpdateStrategyMutation","isSuccessUpdateStrategyMutation","isErrorUpdateStrategyMutation","errorUpdateStrategyMutation","localIsResponseUpdateStrategyMutation","useStrategyHook","filteredArrayState","Черновик","Активный","Завершено","savePostStarteg","async","content","organizationId","unwrap","then","result","catch","error","console","JSON","stringify","saveUpdateStrateg","Data","log","_objectSpread","_id","useEffect","dialog","Headers","newStrateg","save","Select","disabledPole","main","HandlerQeury","Error","Loading","Fetching","HandlerMutation","Success","textSuccess","textError","data","errors","message"],"sourceRoot":""}