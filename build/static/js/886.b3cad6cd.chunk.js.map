{"version":3,"file":"static/js/886.b3cad6cd.chunk.js","mappings":"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","sources":["webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","webpack://good_management/./src/UI/Custom/TextArea/TextArea.module.css?c32b","UI/Custom/TextArea/TextArea.jsx","webpack://good_management/./src/UI/app/StrategyPage/Strategy.module.css?5cac","UI/app/StrategyPage/Strategy.jsx","webpack://good_management/./src/UI/Custom/ModalWindow.module.css?7f9e","UI/Custom/ModalWindow.jsx","webpack://good_management/./src/UI/Custom/SelectBorder/SelectBorder.module.css?11b5","UI/Custom/SelectBorder/SelectBorder.jsx","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__BUuuG\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__S7EYo\"};","import React from \"react\";\nimport classes from \"./ButtonAction.module.css\";\nimport iconAdd from \"../../../../image/iconAdd.svg\";\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\nexport default function ButtonAction({ create, update, refUpdate, refCreate }) {\n  return (\n    <div className={classes.wrapper}>\n      {create && (\n        <ButtonImage\n          refAction={refCreate}\n          name={\"создать\"}\n          icon={iconAdd}\n          onClick={create}\n        ></ButtonImage>\n      )}\n\n      {update && (\n        <ButtonImage\n          refAction={refUpdate}\n          name={\"обновить\"}\n          icon={Blacksavetmp}\n          onClick={update}\n        ></ButtonImage>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport classes from \"./BottomHeaders.module.css\"\nimport ButtonAction from './ButtonAction/ButtonAction'\n\nexport default function BottomHeaders({children, create, update,  refUpdate, refCreate}) {\n  return (\n    <div className={classes.editText}>\n        {children}\n        <ButtonAction create={create} update={update} refUpdate={refUpdate} refCreate={refCreate}></ButtonAction>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"textArea\":\"TextArea_textArea__W74x1\",\"textColor\":\"TextArea_textColor__B5yhy\"};","import React from \"react\";\nimport classes from \"./TextArea.module.css\";\n\nexport default function TextArea({ value, onChange, readOnly }) {\n  return (\n    <textarea\n      className={`${classes.textArea} ${readOnly ? classes.textColor : \"\"}`}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      disabled={readOnly}\n    ></textarea>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Strategy_dialog__dL8ZC\",\"header\":\"Strategy_header__rAeoI\",\"fon\":\"Strategy_fon__3PORZ\",\"pomoshnikSearch\":\"Strategy_pomoshnikSearch__YKmt8\",\"pomoshnik\":\"Strategy_pomoshnik__H6G+b\",\"iconBack\":\"Strategy_iconBack__Ye3kO\",\"search\":\"Strategy_search__vgnlW\",\"spanPomoshnik\":\"Strategy_spanPomoshnik__VlMoT\",\"editText\":\"Strategy_editText__4KWog\",\"two\":\"Strategy_two__f-PxZ\",\"iconSavetmp\":\"Strategy_iconSavetmp__wdrl6\",\"blockSelect\":\"Strategy_blockSelect__T1xf7\",\"option\":\"Strategy_option__WIMyM\",\"date\":\"Strategy_date__AwND-\",\"actionButton\":\"Strategy_actionButton__IvY1c\",\"iconAdd\":\"Strategy_iconAdd__rZGlO\",\"iconSave\":\"Strategy_iconSave__LsCOV\",\"image\":\"Strategy_image__N7Zxv\",\"itemName\":\"Strategy_itemName__KWt1T\",\"select\":\"Strategy_select__n89TH\",\"div\":\"Strategy_div__fuyAi\",\"main\":\"Strategy_main__jaz1m\",\"Teaxtaera\":\"Strategy_Teaxtaera__Pu+O+\",\"active\":\"Strategy_active__FQoSU\",\"completed\":\"Strategy_completed__ZFT0M\",\"draft\":\"Strategy_draft__I6Zhi\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./Strategy.module.css\";\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\nimport ModalWindow from \"@Custom/ModalWindow.jsx\";\nimport TextArea from \"@Custom/TextArea/TextArea.jsx\";\nimport Headers from \"@Custom/Headers/Headers\";\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\nimport SelectBorder from \"@Custom/SelectBorder/SelectBorder\";\nimport Select from \"@Custom/Select/Select\";\nimport { useStrategyHook } from \"@hooks\";\n\nimport { ConfigProvider, Tour } from \"antd\";\nimport ruRU from \"antd/locale/ru_RU\";\n\nexport default function Strategy() {\n  const [number, setNumber] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [editorState, setEditorState] = useState(\"\");\n\n  const [postId, setPostId] = useState(null);\n\n  const [openModal, setOpenModal] = useState(false);\n  const [openModalDraft, setOpenModalDraft] = useState(false);\n\n  const refSelect = useRef(null);\n  const refSelectBorder = useRef(null);\n  const refCreate = useRef(null);\n  const refUpdate = useRef(null);\n\n  const [open, setOpen] = useState(false);\n\n  const steps = [\n    {\n      title: \"Выбрать стратегию\",\n      description: \"Выбрать стратегию для показа краткосрочной цели\",\n      target: () => refSelectBorder.current,\n    },\n    {\n      title: \"Состояние стратегии\",\n      description: \"Нажмите и поменяйте состояние\",\n      target: () => (number ? refSelect.current : null), // Добавляем проверку\n      disabled: !number, // Отключаем шаг, если элемент не виден\n    },\n    {\n      title: \"Создать\",\n      description: \"Нажмите для создания стратегии\",\n      target: () => refCreate.current,\n    },\n    {\n      title: \"Сохранить\",\n      description: \"Нажмите для сохранения\",\n      target: () => refUpdate.current,\n    },\n  ].filter(step => !step.disabled); // Фильтруем шаги, у которых disabled=true;\n\n  const {\n    reduxSelectedOrganizationId,\n\n    // Получить все стратегии\n    activeAndDraftStrategies,\n    archiveStrategies,\n    activeStrategyId,\n    hasDraftStrategies,\n    isLoadingStrategies,\n    isErrorStrategies,\n\n    // Создать стратегию\n    postStrategy,\n    isLoadingPostStrategyMutation,\n    isSuccessPostStrategyMutation,\n    isErrorPostStrategyMutation,\n    errorPostStrategyMutation,\n    localIsResponsePostStrategyMutation,\n\n    // Получить стратегию по id\n    currentStrategy,\n    currentStrategyState,\n    isLoadingStrategyId,\n    isFetchingStrategyId,\n    isErrorStrategyId,\n\n    // Обновить стратегию\n    updateStrategy,\n    isLoadingUpdateStrategyMutation,\n    isSuccessUpdateStrategyMutation,\n    isErrorUpdateStrategyMutation,\n    errorUpdateStrategyMutation,\n    localIsResponseUpdateStrategyMutation,\n  } = useStrategyHook(number);\n\n  const stateMapping = {\n    Черновик: [\"Активный\", \"Черновик\"],\n    Активный: [\"Активный\", \"Завершено\"],\n    Завершено: [\"Завершено\"],\n  };\n\n  const filteredArrayState = (stateMapping[currentStrategy.state] || []).map(\n    (id) => ({\n      id,\n      value: id,\n    })\n  );\n\n  const handleNumberOnChange = (e) => {\n    setNumber(e);\n  };\n\n  const newStrateg = () => {\n    if (hasDraftStrategies === true) {\n      setOpenModalDraft(true);\n    } else {\n      savePostStarteg();\n    }\n  };\n\n  const savePostStarteg = async () => {\n    await postStrategy({\n      content: \" \",\n      organizationId: reduxSelectedOrganizationId,\n    })\n      .unwrap()\n      .then((result) => {\n        setPostId(result.id);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  const save = () => {\n    console.log(\"activeStrategyId\");\n    console.log(activeStrategyId);\n    if (\n      state === \"Активный\" &&\n      currentStrategy.state === \"Черновик\" &&\n      activeStrategyId\n    ) {\n      setOpenModal(true);\n    } else {\n      saveUpdateStrateg();\n    }\n  };\n\n  const saveUpdateStrateg = async () => {\n    const Data = [];\n    if (state !== \"\" && state !== currentStrategy.state) {\n      Data.state = state;\n    }\n    console.log(editorState);\n    if (editorState !== currentStrategy.content) {\n      Data.content = editorState;\n    }\n    await updateStrategy({\n      _id: number,\n      ...Data,\n    })\n      .unwrap()\n      .then(() => {\n        setOpenModal(false);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  const btnYes = async () => {\n    await updateStrategy({\n      _id: activeStrategyId,\n      state: \"Завершено\",\n    })\n      .unwrap()\n      .then(() => {\n        saveUpdateStrateg();\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2));\n      });\n  };\n\n  const btnNo = async () => {\n    const Data = [];\n    if (editorState !== currentStrategy.content) {\n      Data.content = editorState;\n    }\n    if (Data.content) {\n      await updateStrategy({\n        _id: number,\n        ...Data,\n      })\n        .unwrap()\n        .then(() => {\n          setState(\"Черновик\");\n          setOpenModal(false);\n        })\n        .catch((error) => {\n          console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n        });\n    } else {\n      setOpenModal(false);\n      setState(\"Черновик\");\n    }\n  };\n\n  useEffect(() => {\n    if (postId !== null) {\n      setNumber(postId);\n    }\n  }, [postId]);\n\n  useEffect(() => {\n    if (currentStrategy.content) {\n      setEditorState(currentStrategy.content);\n    }\n\n    if (currentStrategy.state) {\n      setState(currentStrategy.state);\n    }\n  }, [currentStrategy.id]);\n\n  return (\n    <div className={classes.dialog}>\n      <Headers name={\"стратегия\"} funcActiveHint={() => setOpen(true)}>\n        <BottomHeaders\n          create={newStrateg}\n          update={save}\n          refCreate={refCreate}\n          refUpdate={refUpdate}\n        >\n          <SelectBorder\n            refSelectBorder={refSelectBorder}\n            value={number}\n            onChange={handleNumberOnChange}\n            array={activeAndDraftStrategies}\n            array1={archiveStrategies}\n            arrayItem={\"strategyNumber\"}\n            prefix={\"Стратегия №\"}\n            styleSelected={currentStrategyState}\n          ></SelectBorder>\n          {number && (\n            <Select\n              refSelect={refSelect}\n              name={\"Состояние\"}\n              value={state}\n              onChange={setState}\n              array={filteredArrayState}\n              arrayItem={\"value\"}\n              disabledPole={currentStrategy.state === \"Завершено\"}\n            ></Select>\n          )}\n        </BottomHeaders>\n      </Headers>\n\n      <ConfigProvider locale={ruRU}>\n        <Tour open={open} onClose={() => setOpen(false)} steps={steps} />\n      </ConfigProvider>\n\n      <div className={classes.main}>\n        {isErrorStrategies ? (\n          <>\n            <HandlerQeury Error={true}></HandlerQeury>\n          </>\n        ) : (\n          <>\n            {isErrorStrategyId ? (\n              <HandlerQeury Error={isErrorStrategyId}></HandlerQeury>\n            ) : (\n              <>\n                <HandlerQeury Loading={isLoadingStrategies}></HandlerQeury>\n\n                {isLoadingStrategyId || isFetchingStrategyId ? (\n                  <HandlerQeury\n                    Loading={isLoadingStrategyId}\n                    Fetching={isFetchingStrategyId}\n                  ></HandlerQeury>\n                ) : (\n                  <>\n                    {currentStrategy.id ? (\n                      <>\n                        <TextArea\n                          key={currentStrategy.id}\n                          value={editorState}\n                          onChange={setEditorState}\n                          readOnly={currentStrategy.state === \"Завершено\"}\n                        ></TextArea>\n\n                        <HandlerMutation\n                          Loading={isLoadingUpdateStrategyMutation}\n                          Error={\n                            isErrorUpdateStrategyMutation &&\n                            localIsResponseUpdateStrategyMutation\n                          }\n                          Success={\n                            isSuccessUpdateStrategyMutation &&\n                            localIsResponseUpdateStrategyMutation\n                          }\n                          textSuccess={\"Стратегия обновлена\"}\n                          textError={\n                            errorUpdateStrategyMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? errorUpdateStrategyMutation.data.errors[0]\n                                  .errors[0]\n                              : errorUpdateStrategyMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n\n                        <HandlerMutation\n                          Loading={isLoadingPostStrategyMutation}\n                          Error={\n                            isErrorPostStrategyMutation &&\n                            localIsResponsePostStrategyMutation\n                          }\n                          Success={\n                            isSuccessPostStrategyMutation &&\n                            localIsResponsePostStrategyMutation\n                          }\n                          textSuccess={\"Стратегия успешно создана.\"}\n                          textError={\n                            errorPostStrategyMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? errorPostStrategyMutation.data.errors[0]\n                                  .errors[0]\n                              : errorPostStrategyMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n                      </>\n                    ) : (\n                      <>\n                        <WaveLetters\n                          letters={\"Выберите стратегию\"}\n                        ></WaveLetters>\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n        {openModal ? (\n          <ModalWindow\n            text={\n              \"У Вас уже есть Активная стратегия, при нажатии на Да, Она будет завершена.\"\n            }\n            close={setOpenModal}\n            btnYes={btnYes}\n            btnNo={btnNo}\n          ></ModalWindow>\n        ) : (\n          <></>\n        )}\n\n        {openModalDraft ? (\n          <ModalWindow\n            text={\"У Вас уже есть Черновик стратегии\"}\n            close={setOpenModalDraft}\n            exitBtn={true}\n          ></ModalWindow>\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDelete\":\"ModalWindow_modalDelete__ukhRp\",\"modalDeleteElement\":\"ModalWindow_modalDeleteElement__6zWsf\",\"modalRow1\":\"ModalWindow_modalRow1__pu+1f\",\"modalRow2\":\"ModalWindow_modalRow2__KBA6s\",\"btnYes\":\"ModalWindow_btnYes__g3eEP\",\"btnNo\":\"ModalWindow_btnNo__0IBST\",\"textBtnYes\":\"ModalWindow_textBtnYes__bEP3u\",\"textBtnNo\":\"ModalWindow_textBtnNo__yJDBD\",\"text\":\"ModalWindow_text__YqzfM\",\"exitImage\":\"ModalWindow_exitImage__Bc2Og\"};","import React from \"react\";\nimport classes from \"./ModalWindow.module.css\";\nimport exit from \"../image/exitModal.svg\";\n\nexport default function ModalWindow({ text, close, btnYes, btnNo, exitBtn }) {\n  return (\n    <div className={classes.modalDelete}>\n      <div className={classes.modalDeleteElement}>\n        <img\n          src={exit}\n          alt=\"exit\"\n          className={classes.exitImage}\n          onClick={() => close(false)}\n        />\n        <div className={classes.modalRow1}>\n          <span className={classes.text}>{text}</span>\n        </div>\n        {!exitBtn && (\n          <div className={classes.modalRow2}>\n            <button\n              className={`${classes.btnYes} ${classes.textBtnYes}`}\n              onClick={btnYes}\n            >\n              Да\n            </button>\n            <button\n              className={`${classes.btnNo} ${classes.textBtnNo}`}\n              onClick={btnNo}\n            >\n              Нет\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SelectBorder_item__DiOvO\",\"select\":\"SelectBorder_select__1QGX7\",\"Активный\":\"SelectBorder_Активный__LTOt8\",\"Черновик\":\"SelectBorder_Черновик__fMOp0\",\"Завершено\":\"SelectBorder_Завершено__buugC\"};","import React from \"react\";\nimport classes from \"./SelectBorder.module.css\";\n\nexport default function SelectBorder({\n  value,\n  onChange,\n  array,\n  array1,\n  arrayItem,\n  prefix,\n  styleSelected,\n  refSelectBorder\n}) {\n\n  return (\n    <div className={classes.item} ref={refSelectBorder}>\n      <select\n        name=\"mySelect\"\n        value={value}\n        onChange={(e) => {\n          onChange(e.target.value);\n        }}\n        className={`${classes.select} ${classes[styleSelected]}`}\n      >\n        <option value=\"\" disabled>\n          Выберите стратегию\n        </option>\n\n        {array?.map((item) => (\n          <>\n            <option key={item.id} value={item.id} className={classes[item.state]}>\n              {prefix}\n              {item[arrayItem]}\n            </option>\n          </>\n        ))}\n\n        {array1?.map((item) => {\n          return (\n            <option key={item.id} value={item.id} className={classes[item.state]}>\n              {prefix}\n              {item[arrayItem]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__2Gves\"};","import React from \"react\";\nimport classes from \"./WaveLetters.module.css\";\nexport default function WaveLetters({ letters }) {\n  const arrayLetters = letters.split(\"\");\n  return (\n    <div className={classes.wave}>\n      {arrayLetters?.map((item, index) => (\n        <span key={index} style={{ \"--i\": index + 1 }}>\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\n        </span>\n      ))}\n    </div>\n  );\n}\n"],"names":["ButtonAction","_ref","create","update","refUpdate","refCreate","_jsxs","className","classes","wrapper","children","_jsx","ButtonImage","refAction","name","icon","iconAdd","onClick","Blacksavetmp","BottomHeaders","editText","TextArea","value","onChange","readOnly","textArea","textColor","e","target","disabled","Strategy","_errorUpdateStrategyM","_errorUpdateStrategyM2","_errorUpdateStrategyM3","_errorUpdateStrategyM4","_errorUpdateStrategyM5","_errorPostStrategyMut","_errorPostStrategyMut2","_errorPostStrategyMut3","_errorPostStrategyMut4","_errorPostStrategyMut5","number","setNumber","useState","state","setState","editorState","setEditorState","postId","setPostId","openModal","setOpenModal","openModalDraft","setOpenModalDraft","refSelect","useRef","refSelectBorder","open","setOpen","steps","title","description","current","filter","step","reduxSelectedOrganizationId","activeAndDraftStrategies","archiveStrategies","activeStrategyId","hasDraftStrategies","isLoadingStrategies","isErrorStrategies","postStrategy","isLoadingPostStrategyMutation","isSuccessPostStrategyMutation","isErrorPostStrategyMutation","errorPostStrategyMutation","localIsResponsePostStrategyMutation","currentStrategy","currentStrategyState","isLoadingStrategyId","isFetchingStrategyId","isErrorStrategyId","updateStrategy","isLoadingUpdateStrategyMutation","isSuccessUpdateStrategyMutation","isErrorUpdateStrategyMutation","errorUpdateStrategyMutation","localIsResponseUpdateStrategyMutation","useStrategyHook","filteredArrayState","Черновик","Активный","Завершено","map","id","savePostStarteg","async","content","organizationId","unwrap","then","result","catch","error","console","JSON","stringify","saveUpdateStrateg","Data","log","_id","useEffect","dialog","Headers","funcActiveHint","newStrateg","save","SelectBorder","array","array1","arrayItem","prefix","styleSelected","Select","disabledPole","ConfigProvider","locale","ruRU","Tour","onClose","main","_Fragment","HandlerQeury","Error","Loading","Fetching","HandlerMutation","Success","textSuccess","textError","data","errors","message","WaveLetters","letters","ModalWindow","text","close","btnYes","btnNo","exitBtn","modalDelete","modalDeleteElement","src","exit","alt","exitImage","modalRow1","modalRow2","textBtnYes","textBtnNo","item","ref","select","arrayLetters","split","wave","index","style"],"sourceRoot":""}