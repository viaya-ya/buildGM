{"version":3,"file":"static/js/407.84869a36.chunk.js","mappings":"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","sources":["webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","webpack://good_management/./src/UI/app/UserPage/User.module.css?1e50","webpack://good_management/./src/UI/Custom/modalSelectCheckBox/ModalSelectCheckBox.module.css?f9d2","UI/Custom/modalSelectCheckBox/ModalSelectCheckBox.jsx","UI/app/UserPage/User.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__6e9Ca\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__YWbBU\"};","import React from \"react\";\r\nimport classes from \"./ButtonAction.module.css\";\r\nimport iconAdd from \"../../../../image/iconAdd.svg\";\r\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\r\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\r\nexport default function ButtonAction({ create, update, refUpdate, refCreate }) {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {create && (\r\n        <ButtonImage\r\n          refAction={refCreate}\r\n          name={\"создать\"}\r\n          icon={iconAdd}\r\n          onClick={create}\r\n        ></ButtonImage>\r\n      )}\r\n\r\n      {update && (\r\n        <ButtonImage\r\n          refAction={refUpdate}\r\n          name={\"обновить\"}\r\n          icon={Blacksavetmp}\r\n          onClick={update}\r\n        ></ButtonImage>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport classes from \"./BottomHeaders.module.css\"\r\nimport ButtonAction from './ButtonAction/ButtonAction'\r\n\r\nexport default function BottomHeaders({children, create, update,  refUpdate, refCreate}) {\r\n  return (\r\n    <div className={classes.editText}>\r\n        {children}\r\n        <ButtonAction create={create} update={update} refUpdate={refUpdate} refCreate={refCreate}></ButtonAction>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"User_dialog__JvQe3\",\"main\":\"User_main__ibuEy\",\"block\":\"User_block__-PgfL\",\"column2\":\"User_column2__sXh-e\",\"avatarContainer\":\"User_avatarContainer__bneNb\",\"avatar\":\"User_avatar__gUSWO\",\"hiddenInput\":\"User_hiddenInput__qby9C\",\"btnSave\":\"User_btnSave__DbKIr\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalSelectCheckBox_modal__++GYJ\",\"modalWindow\":\"ModalSelectCheckBox_modalWindow__YexkJ\",\"header\":\"ModalSelectCheckBox_header__ChWcU\",\"item1\":\"ModalSelectCheckBox_item1__5Eh7N\",\"item2\":\"ModalSelectCheckBox_item2__PRtzx\",\"search\":\"ModalSelectCheckBox_search__5mi+6\",\"exit\":\"ModalSelectCheckBox_exit__mf2sM\",\"table\":\"ModalSelectCheckBox_table__Sz7YQ\",\"row\":\"ModalSelectCheckBox_row__qMiZu\"};","import React from \"react\";\r\nimport classes from \"./ModalSelectCheckBox.module.css\";\r\nimport exitModal from \"@image/exitModal.svg\";\r\nimport Blacksavetmp from \"@image/Blacksavetmp.svg\";\r\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\r\n\r\nexport function ModalSelectCheckBox({\r\n  nameTable,\r\n  handleSearchValue,\r\n  handleSearchOnChange,\r\n  exit,\r\n  filterArray,\r\n  array,\r\n  arrayItem,\r\n  save,\r\n  \r\n  handleChecboxChange,\r\n  arrayChecked,\r\n  nameBtn,\r\n  iconBtn,\r\n}) {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.modalWindow}>\r\n        <img\r\n          src={exitModal}\r\n          alt=\"exitModal\"\r\n          onClick={() => exit()}\r\n          className={classes.exit}\r\n        />\r\n\r\n        <div className={classes.header}>\r\n          <div className={classes.item1}>\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"Найти\"\r\n              value={handleSearchValue}\r\n              onChange={handleSearchOnChange}\r\n              className={classes.search}\r\n            />\r\n          </div>\r\n\r\n          {save && (\r\n            <div className={classes.item2}>\r\n              <ButtonImage\r\n                name={nameBtn ? nameBtn : \"сохранить\"}\r\n                icon={iconBtn ? iconBtn : Blacksavetmp}\r\n                onClick={save}\r\n              ></ButtonImage>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <table className={classes.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>{nameTable}</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {filterArray.length > 0 ? (\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  {filterArray?.map((item) => (\r\n                    <div\r\n                      key={item.id}\r\n                      className={classes.row}\r\n                      onClick={() => handleChecboxChange(item.id, item)}\r\n                    >\r\n                      <input\r\n                       type=\"checkbox\"\r\n                       checked={arrayChecked?.includes(item.id)}\r\n                      />\r\n                      {item[arrayItem]}\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  {array?.map((item) => (\r\n                    <div\r\n                      key={item.id}\r\n                      className={classes.row}\r\n                      onClick={() => handleChecboxChange(item.id, item)}\r\n                    >\r\n                      <input\r\n                         type=\"checkbox\"\r\n                         checked={arrayChecked?.includes(item.id)}\r\n                      />\r\n                      {item[arrayItem]}\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport classes from \"./User.module.css\";\r\n\r\nimport Headers from \"@Custom/Headers/Headers\";\r\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\r\nimport Input from \"@Custom/Input/Input\";\r\n\r\nimport InputMask from \"react-input-mask\";\r\nimport { useUserHook } from \"@hooks\";\r\nimport HandlerMutation from \"@Custom/HandlerMutation\";\r\nimport { usePostImageMutation } from \"@services\";\r\nimport addCircle from \"@image/addCircleGrey.svg\";\r\nimport post from \"@image/post.svg\";\r\nimport ButtonAttach from \"@Custom/buttonAttach/ButtonAttach\";\r\nimport { useModalSelectCheckBox } from \"@hooks\";\r\nimport { ModalSelectCheckBox } from \"@Custom/modalSelectCheckBox/ModalSelectCheckBox\";\r\nimport { usePostsHook } from \"@hooks\";\r\nimport exitHeader from \"@image/exitHeader.svg\";\r\nimport iconAdd from \"@image/iconAdd.svg\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCreatedUserId } from \"@slices\";\r\n\r\nimport { ConfigProvider, Tour } from \"antd\";\r\nimport ruRU from \"antd/locale/ru_RU\";\r\n\r\nexport default function User() {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [middleName, setMiddleName] = useState(\"\");\r\n  const [telephoneNumber, setTelephoneNumber] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const [avatarLocal, setAvatarLocal] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n\r\n  const [openModalSelectPosts, setOpenModalSelectPosts] = useState(\"\");\r\n  const [arrayCheckedPostsIds, setArrayCheckedPostsIds] = useState([]);\r\n  const [arrayCheckedPostsNames, setArrayCheckedPostsNames] = useState([]);\r\n\r\n  const [openHint, setOpenHint] = useState(false);\r\n\r\n  const steps = [\r\n    {\r\n      title: \"Аватар\",\r\n      description:\r\n        \"Нажмите на аватар и поменяйте фотографию, при нажатии на крестик аватар удалиться\",\r\n      target: () => document.querySelector('[data-tour=\"data-avatar\"]'),\r\n    },\r\n    {\r\n      title: \"Личная информация\",\r\n      description: \"Заполните поля для создания пользователя\",\r\n      target: () => document.querySelector('[data-tour=\"data-form\"]'),\r\n    },\r\n    {\r\n      title: \"Пост\",\r\n      description: \"Здесь можете создать или прикрепить пост к пользователю\",\r\n      target: () => document.querySelector('[data-tour=\"data-post\"]'),\r\n    },\r\n    {\r\n      title: \"Сохранить\",\r\n      description: \"Нажмите для сохранения\",\r\n      target: () => document.querySelector('[data-tour=\"data-save\"]'),\r\n    },\r\n  ];\r\n\r\n  const handleChangeFirstName = (e) => {\r\n    const inputValue = e;\r\n    const lettersOnly = inputValue.replace(/[^A-Za-zА-Яа-я\\s]/g, \"\");\r\n\r\n    const formattedValue =\r\n      lettersOnly.charAt(0).toUpperCase() + lettersOnly.slice(1);\r\n\r\n    setFirstName(formattedValue);\r\n  };\r\n\r\n  const handleChangeLastName = (e) => {\r\n    const inputValue = e;\r\n    const lettersOnly = inputValue.replace(/[^A-Za-zА-Яа-я\\s]/g, \"\");\r\n\r\n    const formattedValue =\r\n      lettersOnly.charAt(0).toUpperCase() + lettersOnly.slice(1);\r\n\r\n    setLastName(formattedValue);\r\n  };\r\n\r\n  const handleChangeMiddleName = (e) => {\r\n    const inputValue = e;\r\n    const lettersOnly = inputValue.replace(/[^A-Za-zА-Яа-я\\s]/g, \"\");\r\n\r\n    const formattedValue =\r\n      lettersOnly.charAt(0).toUpperCase() + lettersOnly.slice(1);\r\n\r\n    setMiddleName(formattedValue);\r\n  };\r\n\r\n  const handleChangeTelephoneNumber = (e) => {\r\n    const cleanedPhone = e.target.value.replace(/\\D/g, \"\");\r\n    setTelephoneNumber(`+${cleanedPhone}`);\r\n  };\r\n\r\n  // Создание аккаунта\r\n  const {\r\n    // Создать user\r\n    reduxSelectedOrganizationId,\r\n    postUser,\r\n\r\n    isLoadingUserMutation,\r\n    isSuccessUserMutation,\r\n    isErrorUserMutation,\r\n    ErrorUserMutation,\r\n\r\n    localIsResponseUserMutation,\r\n\r\n    // Получит информацию для создания user\r\n    postsWithoutUser,\r\n    isLoadingGetUserNew,\r\n    isErrorGetUserNew,\r\n  } = useUserHook();\r\n\r\n  const [postImage] = usePostImageMutation();\r\n\r\n  // Для картинки\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreateUserButtonClick = async () => {\r\n    const userData = {\r\n      firstName,\r\n      lastName,\r\n      middleName,\r\n      telephoneNumber,\r\n      organizationId: reduxSelectedOrganizationId,\r\n    };\r\n\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      try {\r\n        const result = await postImage(formData).unwrap();\r\n        userData.avatar_url = result.filePath;\r\n      } catch (error) {\r\n        console.error(\r\n          \"Ошибка загрузки изображения:\",\r\n          JSON.stringify(error, null, 2)\r\n        );\r\n      }\r\n    }\r\n\r\n    try {\r\n      const result = await postUser(userData).unwrap();\r\n      reset();\r\n      saveUpdatePost(result.id);\r\n      dispatch(setCreatedUserId(result.id));\r\n    } catch (error) {\r\n      reset();\r\n      console.error(\r\n        \"Ошибка создания пользователя:\",\r\n        JSON.stringify(error, null, 2)\r\n      );\r\n    }\r\n  };\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleAvatarClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  //Загрузка картинки локально\r\n  const imageUploadHandlerLocal = (e) => {\r\n    const fileInput = e.target;\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFile(file);\r\n      const imageUrl = URL.createObjectURL(file);\r\n      setAvatarLocal(imageUrl);\r\n    }\r\n    // Сбрасываем значение инпута, чтобы можно было выбрать тот же файл\r\n    fileInput.value = \"\";\r\n  };\r\n\r\n  const deleteImage = () => {\r\n    if (avatarLocal) {\r\n      URL.revokeObjectURL(avatarLocal); // Очищаем URL из памяти\r\n    }\r\n    setFile(\"\");\r\n    setAvatarLocal(\"\");\r\n  };\r\n\r\n  // Для прикрепления поста\r\n  const {\r\n    filterArraySearchModalCheckBox,\r\n    handleCheckboxChange,\r\n    inputSearchModalCheckBox,\r\n    setInputSearchModalCheckBox,\r\n  } = useModalSelectCheckBox({\r\n    array: postsWithoutUser,\r\n    arrayItem: \"postName\",\r\n    setArrayChecked: setArrayCheckedPostsIds,\r\n  });\r\n\r\n  const exitsModalSelectPosts = () => {\r\n    setOpenModalSelectPosts(false);\r\n    const filtered = arrayCheckedPostsIds\r\n      .map(\r\n        (selectPost) =>\r\n          postsWithoutUser.find((post) => selectPost === post.id)?.postName\r\n      )\r\n      .filter(Boolean); // Убираем undefined\r\n    setArrayCheckedPostsNames(filtered);\r\n  };\r\n\r\n  const {\r\n    updatePost,\r\n    isLoadingUpdatePostMutation,\r\n    isSuccessUpdatePostMutation,\r\n    isErrorUpdatePostMutation,\r\n    ErrorUpdatePostMutation,\r\n  } = usePostsHook();\r\n\r\n  const saveUpdatePost = async (createdUserId) => {\r\n    if (arrayCheckedPostsIds.length > 0 && createdUserId) {\r\n      try {\r\n        await Promise.all(\r\n          arrayCheckedPostsIds.map(async (id) => {\r\n            await updatePost({\r\n              _id: id,\r\n              responsibleUserId: createdUserId,\r\n            })\r\n              .unwrap()\r\n              .then(() => {\r\n                reset();\r\n              })\r\n              .catch((error) => {\r\n                console.error(\r\n                  `Ошибка при обновлении поста ${id}:`,\r\n                  JSON.stringify(error, null, 2)\r\n                );\r\n              });\r\n          })\r\n        );\r\n      } catch (err) {\r\n        console.error(\"Ошибка выполнения запросов:\", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setFirstName(\"\");\r\n    setLastName(\"\");\r\n    setMiddleName(\"\");\r\n    setTelephoneNumber(\"\");\r\n    setAvatarLocal(\"\");\r\n    setFile(\"\");\r\n    setArrayCheckedPostsIds([]);\r\n    setArrayCheckedPostsNames([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (firstName && lastName && middleName && telephoneNumber.length == 12) {\r\n      setIsValid(true);\r\n    } else {\r\n      setIsValid(false);\r\n    }\r\n  }, [firstName, lastName, middleName, telephoneNumber]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const createUserAndCreatePost = async () => {\r\n    try {\r\n      await handleCreateUserButtonClick();\r\n      navigate(\"/pomoshnik/postNew\");\r\n    } catch (error) {\r\n      console.error(\"Ошибка в процессе создания пользователя:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dialog}>\r\n      <Headers\r\n        name={\"создание пользователя\"}\r\n        funcActiveHint={() => setOpenHint(true)}\r\n      >\r\n        <BottomHeaders></BottomHeaders>\r\n      </Headers>\r\n\r\n      <ConfigProvider locale={ruRU}>\r\n        <Tour\r\n          open={openHint}\r\n          onClose={() => setOpenHint(false)}\r\n          steps={steps}\r\n        />\r\n      </ConfigProvider>\r\n\r\n      <div className={classes.main}>\r\n        <div className={classes.block}>\r\n          <div className={classes.avatarContainer} data-tour=\"data-avatar\">\r\n            <img\r\n              src={avatarLocal || addCircle}\r\n              alt=\"avatar\"\r\n              className={classes.avatar}\r\n              onClick={handleAvatarClick}\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              ref={fileInputRef}\r\n              className={classes.hiddenInput}\r\n              onChange={imageUploadHandlerLocal}\r\n            />\r\n            <img\r\n              src={exitHeader}\r\n              title={\"удалить картинку\"}\r\n              onClick={deleteImage}\r\n              style={{ width: \"12px\", height: \"12px\" }}\r\n            ></img>\r\n          </div>\r\n\r\n          <div className={classes.column2}>\r\n            <div data-tour=\"data-form\" className={classes.column2}>\r\n              <Input\r\n                name={\"Имя\"}\r\n                value={firstName}\r\n                onChange={handleChangeFirstName}\r\n              ></Input>\r\n\r\n              <Input\r\n                name={\"Фамилия\"}\r\n                value={lastName}\r\n                onChange={handleChangeLastName}\r\n              ></Input>\r\n\r\n              <Input\r\n                name={\"Отчество\"}\r\n                value={middleName}\r\n                onChange={handleChangeMiddleName}\r\n              ></Input>\r\n\r\n              <Input name={\"Телефон\"} isShowInput={true}>\r\n                <InputMask\r\n                  mask=\"+9 (999) 999-99-99\"\r\n                  value={telephoneNumber}\r\n                  onChange={handleChangeTelephoneNumber}\r\n                  placeholder=\"+9 (999) 999-99-99\"\r\n                  required\r\n                >\r\n                  {(inputProps) => (\r\n                    <input {...inputProps} type=\"tel\" id=\"phone\" />\r\n                  )}\r\n                </InputMask>\r\n              </Input>\r\n            </div>\r\n\r\n            <ButtonAttach\r\n              dataTour=\"data-post\"\r\n              image={post}\r\n              onClick={() => setOpenModalSelectPosts(true)}\r\n              selectArray={arrayCheckedPostsNames}\r\n              prefix={\"Посты: \"}\r\n              btnName={\"Пикрепить посты\"}\r\n              disabled={!isValid}\r\n            ></ButtonAttach>\r\n\r\n            {openModalSelectPosts && (\r\n              <ModalSelectCheckBox\r\n                nameTable={\"Посты\"}\r\n                handleSearchValue={inputSearchModalCheckBox}\r\n                handleSearchOnChange={(e) =>\r\n                  setInputSearchModalCheckBox(e.target.value)\r\n                }\r\n                exit={exitsModalSelectPosts}\r\n                filterArray={filterArraySearchModalCheckBox}\r\n                array={postsWithoutUser}\r\n                arrayItem={\"postName\"}\r\n                handleChecboxChange={handleCheckboxChange}\r\n                arrayChecked={arrayCheckedPostsIds}\r\n                save={createUserAndCreatePost}\r\n                nameBtn={\"создать\"}\r\n                iconBtn={iconAdd}\r\n              ></ModalSelectCheckBox>\r\n            )}\r\n\r\n            <button\r\n              data-tour=\"data-save\"\r\n              onClick={handleCreateUserButtonClick}\r\n              className={classes.btnSave}\r\n              disabled={!isValid}\r\n            >\r\n              Сохранить\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <HandlerMutation\r\n          Loading={isLoadingUserMutation}\r\n          Error={isErrorUserMutation && localIsResponseUserMutation}\r\n          Success={isSuccessUserMutation && localIsResponseUserMutation}\r\n          textSuccess={`Пользователь ${firstName} ${lastName} ${middleName} создан`}\r\n          textError={\r\n            ErrorUserMutation?.data?.errors?.[0]?.errors?.[0]\r\n              ? ErrorUserMutation.data.errors[0].errors[0]\r\n              : ErrorUserMutation?.data?.message\r\n          }\r\n        ></HandlerMutation>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ButtonAction","_ref","create","update","refUpdate","refCreate","_jsxs","className","classes","wrapper","children","_jsx","ButtonImage","refAction","name","icon","iconAdd","onClick","Blacksavetmp","BottomHeaders","editText","ModalSelectCheckBox","nameTable","handleSearchValue","handleSearchOnChange","exit","filterArray","array","arrayItem","save","handleChecboxChange","arrayChecked","nameBtn","iconBtn","modal","modalWindow","src","exitModal","alt","header","item1","type","placeholder","value","onChange","search","item2","table","length","map","item","row","id","checked","includes","User","_ErrorUserMutation$da","_ErrorUserMutation$da2","_ErrorUserMutation$da3","_ErrorUserMutation$da4","_ErrorUserMutation$da5","firstName","setFirstName","useState","lastName","setLastName","middleName","setMiddleName","telephoneNumber","setTelephoneNumber","isValid","setIsValid","avatarLocal","setAvatarLocal","file","setFile","openModalSelectPosts","setOpenModalSelectPosts","arrayCheckedPostsIds","setArrayCheckedPostsIds","arrayCheckedPostsNames","setArrayCheckedPostsNames","openHint","setOpenHint","steps","title","description","target","document","querySelector","reduxSelectedOrganizationId","postUser","isLoadingUserMutation","isSuccessUserMutation","isErrorUserMutation","ErrorUserMutation","localIsResponseUserMutation","postsWithoutUser","isLoadingGetUserNew","isErrorGetUserNew","useUserHook","postImage","usePostImageMutation","dispatch","useDispatch","handleCreateUserButtonClick","async","userData","organizationId","formData","FormData","append","result","unwrap","avatar_url","filePath","error","console","JSON","stringify","reset","saveUpdatePost","setCreatedUserId","fileInputRef","useRef","filterArraySearchModalCheckBox","handleCheckboxChange","inputSearchModalCheckBox","setInputSearchModalCheckBox","useModalSelectCheckBox","setArrayChecked","updatePost","isLoadingUpdatePostMutation","isSuccessUpdatePostMutation","isErrorUpdatePostMutation","ErrorUpdatePostMutation","usePostsHook","createdUserId","Promise","all","_id","responsibleUserId","then","catch","concat","err","useEffect","navigate","useNavigate","dialog","Headers","funcActiveHint","ConfigProvider","locale","ruRU","Tour","open","onClose","main","block","avatarContainer","addCircle","avatar","handleAvatarClick","current","click","accept","ref","hiddenInput","e","fileInput","files","imageUrl","URL","createObjectURL","exitHeader","deleteImage","revokeObjectURL","style","width","height","column2","Input","lettersOnly","replace","formattedValue","charAt","toUpperCase","slice","isShowInput","InputMask","mask","cleanedPhone","required","inputProps","_objectSpread","ButtonAttach","dataTour","image","post","selectArray","prefix","btnName","disabled","exitsModalSelectPosts","filtered","selectPost","_postsWithoutUser$fin","find","postName","filter","Boolean","btnSave","HandlerMutation","Loading","Error","Success","textSuccess","textError","data","errors","message"],"sourceRoot":""}