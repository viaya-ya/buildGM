{"version":3,"file":"static/js/499.d63dcbfd.chunk.js","mappings":"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","sources":["UI/image/statisticsArrowLeft.svg","webpack://good_management/./src/UI/Custom/Lupa/Lupa.module.css?5dc2","UI/Custom/Lupa/Lupa.jsx","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","UI/image/statisticsArrowRight.svg","UI/image/subbarSearch.svg","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx","webpack://good_management/./src/UI/Custom/modalSelectRadio/ModalSelectRadio.module.css?504c","UI/Custom/modalSelectRadio/ModalSelectRadio.jsx","webpack://good_management/./src/UI/app/StatisticsPage/Statistic.module.css?929f","webpack://good_management/./src/UI/Custom/Graphic.module.css?4933","UI/Custom/Graphic.jsx","UI/image/trash.svg","UI/app/StatisticsPage/Statistic.jsx"],"sourcesContent":["var _desc, _defs, _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgStatisticsArrowLeft(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11.669983,\n    height: 19.799805,\n    viewBox: \"0 0 11.67 19.7998\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null)), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M11.67 1.77L9.89 0L0 9.89L9.9 19.79L11.67 18.02L3.53 9.89L11.67 1.77Z\",\n    fill: \"#005475\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgStatisticsArrowLeft);\nexport default __webpack_public_path__ + \"static/media/statisticsArrowLeft.f7936a0e8650e337baf9f5e86cf7fa65.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"Lupa_ul__62RG9\",\"li\":\"Lupa_li__pnKTR\",\"activeText\":\"Lupa_activeText__DK-A7\",\"completedText\":\"Lupa_completedText__68tEA\"};","import React, { useRef, useEffect } from \"react\";\nimport classes from \"./Lupa.module.css\";\nimport subbarSearch from \"../../image/subbarSearch.svg\";\n\nexport default function Lupa({\n  setIsOpenSearch,\n  isOpenSearch,\n  select,\n\n  projects,\n  archivesProjects,\n  projectsWithProgram,\n  archivesProjectsWithProgram,\n\n  programs,\n  archivesPrograms,\n\n  array,\n  arrayItem,\n  positionBottomStyle,\n\n  refLupa,\n}) {\n  const selectRef = useRef(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\n        setIsOpenSearch(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [setIsOpenSearch, refLupa]);\n\n  return (\n    <div ref={selectRef}>\n      <img\n        ref={refLupa}\n        src={subbarSearch}\n        alt=\"subbarSearch\"\n        onClick={() => {\n          setIsOpenSearch(true);\n        }}\n      />\n      {isOpenSearch && (\n        <ul\n          className={classes.ul}\n          style={{\n            bottom: positionBottomStyle,\n          }}\n        >\n          {projects?.length !== 0 && projects && (\n            <li value=\"Активные\" disabled className={classes.activeText}>\n              Активные\n            </li>\n          )}\n\n          {projects?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {archivesProjects?.length !== 0 && archivesProjects && (\n            <li value=\"Завершенные\" disabled className={classes.completedText}>\n              Завершенные\n            </li>\n          )}\n\n          {archivesProjects?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                className={classes.li}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {projectsWithProgram?.length !== 0 && projectsWithProgram && (\n            <li\n              value=\"Проекты с программами\"\n              disabled\n              className={classes.activeText}\n            >\n              Проекты с программами\n            </li>\n          )}\n\n          {projectsWithProgram?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {archivesProjectsWithProgram?.length !== 0 &&\n            archivesProjectsWithProgram && (\n              <li\n                value=\"Архивные проекты с программами\"\n                disabled\n                className={classes.completedText}\n              >\n                Архивные проекты с программами\n              </li>\n            )}\n\n          {archivesProjectsWithProgram?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {programs?.length !== 0 && programs && (\n            <li value=\"Активные\" disabled className={classes.activeText}>\n              Активные\n            </li>\n          )}\n\n          {programs?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {archivesPrograms?.length !== 0 && archivesPrograms && (\n            <li value=\"Завершенные\" disabled className={classes.completedText}>\n              Завершенные\n            </li>\n          )}\n\n          {archivesPrograms?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item.projectName}\n              </li>\n            );\n          })}\n\n          {array?.map((item) => {\n            return (\n              <li\n                key={item.id}\n                value={item.id}\n                onClick={() => {\n                  select(item.id);\n                  setIsOpenSearch(false);\n                }}\n                className={classes.li}\n              >\n                {item[arrayItem]}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__BUuuG\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__S7EYo\"};","import React from \"react\";\nimport classes from \"./ButtonAction.module.css\";\nimport iconAdd from \"../../../../image/iconAdd.svg\";\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\nexport default function ButtonAction({ create, update, refUpdate, refCreate }) {\n  return (\n    <div className={classes.wrapper}>\n      {create && (\n        <ButtonImage\n          refAction={refCreate}\n          name={\"создать\"}\n          icon={iconAdd}\n          onClick={create}\n        ></ButtonImage>\n      )}\n\n      {update && (\n        <ButtonImage\n          refAction={refUpdate}\n          name={\"обновить\"}\n          icon={Blacksavetmp}\n          onClick={update}\n        ></ButtonImage>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport classes from \"./BottomHeaders.module.css\"\nimport ButtonAction from './ButtonAction/ButtonAction'\n\nexport default function BottomHeaders({children, create, update,  refUpdate, refCreate}) {\n  return (\n    <div className={classes.editText}>\n        {children}\n        <ButtonAction create={create} update={update} refUpdate={refUpdate} refCreate={refCreate}></ButtonAction>\n    </div>\n  )\n}\n","var _desc, _defs, _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgStatisticsArrowRight(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 11.670044,\n    height: 19.799805,\n    viewBox: \"0 0 11.67 19.7998\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null)), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M0 18.02L1.78 19.79L11.67 9.89L1.77 0L0 1.77L8.13 9.89L0 18.02Z\",\n    fill: \"#005475\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgStatisticsArrowRight);\nexport default __webpack_public_path__ + \"static/media/statisticsArrowRight.3daf16467905e170a2a5537d09a742a8.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _rect, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSubbarSearch(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip8_4774\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip8_4774)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M10.33 9.33L9.8 9.33L9.61 9.15C10.41 8.21 10.83 6.94 10.6 5.59C10.29 3.73 8.74 2.26 6.87 2.03C4.05 1.68 1.68 4.05 2.03 6.87C2.25 8.74 3.73 10.29 5.59 10.6C6.94 10.83 8.21 10.41 9.15 9.61L9.33 9.8L9.33 10.33L12.16 13.16C12.43 13.43 12.88 13.43 13.15 13.16C13.43 12.89 13.43 12.44 13.15 12.17L10.33 9.33ZM6.33 9.33C4.67 9.33 3.33 7.99 3.33 6.33C3.33 4.67 4.67 3.33 6.33 3.33C7.99 3.33 9.33 4.67 9.33 6.33C9.33 7.99 7.99 9.33 6.33 9.33Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubbarSearch);\nexport default __webpack_public_path__ + \"static/media/subbarSearch.228587dc2f4983eef0e3a45c32fd687a.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__2Gves\"};","import React from \"react\";\nimport classes from \"./WaveLetters.module.css\";\nexport default function WaveLetters({ letters }) {\n  const arrayLetters = letters.split(\"\");\n  return (\n    <div className={classes.wave}>\n      {arrayLetters?.map((item, index) => (\n        <span key={index} style={{ \"--i\": index + 1 }}>\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\n        </span>\n      ))}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalSelectRadio_modal__NKc1b\",\"modalWindow\":\"ModalSelectRadio_modalWindow__5RkFz\",\"header\":\"ModalSelectRadio_header__6ISO7\",\"item1\":\"ModalSelectRadio_item1__OXY0f\",\"item2\":\"ModalSelectRadio_item2__V4lIS\",\"search\":\"ModalSelectRadio_search__asvAb\",\"exit\":\"ModalSelectRadio_exit__et8tp\",\"table\":\"ModalSelectRadio_table__ZIpre\",\"row\":\"ModalSelectRadio_row__smpE+\"};","import React from \"react\";\nimport classes from \"./ModalSelectRadio.module.css\";\nimport exitModal from \"@image/exitModal.svg\";\nimport Blacksavetmp from \"@image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\n\nexport function ModalSelectRadio({\n  nameTable,\n  handleSearchValue,\n  handleSearchOnChange,\n  exit,\n  filterArray,\n  array,\n  arrayItem,\n  selectedItemID,\n  handleRadioChange,\n  save,\n}) {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.modalWindow}>\n        <img\n          src={exitModal}\n          alt=\"exitModal\"\n          onClick={() => exit()}\n          className={classes.exit}\n        />\n\n        <div className={classes.header}>\n          <div className={classes.item1}>\n            <input\n              type=\"search\"\n              placeholder=\"Найти\"\n              value={handleSearchValue}\n              onChange={handleSearchOnChange}\n              className={classes.search}\n            />\n          </div>\n\n          {save && (\n            <div className={classes.item2}>\n              <ButtonImage\n                name={\"сохранить\"}\n                icon={Blacksavetmp}\n                onClick={save}\n              ></ButtonImage>\n            </div>\n          )}\n        </div>\n\n        <table className={classes.table}>\n          <thead>\n            <tr>\n              <th>{nameTable}</th>\n            </tr>\n          </thead>\n\n          {filterArray.length > 0 ? (\n            <tbody>\n              <tr>\n                <td>\n                  {filterArray?.map((item) => (\n                    <div\n                      key={item.id}\n                      className={classes.row}\n                      onClick={() => handleRadioChange(item.id, item)}\n                    >\n                      <input\n                        type=\"radio\"\n                        checked={selectedItemID === item.id}\n                      />\n                      {item[arrayItem]}\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          ) : (\n            <tbody>\n              <tr>\n                <td>\n                  {array?.map((item) => (\n                    <div\n                      key={item.id}\n                      className={classes.row}\n                      onClick={() => handleRadioChange(item.id, item)}\n                    >\n                      <input\n                        type=\"radio\"\n                        checked={selectedItemID === item.id}\n                      />\n                      {item[arrayItem]}\n                    </div>\n                  ))}\n                </td>\n              </tr>\n            </tbody>\n          )}\n        </table>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Statistic_dialog__Cbu9i\",\"header\":\"Statistic_header__pH+-5\",\"fon\":\"Statistic_fon__JP7td\",\"pomoshnikSearch\":\"Statistic_pomoshnikSearch__qnBb-\",\"pomoshnik\":\"Statistic_pomoshnik__CQ0BG\",\"iconBack\":\"Statistic_iconBack__m2V0j\",\"search\":\"Statistic_search__TXcQi\",\"spanPomoshnik\":\"Statistic_spanPomoshnik__6J8Y+\",\"editText\":\"Statistic_editText__II05V\",\"five\":\"Statistic_five__HK9Ts\",\"iconAdd\":\"Statistic_iconAdd__MdvSu\",\"iconSave\":\"Statistic_iconSave__Jua1O\",\"image\":\"Statistic_image__3-PtP\",\"main\":\"Statistic_main__SPIYw\",\"blockArrrow\":\"Statistic_blockArrrow__tzFtl\",\"block1\":\"Statistic_block1__UhU-B\",\"block2\":\"Statistic_block2__8rOtS\",\"block3\":\"Statistic_block3__LMeol\",\"row2\":\"Statistic_row2__JK97+\",\"row1\":\"Statistic_row1__lEqBa\",\"element\":\"Statistic_element__SqAT-\",\"addPoint\":\"Statistic_addPoint__DMwyp\",\"deletePoint\":\"Statistic_deletePoint__ZllQj\",\"points\":\"Statistic_points__qGb+h\",\"item\":\"Statistic_item__x1Ly9\",\"date\":\"Statistic_date__4vcFZ\",\"number\":\"Statistic_number__AuAix\",\"textGrey\":\"Statistic_textGrey__z7nKi\",\"modal\":\"Statistic_modal__nbKgB\",\"modalTable\":\"Statistic_modalTable__RWkRw\",\"exitImage\":\"Statistic_exitImage__SmwEo\",\"row\":\"Statistic_row__sT2iA\",\"tableHeader\":\"Statistic_tableHeader__HNfWg\",\"iconSaveModal\":\"Statistic_iconSaveModal__j06O9\",\"itemHover\":\"Statistic_itemHover__BSWPU\",\"active\":\"Statistic_active__BNbuW\",\"itemName\":\"Statistic_itemName__DSZe6\",\"select\":\"Statistic_select__yamP1\",\"div\":\"Statistic_div__KBisZ\",\"modalDelete\":\"Statistic_modalDelete__NWOfQ\",\"modalDeleteElement\":\"Statistic_modalDeleteElement__iXQ6s\",\"modalRow1\":\"Statistic_modalRow1__PnjBy\",\"modalRow2\":\"Statistic_modalRow2__yZiju\",\"btnYes\":\"Statistic_btnYes__5f-7E\",\"btnNo\":\"Statistic_btnNo__3W1rx\",\"textBtnYes\":\"Statistic_textBtnYes__z+BO-\",\"textBtnNo\":\"Statistic_textBtnNo__Yjm0V\",\"text\":\"Statistic_text__Lz4Hv\",\"textMontserrat\":\"Statistic_textMontserrat__hbHUe\",\"tableHeading\":\"Statistic_tableHeading__PlauL\",\"tableHintWrapper\":\"Statistic_tableHintWrapper__N4ykR\"};","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"Graphic_block__5hOFr\",\"row1\":\"Graphic_row1__I9Rbv\"};","import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport classes from \"./Graphic.module.css\";\nimport getDateFormatSatatistic from \"../Custom/Function/getDateFormatStatistic\";\n\nconst Graphic = ({\n  colorFirstPoint,\n  data,\n  name,\n  setName,\n  typeGraphic,\n  type,\n}) => {\n  const svgRef = useRef();\n  const [nameStatistics, setNameStatistics] = useState(name);\n\n  const [width, setWidth] = useState(880);\n  const [height, setHeight] = useState(600);\n\n  useEffect(() => {\n    setNameStatistics(name);\n  }, [name]);\n\n  useEffect(() => {\n    setName(nameStatistics);\n  }, [nameStatistics]);\n\n  // Обновляем ширину и высоту в зависимости от типа графика\n  useEffect(() => {\n    const updateDimensions = () => {\n      let newWidth, newHeight;\n\n      if (typeGraphic === \"26\" || !typeGraphic) {\n        if (window.innerWidth > 1400) {\n          newWidth = 900;\n          newHeight = 600;\n        } else if (window.innerWidth > 800) {\n          newWidth = 700;\n          newHeight = 400;\n        }\n      } else {\n        if (typeGraphic === \"52\") {\n          if (window.innerWidth > 1400) {\n            newWidth = 1200;\n            newHeight = 600;\n          } else if (window.innerWidth > 800) {\n            newWidth = 880;\n            newHeight = 400;\n          }\n        } else {\n          if (window.innerWidth > 1400) {\n            newWidth = 500;\n            newHeight = 600;\n          } else if (window.innerWidth > 800) {\n            newWidth = 400;\n            newHeight = 400;\n          }\n        }\n      }\n      setWidth(newWidth);\n      setHeight(newHeight);\n    };\n\n    // Устанавливаем начальные значения и добавляем слушатель события resize\n    updateDimensions();\n    window.addEventListener(\"resize\", updateDimensions);\n\n    // Удаляем слушатель при размонтировании компонента\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, [typeGraphic]);\n\n  useEffect(() => {\n    data.sort((a, b) => new Date(a.valueDate) - new Date(b.valueDate));\n\n    // const formatDate = d3.timeFormat(\"%d.%m.%y\");\n    // const parseDate = d3.timeParse(\"%Y-%m-%d\");\n\n    const margin = { top: 40, right: 30, bottom: 80, left: 50 };\n\n    const minValue = d3.min(data, (d) => d.value);\n    const maxValue = d3.max(data, (d) => d.value);\n\n    // Устанавливаем верхнюю границу оси Y с небольшим запасом\n    const upperLimit = maxValue * 1.1; // Увеличиваем максимальное значение на 10%\n\n    const x = d3\n      .scalePoint()\n      .domain(\n        data.map((d) =>\n          d.valueDate === \"\" || d.valueDate === null\n            ? \"дата\"\n            : getDateFormatSatatistic(d.valueDate, typeGraphic)\n        )\n      )\n      .range([margin.left, width - margin.right])\n      .padding(0);\n\n    // Если type === \"Обратная\", то ось Y будет инвертирована, а верхний предел будет больше\n    const y =\n      type === \"Обратная\"\n        ? d3\n            .scaleLinear()\n            .domain([0, upperLimit]) // Начинаем с 0 для обратного типа\n            .nice()\n            .range([margin.top, height - margin.bottom])\n        : d3\n            .scaleLinear()\n            .domain([0, upperLimit]) // Начинаем с 0 для обычного типа\n            .nice()\n            .range([height - margin.bottom, margin.top]);\n\n    const line = d3\n      .line()\n      .x((d) =>\n        x(\n          d.valueDate === \"\" || d.valueDate === null\n            ? \"дата\"\n            : getDateFormatSatatistic(d.valueDate, typeGraphic)\n        )\n      )\n      .y((d) => y(d.value))\n      .defined((d) => d.value !== null);\n\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    const tickValues = data.map((d) =>\n      d.valueDate === \"\" || d.valueDate === null\n        ? \"дата\"\n        : getDateFormatSatatistic(d.valueDate, typeGraphic)\n    );\n\n    // Получаем значения для горизонтальных линий сетки с использованием y.ticks()\n    const yTickValues = y.ticks(5); // Используем метод ticks() для точных значений\n\n    // Добавляем вертикальные линии сетки\n    svg\n      .selectAll(\".grid-vertical\")\n      .data(tickValues)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"grid-vertical\")\n      .attr(\"x1\", (d) => x(d))\n      .attr(\"x2\", (d) => x(d))\n      .attr(\"y1\", margin.top)\n      .attr(\"y2\", height - margin.bottom)\n      .attr(\"stroke\", \"#4a4a4a\") // Темный цвет для сетки\n      .attr(\"stroke-width\", 1)\n      .attr(\"opacity\", 0.3);\n\n    // Добавляем горизонтальные линии сетки\n    svg\n      .selectAll(\".grid-horizontal\")\n      .data(yTickValues)\n      .enter()\n      .append(\"line\")\n      .attr(\"class\", \"grid-horizontal\")\n      .attr(\"x1\", margin.left)\n      .attr(\"x2\", width - margin.right)\n      .attr(\"y1\", (d) => y(d))\n      .attr(\"y2\", (d) => y(d))\n      .attr(\"stroke\", \"#4a4a4a\") // Темный цвет для сетки\n      .attr(\"stroke-width\", 1)\n      .attr(\"opacity\", 0.3);\n\n    const xAxis = d3.axisBottom(x);\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(xAxis)\n      .selectAll(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"dx\", \"-10px\")\n      .attr(\"dy\", \"-5px\")\n      .style(\"font-weight\", \"bold\")\n      .style(\"font-size\", \"12px\");\n\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y).ticks(5).tickFormat(d3.format(\".2s\"))); // Format Y axis\n\n    data.forEach((d, i) => {\n      if (i > 0) {\n        const prevValue = data[i - 1].value;\n        // Reverse the line color logic based on the 'type' prop\n        const color =\n          type === \"Обратная\"\n            ? d.value < prevValue\n              ? \"blue\"\n              : \"red\" // Reverse logic for line color\n            : d.value < prevValue\n            ? \"red\"\n            : \"blue\"; // Normal logic for line color\n\n        svg\n          .append(\"path\")\n          .datum([data[i - 1], d])\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", color)\n          .attr(\"stroke-width\", 2)\n          .attr(\"d\", line);\n      }\n    });\n\n    const getColor = (value, index) => {\n      if (index === 0) {\n        if (colorFirstPoint === undefined || colorFirstPoint === null)\n          return \"blue\";\n        const colorPoint = value >= colorFirstPoint ? \"blue\" : \"red\";\n        return colorPoint;\n      }\n      if (index > 0) {\n        const prevValue = data[index - 1].value;\n        // Reverse the color logic for points as well\n        return type === \"Обратная\"\n          ? value < prevValue\n            ? \"blue\"\n            : \"red\" // Reverse logic for points\n          : value < prevValue\n          ? \"red\"\n          : \"blue\"; // Normal logic for points\n      } else {\n        return \"blue\";\n      }\n    };\n\n    svg\n      .selectAll(\"circle\")\n      .data(data)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", (d) =>\n        x(\n          d.valueDate === \"\" || d.valueDate === null\n            ? \"дата\"\n            : getDateFormatSatatistic(d.valueDate, typeGraphic)\n        )\n      )\n      .attr(\"cy\", (d) => y(d.value))\n      .attr(\"r\", 5)\n      .attr(\"fill\", (d, i) => getColor(d.value, i)) // Apply the reversed color logic here\n      .on(\"mouseover\", (event, d) => {\n        d3.select(event.currentTarget).attr(\"r\", 7).attr(\"fill\", \"orange\");\n\n        const tooltipX = x(\n          d.valueDate === \"\" || d.valueDate === null\n            ? \"дата\"\n            : getDateFormatSatatistic(d.valueDate, typeGraphic)\n        );\n        const tooltipY = y(d.value) - 15;\n\n        // Формируем текст для тултипа\n        const dateText = `Дата: ${\n          d.valueDate === \"\" || d.valueDate === null\n            ? \"дата\"\n            : getDateFormatSatatistic(d.valueDate, typeGraphic)\n        }`;\n        const valueText = `Значение: ${d.value}`;\n        const textWidth = Math.max(dateText.length, valueText.length) * 6; // Оценочная ширина в пикселях\n\n        // Ширина тултипа\n        const tooltipWidth = Math.max(120, textWidth + 20);\n        const tooltipHeight = 50;\n\n        // Проверка на выход за границы\n        const isTopOutOfBound = tooltipY - tooltipHeight < margin.top;\n        const isRightOutOfBound =\n          tooltipX + tooltipWidth / 2 > width - margin.right;\n        const isLeftOutOfBound = tooltipX - tooltipWidth / 2 < margin.left;\n\n        let adjustedX = tooltipX;\n        if (isRightOutOfBound)\n          adjustedX = width - margin.right - tooltipWidth / 2;\n        else if (isLeftOutOfBound) adjustedX = margin.left + tooltipWidth / 2;\n\n        const adjustedY = isTopOutOfBound ? tooltipY + tooltipHeight : tooltipY;\n\n        // Получаем цвет точки\n        const pointColor = getColor(d.value, data.indexOf(d));\n\n        const tooltipGroup = svg\n          .append(\"g\")\n          .attr(\"id\", \"tooltip\")\n          .attr(\"transform\", `translate(${adjustedX}, ${adjustedY})`);\n\n        tooltipGroup\n          .append(\"rect\")\n          .attr(\"x\", -tooltipWidth / 2)\n          .attr(\"y\", isTopOutOfBound ? 0 : -tooltipHeight)\n          .attr(\"width\", tooltipWidth)\n          .attr(\"height\", tooltipHeight)\n          .attr(\"fill\", pointColor) // Используем цвет точки для фона тултипа\n          .attr(\"rx\", 4)\n          .attr(\"ry\", 4);\n\n        tooltipGroup\n          .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"y\", isTopOutOfBound ? 15 : -30)\n          .style(\"font-size\", \"11px\")\n          .style(\"fill\", \"white\")\n          .style(\"font-family\", \"Montserrat, sans-serif\")\n          .text(dateText);\n\n        tooltipGroup\n          .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"y\", isTopOutOfBound ? 35 : -10)\n          .style(\"font-size\", \"11px\")\n          .style(\"fill\", \"white\")\n          .style(\"font-family\", \"Montserrat, sans-serif\")\n          .text(valueText);\n      })\n      .on(\"mouseout\", (event) => {\n        const d = d3.select(event.currentTarget).datum();\n        const index = data.indexOf(d);\n        d3.select(event.currentTarget)\n          .attr(\"r\", 5)\n          .attr(\"fill\", getColor(d.value, index)); // Apply the reversed color logic here\n        svg.select(\"#tooltip\").remove();\n      });\n  }, [colorFirstPoint, data, width, height, type]);\n\n  return (\n    <div className={classes.block}>\n      <input\n        type=\"text\"\n        value={nameStatistics}\n        onChange={(e) => setNameStatistics(e.target.value)}\n        className={classes.row1}\n      />\n      <svg ref={svgRef} className={classes.row2}></svg>\n    </div>\n  );\n};\n\nexport default Graphic;\n","var _desc, _defs, _rect, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgTrash(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip3_1213\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / delete\",\n    width: 24,\n    height: 24,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / delete\",\n    width: 24,\n    height: 24,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip3_1213)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M9 3L9 4L4 4L4 6L5 6L5 19C5 19.53 5.21 20.03 5.58 20.41C5.96 20.78 6.46 21 7 21L17 21C17.53 21 18.03 20.78 18.41 20.41C18.78 20.03 19 19.53 19 19L19 6L20 6L20 4L15 4L15 3L9 3ZM7 6L17 6L17 19L7 19L7 6ZM9 8L9 17L11 17L11 8L9 8ZM13 8L13 17L15 17L15 8L13 8Z\",\n    fill: \"currentColor\",\n    fillOpacity: 1,\n    fillRule: \"evenodd\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrash);\nexport default __webpack_public_path__ + \"static/media/trash.cf4b0aaeea7b410bb3b8b02d2a07d42f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./Statistic.module.css\";\n\nimport Graphic from \"@Custom/Graphic.jsx\";\nimport Blacksavetmp from \"@image/Blacksavetmp.svg\";\nimport statisticsArrowLeft from \"@image/statisticsArrowLeft.svg\";\nimport statisticsArrowRight from \"@image/statisticsArrowRight.svg\";\nimport trash from \"@image/trash.svg\";\nimport addBlock from \"@image/iconAdd.svg\";\nimport hint from \"@image/hint.svg\";\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\nimport exit from \"@image/exitModal.svg\";\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\nimport getDateFormatSatatistic from \"@Custom/Function/getDateFormatStatistic.js\";\nimport Headers from \"@Custom/Headers/Headers\";\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\nimport Select from \"@Custom/Select/Select\";\nimport Input from \"@Custom/Input/Input\";\nimport Lupa from \"@Custom/Lupa/Lupa\";\nimport { ModalSelectRadio } from \"@Custom/modalSelectRadio/ModalSelectRadio\";\nimport { useModalSelectRadio } from \"@hooks\";\nimport { useStatisticsHook } from \"@hooks\";\nimport { usePostsHook } from \"@hooks\";\nimport { useOrganizationHook } from \"@hooks\";\n\nimport _ from \"lodash\";\n\nimport { ConfigProvider, Tour } from \"antd\";\nimport ruRU from \"antd/locale/ru_RU\";\n\nexport default function Statistic() {\n  const [colorFirstPoint, setColorFirstPoint] = useState();\n  // Организация\n  const {\n    reduxSelectedOrganizationId,\n    reduxSelectedOrganizationReportDay,\n\n    currentOrganization,\n    isLoadingOrganizationId,\n    isFetchingOrganizationId,\n\n    updateOrganization,\n    isLoadingUpdateOrganizationMutation,\n    isSuccessUpdateOrganizationMutation,\n    isErrorUpdateOrganizationMutation,\n    ErrorOrganization,\n    localIsResponseUpdateOrganizationMutation,\n  } = useOrganizationHook();\n\n  const [openModalForCreated, setOpenModalForCreated] = useState(false);\n\n  const [isOpenSearch, setIsOpenSearch] = useState(false);\n\n  const [statisticId, setStatisticId] = useState(\"\");\n\n  const [name, setName] = useState();\n  const [type, setType] = useState();\n  const [postId, setPostId] = useState();\n\n  const [description, setDescription] = useState(\"\");\n\n  const [receivedPoints, setReceivedPoints] = useState([]);\n  const [oldReceivedPoints, setOldReceivedPoints] = useState([]);\n  const [createPoints, setCreatePoints] = useState([]);\n\n  const [reportDay, setReportDay] = useState(\n    reduxSelectedOrganizationReportDay\n  );\n\n  useEffect(() => {\n    if (\n      reduxSelectedOrganizationReportDay !== undefined &&\n      reduxSelectedOrganizationReportDay !== null\n    ) {\n      setReportDay(reduxSelectedOrganizationReportDay);\n    }\n  }, [reduxSelectedOrganizationReportDay]);\n\n  const [typeGraphic, setTypeGraphic] = useState(\"Ежедневный\");\n  const [disabledPoints, setDisabledPoints] = useState(false);\n\n  const [arrayPoints, setArrayPoints] = useState([]);\n  const [showPoints, setShowPoints] = useState([]);\n\n  const [openModal, setOpenModal] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const [count, setCount] = useState(0);\n\n  const [openModalReportDay, setOpenModalReportDay] = useState(false);\n  const [showReportDay, setShowReportDay] = useState();\n  const [showReportDayComes, setShowReportDayComes] = useState();\n\n  const [showCorrelationPoint, setShowCorrelationPoint] = useState([]);\n\n  const refDay = useRef(null);\n  const refName = useRef(null);\n  const refArrowLeft = useRef(null);\n  const refArrowRight = useRef(null);\n  const refLupa = useRef(null);\n  const refType = useRef(null);\n  const refPost = useRef(null);\n  const refTypeGraphic = useRef(null);\n  const refDescription = useRef(null);\n  const refCreate = useRef(null);\n  const refUpdate = useRef(null);\n  const refAddPoint = useRef(null);\n  const refDeletePoint = useRef(null);\n\n  const [open, setOpen] = useState(false);\n\n  const steps = [\n    {\n      title: \"Отчетный день\",\n      description:\n        \"Выберите и поменяйте отчетный день (Отчетный день поменяется у всей организации)\",\n      target: () => refDay.current, // Добавляем проверку\n    },\n\n    {\n      title: \"Создать\",\n      description: \"Нажмите для создания статистики\",\n      target: () => refCreate.current,\n    },\n    {\n      title: \"Сохранить\",\n      description: \"Нажмите для сохранения статистики\",\n      target: () => refUpdate.current,\n    },\n\n    {\n      title: \"Назад\",\n      description: \"Нажмите для смещения графика назад\",\n      target: () => refArrowLeft.current,\n      disabled: !statisticId,\n    },\n    {\n      title: \"Вперед\",\n      description: \"Нажмите для смещения графика вперед\",\n      target: () => refArrowRight.current,\n      disabled: !statisticId,\n    },\n\n    {\n      title: \"Создание точки\",\n      description: \"Нажмите для добавления точки на график\",\n      target: () => refAddPoint.current,\n      disabled: !statisticId,\n    },\n    {\n      title: \"Удаление точки\",\n      description: \"Нажмите для удаления только что созданной точки\",\n      target: () => refDeletePoint.current,\n      disabled: !statisticId,\n    },\n\n    {\n      title: \"Название статистики\",\n      description: \"Здесь можно поменять название выбранной статистики\",\n      target: () => refName.current, // Добавляем проверку\n    },\n    {\n      title: \"Выбрать статистику\",\n      description: \"Нажмите и выберите пост\",\n      target: () => refLupa.current, // Добавляем проверку\n    },\n    {\n      title: \"Тип статистики\",\n      description: \"Здесь можно поменять тип статистики\",\n      target: () => (statisticId ? refType.current : null), // Добавляем проверку\n      disabled: !statisticId,\n    },\n    {\n      title: \"Пост\",\n      description: \"Здесь можно поменять пост у статистики\",\n      target: () => (statisticId ? refPost.current : null), // Добавляем проверку\n      disabled: !statisticId,\n    },\n    {\n      title: \"График\",\n      description: \"Здесь можно поменять тип отображаемого графика\",\n      target: () => (statisticId ? refTypeGraphic.current : null), // Добавляем проверку\n      disabled: !statisticId,\n    },\n    {\n      title: \"Описание\",\n      description: \"Описание графика\",\n      target: () => (statisticId ? refDescription.current : null), // Добавляем проверку\n      disabled: !statisticId,\n    },\n  ].filter((step) => !step.disabled);\n\n  const {\n    statistics,\n    isLoadingGetStatistics,\n    isFetchingGetStatistics,\n    isErrorGetStatistics,\n\n    currentStatistic,\n    statisticDatas,\n    isLoadingGetStatisticId,\n    isErrorGetStatisticId,\n    isFetchingGetStatisticId,\n\n    updateStatistics,\n    isLoadingUpdateStatisticMutation,\n    isSuccessUpdateStatisticMutation,\n    isErrorUpdateStatisticMutation,\n    ErrorUpdateStatisticMutation,\n    localIsResponseUpdateStatisticsMutation,\n\n    postStatistics,\n    isLoadingPostStatisticMutation,\n    isSuccessPostStatisticMutation,\n    isErrorPostStatisticMutation,\n    ErrorPostStatisticMutation,\n    localIsResponsePostStatisticsMutation,\n  } = useStatisticsHook({\n    statisticData: true,\n    statisticId: statisticId,\n  });\n\n  // Получение постов\n  const { allPosts, isLoadingGetPosts, isErrorGetPosts } = usePostsHook();\n\n  // Создание статистики\n  const {\n    selectedID: selectedPostIdForCreated,\n\n    handleRadioChange,\n    handleInputChangeModalSearch,\n\n    filterArraySearchModal,\n    inputSearchModal,\n  } = useModalSelectRadio({ array: allPosts, arrayItem: \"postName\" });\n\n  const functionOpenModalForCreated = () => {\n    setOpenModalForCreated(true);\n  };\n\n  const createStatistics = async () => {\n    await postStatistics({\n      name: \"Статистика\",\n      postId: selectedPostIdForCreated,\n    })\n      .unwrap()\n      .then((result) => {\n        setStatisticId(result.id);\n        setOpenModalForCreated(false);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  // Все для начальной страницы\n  const addPoint = () => {\n    setCreatePoints((prevState) => [\n      { valueDate: \"\", value: 0, id: new Date() },\n      ...prevState,\n    ]);\n  };\n\n  const deletePoint = () => {\n    setCreatePoints((prevState) => prevState.slice(0, -1));\n  };\n\n  const onChangePoints = (nameArrray, value, type, index, id) => {\n    if (nameArrray === \"received\") {\n      const updatedPoints = [...receivedPoints];\n      if (type === \"value\") {\n        updatedPoints[index][type] = Number(value);\n      } else {\n        updatedPoints[index][type] = value;\n      }\n      setReceivedPoints(updatedPoints);\n    } else {\n      setCreatePoints((prevState) => {\n        const updatedPoints = prevState.map((item) => {\n          if (item.id === id) {\n            return type === \"value\"\n              ? { ...item, value: Number(value) }\n              : { ...item, valueDate: value };\n          }\n          return item;\n        });\n\n        updatedPoints.sort(\n          (a, b) => Date.parse(b.valueDate) - Date.parse(a.valueDate)\n        );\n        return updatedPoints;\n      });\n    }\n  };\n\n  function compareArrays(oldArray, newArray) {\n    const changes = [];\n    newArray.forEach((newItem) => {\n      const oldItem = oldArray.find((item) => item.id === newItem.id);\n\n      if (oldItem) {\n        const itemChanges = {};\n\n        [\"value\", \"valueDate\"].forEach((key) => {\n          if (newItem[key] !== oldItem[key]) {\n            if (key == \"valueDate\") {\n              itemChanges[key] = new Date(newItem[key]);\n            } else {\n              itemChanges[key] = newItem[key];\n            }\n          }\n        });\n\n        if (Object.keys(itemChanges).length > 0) {\n          changes.push({ _id: newItem.id, ...itemChanges });\n        }\n      }\n    });\n\n    return changes;\n  }\n\n  const saveUpdateStatistics = async () => {\n    const Data = {};\n\n    if (Object.keys(currentStatistic).length == 0) return;\n\n    if (type !== currentStatistic?.type) {\n      Data.type = type;\n    }\n    if (name !== currentStatistic?.name) {\n      Data.name = name;\n    }\n    if (postId !== currentStatistic?.post?.id) {\n      Data.postId = postId;\n    }\n    if (description !== currentStatistic?.description) {\n      Data.description = description;\n    }\n    if (createPoints.length > 0) {\n      const array = createPoints.filter((item) => item.value !== \"\");\n      if (array.length > 0) {\n        const formatDate = array.map((item) => {\n          return {\n            value: item.value,\n            valueDate: new Date(item.valueDate),\n          };\n        });\n        Data.statisticDataCreateDtos = formatDate;\n      }\n    }\n    if (receivedPoints.length > 0) {\n      const array = compareArrays(oldReceivedPoints, receivedPoints);\n      if (array.length > 0) {\n        Data.statisticDataUpdateDtos = [];\n        Data.statisticDataUpdateDtos.push(...array);\n      }\n    }\n    if (Object.keys(Data).length > 0) {\n      await updateStatistics({\n        statisticId,\n        _id: statisticId,\n        ...Data,\n      })\n        .unwrap()\n        .then(() => {\n          if (Data.name) {\n            // refetch();\n          }\n\n          setOpenModalReportDay(false);\n        })\n        .catch((error) => {\n          console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (typeGraphic !== \"Ежедневный\") {\n      setDisabledPoints(true);\n    } else {\n      setDisabledPoints(false);\n    }\n  }, [typeGraphic]);\n\n  useEffect(() => {\n    if (currentStatistic?.name) {\n      setName(currentStatistic.name);\n    }\n\n    if (currentStatistic?.type) {\n      setType(currentStatistic.type);\n    }\n\n    if (currentStatistic?.description) {\n      setDescription(currentStatistic.description);\n    }\n\n    if (currentStatistic?.post?.id) {\n      setPostId(currentStatistic.post.id);\n    }\n  }, [currentStatistic.id]);\n\n  const countMonthsForGraphicYear = () => {\n    const monthlyData = statisticDatas.reduce((acc, item) => {\n      const itemDate = new Date(item.valueDate);\n      const monthKey = `${itemDate.getFullYear()}-${itemDate.getMonth() + 1}`; // Год-месяц как ключ\n      if (\n        !isNaN(itemDate) &&\n        item?.correlationType !== \"Год\" &&\n        new Date(\n          new Date().setFullYear(new Date().getFullYear() - 12 + count)\n        ) < itemDate\n      ) {\n        if (item?.correlationType === \"Месяц\") {\n          acc[monthKey] = {\n            id: item.id,\n            valueSum: item.value,\n            year: itemDate.getFullYear(),\n            month: itemDate.getMonth() + 1,\n            correlationType: \"Месяц\",\n          };\n        }\n\n        if (!acc[monthKey]) {\n          acc[monthKey] = {\n            valueSum: 0,\n            year: itemDate.getFullYear(),\n            month: itemDate.getMonth() + 1,\n          };\n        }\n\n        if (!acc[monthKey]?.correlationType) {\n          acc[monthKey].valueSum += item.value;\n        }\n      }\n      return acc;\n    }, {});\n\n    const monthlyArray = Object.keys(monthlyData).map((monthKey) => {\n      const { id, valueSum, year, month, correlationType } =\n        monthlyData[monthKey];\n\n      const lastDayOfMonth = new Date(year, month, 0);\n      const date = lastDayOfMonth.getDate();\n\n      return {\n        id: id || null,\n        valueDate: `${year}-${month}-${date}`,\n        value: valueSum,\n        correlationType: correlationType,\n      };\n    });\n\n    return monthlyArray;\n  };\n\n  useEffect(() => {\n    if (!statisticDatas.length) return;\n\n    setReceivedPoints([]);\n    setCreatePoints([]);\n    setOldReceivedPoints([]);\n    setArrayPoints([]);\n    setShowPoints([]);\n    setCount(0);\n    setShowCorrelationPoint([]);\n\n    if (typeGraphic === \"Ежедневный\") {\n      const dayNow = new Date();\n\n      const currentWeekday = dayNow.getDay(); // Текущий день недели (0 - Воскресенье, 1 - Понедельник и т.д.)\n\n      // Определяем начальную дату - ближайший предыдущий день `day`\n      const startDate = new Date(dayNow);\n      let dayDifference;\n\n      if (currentWeekday >= reportDay) {\n        dayDifference = currentWeekday - reportDay;\n      } else {\n        dayDifference = 7 - (reportDay - currentWeekday);\n      }\n\n      startDate.setDate(dayNow.getDate() - dayDifference);\n\n      // Вычисляем конечную дату (b = startDate + 7 дней)\n      const endDate = new Date(startDate);\n      endDate.setDate(startDate.getDate() + 7);\n\n      // Генерируем массив всех дат в диапазоне [startDate, endDate)\n      const allDates = [];\n      for (\n        let date = new Date(startDate);\n        date < endDate;\n        date.setDate(date.getDate() + 1)\n      ) {\n        allDates.push(new Date(date).toISOString().split(\"T\")[0]);\n      }\n\n      // Фильтруем данные и заполняем пропущенные даты\n      const filteredData = statisticDatas\n        ?.filter((item) => {\n          // Проверяем, если valueDate существует и валиден\n          const itemDate = item?.valueDate ? new Date(item.valueDate) : null;\n\n          // Если itemDate не валидная, пропускаем элемент\n          if (isNaN(itemDate?.getTime())) {\n            return false; // Пропускаем невалидные даты\n          }\n\n          // Проверяем, если startDate и endDate валидные\n          const isValidStartDate =\n            startDate instanceof Date && !isNaN(startDate.getTime());\n          const isValidEndDate =\n            endDate instanceof Date && !isNaN(endDate.getTime());\n\n          if (!isValidStartDate || !isValidEndDate) {\n            return false; // Пропускаем, если startDate или endDate невалидны\n          }\n\n          const itemDateStr = itemDate.toISOString().split(\"T\")[0];\n          const startDateStr = startDate.toISOString().split(\"T\")[0];\n          const endDateStr = endDate.toISOString().split(\"T\")[0];\n\n          // Возвращаем результат фильтрации\n          return (\n            startDateStr <= itemDateStr &&\n            itemDateStr < endDateStr &&\n            item.correlationType === null\n          );\n        })\n        ?.map((item) => ({\n          ...item,\n          valueDate: item.valueDate?.split(\"T\")[0], // Предполагаем, что valueDate - строка с датой\n        }));\n\n      const updatedPoints = [];\n      const _updatedPoints = [];\n      const _createdPoints = [];\n\n      allDates.forEach((date) => {\n        const existingPoint = filteredData.find(\n          (item) => item.valueDate === date\n        );\n\n        if (existingPoint) {\n          updatedPoints.push(existingPoint);\n          _updatedPoints.push({ ...existingPoint });\n        } else {\n          _createdPoints.push({\n            id: date,\n            valueDate: date,\n            value: \"\",\n          });\n        }\n      });\n\n      // Сортируем данные по убыванию даты\n      updatedPoints.sort(\n        (a, b) => new Date(b.valueDate) - new Date(a.valueDate)\n      );\n      _updatedPoints.sort(\n        (a, b) => new Date(b.valueDate) - new Date(a.valueDate)\n      );\n      _createdPoints.sort(\n        (a, b) => new Date(b.valueDate) - new Date(a.valueDate)\n      );\n\n      // Устанавливаем данные\n      setOldReceivedPoints(_updatedPoints);\n      setReceivedPoints(updatedPoints);\n      setCreatePoints(_createdPoints);\n\n      functionForColorFirstPoint(startDate);\n    }\n\n    if (typeGraphic === \"Ежемесячный\") {\n      const arrayPointsCorrelationTypeisMonth = statisticDatas.filter(\n        (item) => item.correlationType === \"Месяц\"\n      );\n      setShowCorrelationPoint(arrayPointsCorrelationTypeisMonth);\n\n      // Группируем данные по месяцам и суммируем `valueDate` за каждый месяц\n      const monthlyData = statisticDatas.reduce((acc, item) => {\n        const itemDate = new Date(item.valueDate);\n        const monthKey = `${itemDate.getFullYear()}-${itemDate.getMonth() + 1}`; // Год-месяц как ключ\n        if (\n          !isNaN(itemDate) &&\n          item?.correlationType !== \"Год\" &&\n          new Date(new Date().setMonth(new Date().getMonth() - 13)) < itemDate\n        ) {\n          if (item?.correlationType === \"Месяц\") {\n            acc[monthKey] = {\n              id: item.id,\n              valueSum: item.value,\n              year: itemDate.getFullYear(),\n              month: itemDate.getMonth() + 1,\n              correlationType: \"Месяц\",\n            };\n          }\n\n          if (!acc[monthKey]) {\n            acc[monthKey] = {\n              valueSum: 0,\n              year: itemDate.getFullYear(),\n              month: itemDate.getMonth() + 1,\n            };\n          }\n\n          if (!acc[monthKey]?.correlationType) {\n            acc[monthKey].valueSum += item.value;\n          }\n        }\n        return acc;\n      }, {});\n\n      // Формируем новый массив, включающий `valueDate` и `date` (последний день месяца)\n      const updatedMonthlyPoints = [];\n\n      // Для каждого месяца от 14 месяцев назад до текущего добавляем данные\n      for (let i = 0; i < 13; i++) {\n        const monthDate = new Date();\n        monthDate.setMonth(monthDate.getMonth() - i);\n        const monthKey = `${monthDate.getFullYear()}-${\n          monthDate.getMonth() + 1\n        }`;\n\n        // Если данных нет для этого месяца, создаем запись с суммой 0\n        if (!monthlyData[monthKey]) {\n          monthlyData[monthKey] = {\n            valueSum: 0,\n            year: monthDate.getFullYear(),\n            month: monthDate.getMonth() + 1,\n          };\n        }\n\n        const lastDayOfMonth = new Date(\n          monthDate.getFullYear(),\n          monthDate.getMonth() + 1,\n          0\n        ); // Получаем последний день месяца\n        const year = lastDayOfMonth.getFullYear();\n        const monthValue = lastDayOfMonth.getMonth() + 1; // Месяцы начинаются с 0\n        const date = lastDayOfMonth.getDate(); // Дата\n\n        updatedMonthlyPoints.push({\n          id: monthlyData[monthKey]?.id || null, // Если id не найден, присваиваем null\n          valueDate: `${year}-${monthValue}-${date}`,\n          value: monthlyData[monthKey].valueSum, // Сумма за месяц\n          ...(monthlyData[monthKey].correlationType\n            ? { correlationType: monthlyData[monthKey].correlationType }\n            : {}),\n        });\n      }\n\n      // Сортируем данные по дате, от последнего месяца к первому\n      updatedMonthlyPoints.sort(\n        (a, b) => new Date(b.valueDate) - new Date(a.valueDate)\n      );\n\n      setReceivedPoints(updatedMonthlyPoints);\n\n      functionForColorFirstPoint();\n    }\n\n    if (typeGraphic === \"Ежегодовой\") {\n      const arrayPointsCorrelationTypeisYear = statisticDatas.filter(\n        (item) => item.correlationType === \"Год\"\n      );\n      setShowCorrelationPoint(arrayPointsCorrelationTypeisYear);\n\n      const dataMonth = countMonthsForGraphicYear();\n      const dataWithCorrelationTypeYear = statisticDatas?.filter(\n        (item) =>\n          item.correlationType === \"Год\" &&\n          new Date().getFullYear() - 12 < new Date(item.valueDate).getFullYear()\n      );\n\n      const prepareData = dataMonth.reduce((acc, month) => {\n        const date = new Date(month.valueDate);\n        const yearKey = `${date.getFullYear()}`;\n\n        const elementWithSameYear = dataWithCorrelationTypeYear.find(\n          (el) => new Date(el.valueDate).getFullYear() === date.getFullYear()\n        );\n\n        if (elementWithSameYear && !acc[yearKey]) {\n          acc[yearKey] = {\n            id: month.id,\n            valueSum: elementWithSameYear.value,\n            correlationType: elementWithSameYear.correlationType,\n          };\n          return acc;\n        }\n\n        if (!acc[yearKey]) {\n          // Если года ещё нет в объекте, создаём новую запись\n          acc[yearKey] = {\n            valueSum: 0,\n            year: date.getFullYear(),\n          };\n        }\n\n        // Если у года нет свойства correlationType, добавляем значение к valueSum\n        if (!acc[yearKey]?.correlationType) {\n          acc[yearKey].valueSum += month.value;\n        }\n\n        return acc;\n      }, {});\n\n      const objectdataWithCorrelationTypeYear =\n        dataWithCorrelationTypeYear.reduce((acc, item) => {\n          const itemDate = new Date(item.valueDate);\n          const yearKey = `${itemDate.getFullYear()}`;\n          if (\n            new Date(new Date().setFullYear(new Date().getFullYear() - 12)) <\n            itemDate\n          ) {\n            if (!acc[yearKey]) {\n              acc[yearKey] = {\n                id: item.id,\n                valueSum: item.value,\n                correlationType: item.correlationType,\n              };\n            }\n          }\n\n          return acc;\n        }, {});\n\n      const prepareObjectData = _.merge(\n        {},\n        prepareData,\n        objectdataWithCorrelationTypeYear\n      );\n\n      const updatedYearPoints = [];\n\n      // Для каждого года от 13 лет назад до текущего добавляем данные\n      for (let i = 0; i < 12; i++) {\n        const yearDate = new Date();\n        yearDate.setFullYear(yearDate.getFullYear() - i);\n        const yearKey = `${yearDate.getFullYear()}`;\n\n        if (!prepareObjectData[yearKey]) {\n          prepareObjectData[yearKey] = {\n            valueSum: 0,\n            year: yearDate.getFullYear(),\n          };\n        }\n\n        updatedYearPoints.push({\n          id: prepareObjectData[yearKey]?.id || null,\n          valueDate: `${yearDate.getFullYear()}-01-01`,\n          value: prepareObjectData[yearKey].valueSum,\n          ...(prepareObjectData[yearKey].correlationType\n            ? { correlationType: prepareObjectData[yearKey].correlationType }\n            : {}),\n        });\n      }\n      updatedYearPoints.sort(\n        (a, b) => new Date(b.valueDate) - new Date(a.valueDate)\n      );\n      setReceivedPoints(updatedYearPoints);\n      functionForColorFirstPoint();\n    }\n\n    if (typeGraphic === \"13\" || typeGraphic === \"26\" || typeGraphic === \"52\") {\n      const today = new Date();\n      const end = new Date(today);\n      const start = new Date();\n      start.setDate(today.getDate() - (Number(typeGraphic) + 1) * 7);\n\n      const selectedDayOfWeek = parseInt(reportDay);\n      if (isNaN(selectedDayOfWeek)) {\n        throw new Error(\"selectedDayOfWeek должен быть числом.\");\n      }\n\n      const result = [];\n      let currentDate = new Date(start);\n\n      // Перемещаем currentDate на первый выбранный день недели\n      while (currentDate.getDay() !== selectedDayOfWeek) {\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n\n      // Цикл по неделям\n      while (currentDate <= end) {\n        const nextDate = new Date(currentDate);\n        nextDate.setDate(currentDate.getDate() + 7);\n\n        // Фильтруем и суммируем значения для текущей недели\n        const currentSum = statisticDatas\n          .filter((item) => {\n            const itemDate = new Date(item.valueDate);\n            const isValid =\n              currentDate <= itemDate &&\n              itemDate < nextDate &&\n              item.correlationType === null;\n\n            if (isValid) {\n              setArrayPoints((prevState) => [...prevState, item]);\n            }\n            return isValid;\n          })\n          .reduce((sum, item) => sum + item.value, 0);\n\n        // Создаем новую дату на день позже\n        const valueDate = new Date(nextDate.getTime() + 24 * 60 * 60 * 1000);\n\n        // Проверяем, что valueDate не позже сегодняшней даты\n        if (valueDate <= today) {\n          setArrayPoints((prevState) =>\n            prevState.map((item) =>\n              item.myID\n                ? { ...item }\n                : { ...item, myID: valueDate.toISOString().split(\"T\")[0] }\n            )\n          );\n\n          result.push({\n            value: currentSum,\n            valueDate: valueDate.toISOString().split(\"T\")[0],\n          });\n        }\n\n        currentDate = nextDate; // Переходим к следующей неделе\n      }\n\n      setReceivedPoints(\n        result.sort((a, b) => new Date(b.valueDate) - new Date(a.valueDate))\n      );\n    }\n  }, [\n    currentStatistic.id,\n    isLoadingGetStatisticId,\n    isFetchingGetStatisticId,\n    typeGraphic,\n  ]);\n\n  // Все для модального окна при нажатии на блок координат точек для статистики\n  const exitModal = () => {\n    setShowPoints([]);\n    setActiveIndex(null);\n    setOpenModal(false);\n  };\n\n  const showCurrentPoint = (id) => {\n    setOpenModal(true);\n\n    const end = new Date(id);\n    let start = new Date(id);\n\n    if (typeGraphic === \"Ежемесячный\") {\n      const elementcorrelationType = showCorrelationPoint.filter(\n        (item) => new Date(item.valueDate).toDateString() === end.toDateString()\n      );\n      if (elementcorrelationType.length > 0) {\n        setShowPoints(elementcorrelationType);\n      } else {\n        setShowPoints((prevState) => [\n          ...prevState,\n          { valueDate: end, value: \"\" },\n        ]);\n      }\n    }\n\n    if (typeGraphic === \"Ежегодовой\") {\n      const elementcorrelationType = showCorrelationPoint.filter(\n        (item) => new Date(item.valueDate).toDateString() === end.toDateString()\n      );\n      if (elementcorrelationType.length > 0) {\n        setShowPoints(elementcorrelationType);\n      } else {\n        setShowPoints((prevState) => [\n          ...prevState,\n          { valueDate: end, value: \"\" },\n        ]);\n      }\n    }\n\n    if (typeGraphic !== \"Ежемесячный\" && typeGraphic !== \"Ежегодовой\") {\n      start.setDate(end.getDate() - 7); //Вот тут происходит вычисление количества дат в модальном окне\n      const array = arrayPoints\n        .filter((item) => item.myID === id)\n        .sort((a, b) => new Date(a.valueDate) - new Date(b.valueDate));\n\n      const arrayNew = [];\n\n      if (array.length < 7) {\n        // Проходим по всем датам от start до end\n        while (start < end) {\n          // Ищем элемент, соответствующий текущей дате start\n          const foundItem = array.find(\n            (item) =>\n              new Date(item.valueDate).toDateString() === start.toDateString()\n          );\n\n          if (foundItem) {\n            // Если нашли, добавляем его в arrayNew\n            arrayNew.push(foundItem);\n          } else {\n            // Если не нашли, добавляем объект с нулевым значением\n            arrayNew.push({\n              valueDate: start.toISOString(), // Для сохранения даты в правильном формате\n              value: \"\",\n            });\n          }\n\n          // Переходим к следующему дню\n          start.setDate(start.getDate() + 1);\n        }\n        setShowPoints(arrayNew);\n      } else {\n        setShowPoints(array);\n      }\n    }\n  };\n\n  const updateModalPoint = (value, index) => {\n    if (index < 0 || index >= showPoints.length) return;\n\n    const update = showPoints.map((item) => ({\n      ...item,\n    }));\n\n    update[index] = {\n      ...update[index],\n      value: value === null ? \"\" : Number(value),\n\n      ...(typeGraphic === \"Ежегодовой\" ? { correlationType: \"Год\" } : {}),\n      ...(typeGraphic === \"Ежемесячный\" ? { correlationType: \"Месяц\" } : {}),\n    };\n\n    setShowPoints(update);\n  };\n\n  const saveModalPoints = async (array) => {\n    const Data = {};\n    if (typeGraphic === \"Ежемесячный\" || typeGraphic === \"Ежегодовой\") {\n      if (array[0][\"id\"]) {\n        const arrayReceived = array.map((item) => ({\n          _id: item.id,\n          value: item.value,\n          valueDate: item.valueDate,\n          ...(typeGraphic === \"Ежегодовой\"\n            ? { correlationType: item.correlationType }\n            : {}),\n          ...(typeGraphic === \"Ежемесячный\"\n            ? { correlationType: item.correlationType }\n            : {}),\n        }));\n        Data.statisticDataUpdateDtos = arrayReceived;\n      } else {\n        const formatDate = array.map((item) => {\n          return {\n            ...item,\n            valueDate: new Date(item.valueDate),\n\n            ...(typeGraphic === \"Ежегодовой\"\n              ? { correlationType: item.correlationType }\n              : {}),\n            ...(typeGraphic === \"Ежемесячный\"\n              ? { correlationType: item.correlationType }\n              : {}),\n          };\n        });\n        Data.statisticDataCreateDtos = formatDate;\n      }\n    } else {\n      const endArray = array.filter((item) => item.value != \"\");\n      const create = endArray.filter((item) => !item.id);\n      const received = endArray\n        .filter((item) => item.id)\n        .map((item) => ({\n          _id: item.id,\n          value: item.value,\n          valueDate: item.valueDate,\n        }));\n\n      if (create.length > 0) {\n        const formatDate = create.map((item) => {\n          return {\n            ...item,\n            valueDate: new Date(item.valueDate),\n          };\n        });\n        Data.statisticDataCreateDtos = formatDate;\n      }\n      if (received.length > 0) {\n        Data.statisticDataUpdateDtos = received;\n      }\n    }\n    await updateStatistics({\n      statisticId,\n      _id: statisticId,\n      ...Data,\n    })\n      .unwrap()\n      .then(() => {\n        setOpenModal(false);\n        setActiveIndex(null);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  //Для стрелок влева вправо график менять\n\n  const handleArrowLeftClick = () => {\n    setCount((prevCount) => prevCount - 1);\n  };\n\n  const handleArrowRightClick = () => {\n    setCount((prevCount) => prevCount + 1);\n  };\n\n  const functionForColorFirstPoint = (startDate) => {\n    if (typeGraphic === \"Ежедневный\") {\n      const colorFirstPoint = new Date(startDate);\n      colorFirstPoint.setDate(colorFirstPoint.getDate() + (count - 1));\n      const element = statisticDatas.find(\n        (item) =>\n          new Date(item.valueDate).toISOString().split(\"T\")[0] ===\n          colorFirstPoint.toISOString().split(\"T\")[0]\n      );\n      setColorFirstPoint(element?.value);\n    }\n\n    if (typeGraphic === \"Ежемесячный\") {\n      const oneMonth = statisticDatas.reduce((acc, item) => {\n        const itemDate = new Date(item.valueDate);\n        const monthKey = `${itemDate.getFullYear()}-${itemDate.getMonth() + 1}`; // Год-месяц как ключ\n\n        const minDate = new Date();\n        minDate.setMonth(minDate.getMonth() - 13 + count);\n        const maxDate = new Date();\n        maxDate.setMonth(maxDate.getMonth() - 12 + count);\n        if (\n          !isNaN(itemDate) &&\n          item?.correlationType !== \"Год\" &&\n          itemDate >= minDate &&\n          itemDate <= maxDate\n        ) {\n          if (item?.correlationType === \"Месяц\") {\n            acc[monthKey] = {\n              id: item.id,\n              valueSum: item.value,\n              year: itemDate.getFullYear(),\n              month: itemDate.getMonth() + 1,\n              correlationType: \"Месяц\",\n            };\n          }\n\n          if (!acc[monthKey]) {\n            acc[monthKey] = {\n              valueSum: 0,\n              year: itemDate.getFullYear(),\n              month: itemDate.getMonth() + 1,\n            };\n          }\n\n          if (!acc[monthKey]?.correlationType) {\n            acc[monthKey].valueSum += item.value;\n          }\n        }\n        return acc;\n      }, {});\n\n      const firstMonthData = Object.values(oneMonth)[0];\n      console.log(\"firstMonthData\", firstMonthData);\n      if (firstMonthData) {\n        setColorFirstPoint(firstMonthData.valueSum);\n      }\n\n      // const oneMonth = statisticDatas.reduce((acc, item) => {\n      //   const itemDate = new Date(item.valueDate);\n      //   const monthKey = `${itemDate.getFullYear()}-${itemDate.getMonth() + 1}`; // Год-месяц как ключ\n\n      //   const minDate = new Date();\n      //   minDate.setMonth(minDate.getMonth() - 13);\n      //   const maxDate = new Date();\n      //   maxDate.setMonth(maxDate.getMonth() - 12);\n      //   if (\n      //     !isNaN(itemDate) &&\n      //     item?.correlationType !== \"Год\" &&\n      //     itemDate >= minDate &&\n      //     itemDate <= maxDate\n      //   ) {\n      //     if (item?.correlationType === \"Месяц\") {\n      //       acc[monthKey] = {\n      //         id: item.id,\n      //         valueSum: item.value,\n      //         year: itemDate.getFullYear(),\n      //         month: itemDate.getMonth() + 1,\n      //         correlationType: \"Месяц\",\n      //       };\n      //     }\n\n      //     if (!acc[monthKey]) {\n      //       acc[monthKey] = {\n      //         valueSum: 0,\n      //         year: itemDate.getFullYear(),\n      //         month: itemDate.getMonth() + 1,\n      //       };\n      //     }\n\n      //     if (!acc[monthKey]?.correlationType) {\n      //       acc[monthKey].valueSum += item.value;\n      //     }\n      //   }\n      //   return acc;\n      // }, {});\n\n      // const firstMonthData = Object.values(oneMonth)[0];\n      // if (firstMonthData) {\n      //   setColorFirstPoint(firstMonthData.valueSum);\n      // }\n    }\n\n    if (typeGraphic === \"Ежегодовой\") {\n      const dataMonth = countMonthsForGraphicYear();\n      const startDate = new Date().getFullYear() - 12 + count;\n\n      const dataWithCorrelationTypeYear = statisticDatas?.filter(\n        (item) =>\n          item.correlationType === \"Год\" &&\n          startDate == new Date(item.valueDate).getFullYear()\n      );\n\n      const prepareData = dataMonth.reduce((acc, month) => {\n        const date = new Date(month.valueDate);\n        const yearKey = `${date.getFullYear()}`;\n\n        const elementWithSameYear = dataWithCorrelationTypeYear.find(\n          (el) => new Date(el.valueDate).getFullYear() === date.getFullYear()\n        );\n\n        if (elementWithSameYear && !acc[yearKey]) {\n          acc[yearKey] = {\n            id: month.id,\n            valueSum: elementWithSameYear.value,\n            correlationType: elementWithSameYear.correlationType,\n          };\n          return acc;\n        }\n\n        if (!acc[yearKey]) {\n          // Если года ещё нет в объекте, создаём новую запись\n          acc[yearKey] = {\n            valueSum: 0,\n            year: date.getFullYear(),\n          };\n        }\n\n        // Если у года нет свойства correlationType, добавляем значение к valueSum\n        if (!acc[yearKey]?.correlationType) {\n          acc[yearKey].valueSum += month.value;\n        }\n\n        return acc;\n      }, {});\n\n      const objectdataWithCorrelationTypeYear =\n        dataWithCorrelationTypeYear.reduce((acc, item) => {\n          const itemDate = new Date(item.valueDate).getFullYear();\n          const yearKey = `${itemDate}`;\n          if (startDate === itemDate) {\n            if (!acc[yearKey]) {\n              acc[yearKey] = {\n                id: item.id,\n                valueSum: item.value,\n                correlationType: item.correlationType,\n              };\n            }\n          }\n\n          return acc;\n        }, {});\n\n      const prepareObjectData = _.merge(\n        {},\n        prepareData,\n        objectdataWithCorrelationTypeYear\n      );\n\n      const firstYearData = Object.values(prepareObjectData)[0];\n      console.log(\"firstYearData\", firstYearData);\n      if (firstYearData) {\n        setColorFirstPoint(firstYearData.valueSum);\n      }\n    }\n  };\n\n  const updateStatisticsData = () => {\n    setReceivedPoints([]);\n    setArrayPoints([]);\n    setShowPoints([]);\n    setShowCorrelationPoint([]);\n\n    if (!statisticDatas.length) return;\n\n    if (typeGraphic === \"Ежедневный\") {\n      const dayNow = new Date();\n      const currentWeekday = dayNow.getDay(); // Текущий день недели (0 - Воскресенье, 1 - Понедельник и т.д.)\n\n      // Определяем начальную дату - ближайший предыдущий день `day`, не более 7 дней назад\n      const startDate = new Date(dayNow);\n      let dayDifference;\n\n      if (currentWeekday >= reportDay) {\n        dayDifference = currentWeekday - reportDay;\n      } else {\n        dayDifference = 7 - (reportDay - currentWeekday);\n      }\n\n      startDate.setDate(dayNow.getDate() - dayDifference);\n\n      // Ограничиваем начальную дату максимум 7 днями назад от текущего дня\n      const maxStartDate = new Date(dayNow);\n      maxStartDate.setDate(dayNow.getDate() - 7);\n\n      if (startDate < maxStartDate) {\n        startDate.setTime(maxStartDate.getTime());\n      }\n\n      // Создаем массив всех дат за последние 7 дней\n      const last7Days = [];\n      for (let i = count; i < 7 + count; i++) {\n        const date = new Date(startDate);\n        date.setDate(dayNow.getDate() + i);\n        last7Days.push(date.toISOString().split(\"T\")[0]);\n\n        if (i === count) {\n          functionForColorFirstPoint(startDate);\n        }\n      }\n\n      // Группируем данные по дате и фильтруем\n      const dataMap = statisticDatas.reduce((acc, item) => {\n        const itemDate = item.valueDate.split(\"T\")[0];\n        if (!item.correlationType) {\n          acc[itemDate] = {\n            ...item,\n            valueDate: itemDate,\n          };\n        }\n\n        return acc;\n      }, {});\n\n      // Создаем массив данных для последних 7 дней, добавляем нулевые значения, если данные отсутствуют\n      const updatedPoints = last7Days.map((date) => {\n        if (dataMap[date] && dataMap[date].correlationType === null) {\n          return dataMap[date];\n        } else {\n          return {\n            id: date,\n            valueDate: date,\n            value: \"\", // Заполняем нулевым значением, если данных за день нет\n          };\n        }\n      });\n\n      const crPoints = updatedPoints.filter((item) => item.value === \"\");\n      const _updatedPoints = updatedPoints.filter((item) => item.value !== \"\");\n\n      const updatedPoints1 = _updatedPoints.map((item) => ({ ...item }));\n\n      setOldReceivedPoints(updatedPoints1);\n      setReceivedPoints(_updatedPoints);\n      setCreatePoints(crPoints);\n    }\n\n    if (typeGraphic === \"Ежемесячный\") {\n      const arrayPointsCorrelationTypeisMonth = statisticDatas.filter(\n        (item) => item.correlationType === \"Месяц\"\n      );\n      setShowCorrelationPoint(arrayPointsCorrelationTypeisMonth);\n      // Группируем данные по месяцам и суммируем `valueDate` за каждый месяц\n      const monthlyData = statisticDatas.reduce((acc, item) => {\n        const itemDate = new Date(item.valueDate);\n        const monthKey = `${itemDate.getFullYear()}-${itemDate.getMonth() + 1}`; // Год-месяц как ключ\n        if (\n          !isNaN(itemDate) &&\n          new Date(new Date().setMonth(new Date().getMonth() - 14 + count)) <\n            itemDate\n        ) {\n          if (item?.correlationType === \"Месяц\") {\n            acc[monthKey] = {\n              id: item.id,\n              valueSum: item.value,\n              year: itemDate.getFullYear(),\n              month: itemDate.getMonth() + 1,\n              correlationType: \"Месяц\",\n            };\n          }\n          if (!acc[monthKey]) {\n            acc[monthKey] = {\n              valueSum: 0,\n              year: itemDate.getFullYear(),\n              month: itemDate.getMonth() + 1,\n            };\n          }\n\n          if (!acc[monthKey]?.correlationType) {\n            acc[monthKey].valueSum += item.value;\n          }\n        }\n        return acc;\n      }, {});\n\n      // Формируем новый массив, включающий `valueDate` и `date` (последний день месяца)\n      const updatedMonthlyPoints = [];\n\n      // Для каждого месяца от 14 месяцев назад до текущего добавляем данные\n      for (let i = new Date().getMonth() - 14 + count; i <= count; i++) {\n        const monthDate = new Date();\n        monthDate.setMonth(monthDate.getMonth() + i);\n        const monthKey = `${monthDate.getFullYear()}-${\n          monthDate.getMonth() + 1\n        }`;\n\n        // Если данных нет для этого месяца, создаем запись с суммой 0\n        if (!monthlyData[monthKey]) {\n          monthlyData[monthKey] = {\n            valueSum: 0,\n            year: monthDate.getFullYear(),\n            month: monthDate.getMonth() + 1,\n          };\n        }\n\n        const lastDayOfMonth = new Date(\n          monthDate.getFullYear(),\n          monthDate.getMonth() + 1,\n          0\n        ); // Получаем последний день месяца\n        const year = lastDayOfMonth.getFullYear();\n        const monthValue = lastDayOfMonth.getMonth() + 1; // Месяцы начинаются с 0\n        const date = lastDayOfMonth.getDate(); // Дата\n\n        updatedMonthlyPoints.push({\n          id: monthlyData[monthKey]?.id || null, // Если id не найден, присваиваем null\n          valueDate: `${year}-${monthValue}-${date}`, // Форматирование в 'год-месяц-день'\n          value: monthlyData[monthKey].valueSum, // Сумма за месяц\n          ...(monthlyData[monthKey].correlationType\n            ? { correlationType: monthlyData[monthKey].correlationType }\n            : {}),\n        });\n      }\n\n      // Сортируем данные по дате, от последнего месяца к первому\n      updatedMonthlyPoints.sort(\n        (a, b) => new Date(b.valueDate) - new Date(a.valueDate)\n      );\n\n      setReceivedPoints(updatedMonthlyPoints);\n\n      functionForColorFirstPoint();\n    }\n\n    if (typeGraphic === \"Ежегодовой\") {\n      const arrayPointsCorrelationTypeisYear = statisticDatas.filter(\n        (item) => item.correlationType === \"Год\"\n      );\n      setShowCorrelationPoint(arrayPointsCorrelationTypeisYear);\n\n      const dataMonth = countMonthsForGraphicYear();\n      const dataWithCorrelationTypeYear = statisticDatas?.filter(\n        (item) =>\n          item.correlationType === \"Год\" &&\n          new Date().getFullYear() - 12 + count <\n            new Date(item.valueDate).getFullYear()\n      );\n\n      const prepareData = dataMonth.reduce((acc, month) => {\n        const date = new Date(month.valueDate);\n        const yearKey = `${date.getFullYear()}`;\n\n        const elementWithSameYear = dataWithCorrelationTypeYear.find(\n          (el) => new Date(el.valueDate).getFullYear() === date.getFullYear()\n        );\n\n        if (elementWithSameYear && !acc[yearKey]) {\n          acc[yearKey] = {\n            id: month.id,\n            valueSum: elementWithSameYear.value,\n            correlationType: elementWithSameYear.correlationType,\n          };\n          return acc;\n        }\n\n        if (!acc[yearKey]) {\n          // Если года ещё нет в объекте, создаём новую запись\n          acc[yearKey] = {\n            valueSum: 0,\n            year: date.getFullYear(),\n          };\n        }\n\n        // Если у года нет свойства correlationType, добавляем значение к valueSum\n        if (!acc[yearKey]?.correlationType) {\n          acc[yearKey].valueSum += month.value;\n        }\n\n        return acc;\n      }, {});\n\n      const objectdataWithCorrelationTypeYear =\n        dataWithCorrelationTypeYear.reduce((acc, item) => {\n          const itemDate = new Date(item.valueDate);\n          const yearKey = `${itemDate.getFullYear()}`;\n          if (\n            new Date(\n              new Date().setFullYear(new Date().getFullYear() - 12 + count)\n            ) < itemDate\n          ) {\n            if (!acc[yearKey]) {\n              acc[yearKey] = {\n                id: item.id,\n                valueSum: item.value,\n                correlationType: item.correlationType,\n              };\n            }\n          }\n\n          return acc;\n        }, {});\n\n      const prepareObjectData = _.merge(\n        {},\n        prepareData,\n        objectdataWithCorrelationTypeYear\n      );\n      const updatedYearPoints = [];\n\n      // Для каждого года от 13 лет назад до текущего добавляем данные\n      for (\n        let i = new Date().getFullYear() - 11 + count;\n        i <= new Date().getFullYear() + count;\n        i++\n      ) {\n        const yearDate = new Date();\n        yearDate.setFullYear(i);\n        const yearKey = `${yearDate.getFullYear()}`;\n\n        // Если данных нет для этого года, создаем запись с суммой 0\n        if (!prepareObjectData[yearKey]) {\n          prepareObjectData[yearKey] = {\n            valueSum: 0,\n            year: yearDate.getFullYear(),\n          };\n        }\n\n        updatedYearPoints.push({\n          id: prepareObjectData[yearKey]?.id || null, // Если id не найден, присваиваем null\n          valueDate: `${yearDate.getFullYear()}-01-01`,\n          value: prepareObjectData[yearKey].valueSum, // Сумма за год\n          ...(prepareObjectData[yearKey].correlationType\n            ? { correlationType: prepareObjectData[yearKey].correlationType }\n            : {}),\n        });\n      }\n\n      updatedYearPoints.sort(\n        (a, b) => new Date(b.valueDate) - new Date(a.valueDate)\n      );\n      console.log(\"updatedYearPoints\", updatedYearPoints);\n      setReceivedPoints(updatedYearPoints);\n    }\n\n    if (typeGraphic === \"13\" || typeGraphic === \"26\" || typeGraphic === \"52\") {\n      const today = new Date();\n      today.setDate(today.getDate() + count * 7);\n      const end = new Date(today);\n\n      const start = new Date(end);\n      start.setDate(end.getDate() - (Number(typeGraphic) + 1) * 7);\n\n      const selectedDayOfWeek = parseInt(reportDay);\n      const result = [];\n\n      let currentDate = new Date(start);\n      let currentSum = 0;\n\n      // Перемещаем currentDate на первый выбранный день недели\n      while (currentDate.getDay() !== selectedDayOfWeek) {\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n\n      // Цикл по неделям\n      while (currentDate <= end) {\n        const nextDate = new Date(currentDate);\n        nextDate.setDate(currentDate.getDate() + 7);\n\n        // Фильтруем и суммируем значения для текущей недели\n        currentSum = statisticDatas\n          .filter((item) => {\n            const itemDate = new Date(item.valueDate);\n            if (\n              currentDate <= itemDate &&\n              itemDate < nextDate &&\n              item.correlationType === null\n            ) {\n              setArrayPoints((prevState) => [...prevState, item]);\n            }\n            return (\n              currentDate <= itemDate &&\n              itemDate < nextDate &&\n              item.correlationType === null\n            );\n          })\n          .reduce((sum, item) => sum + item.value, 0);\n\n        // Создаем новую дату на день позже\n        const valueDate = new Date(nextDate.getTime() + 24 * 60 * 60 * 1000);\n\n        // Проверяем, что valueDate не позже сегодняшней даты\n        if (valueDate <= today) {\n          setArrayPoints((prevState) =>\n            prevState.map((item) => {\n              if (item.myID) {\n                return { ...item };\n              } else {\n                return {\n                  ...item,\n                  myID: valueDate.toISOString().split(\"T\")[0],\n                };\n              }\n            })\n          );\n\n          result.push({\n            value: currentSum,\n            valueDate: valueDate.toISOString().split(\"T\")[0],\n          });\n        }\n\n        currentDate = nextDate; // Переходим к следующей неделе\n      }\n\n      setReceivedPoints(\n        result.sort((a, b) => new Date(b.valueDate) - new Date(a.valueDate))\n      );\n    }\n  };\n\n  useEffect(() => {\n    updateStatisticsData();\n  }, [count]);\n\n  // Все для модального окна при смене отчетного дня\n  const dayWeek = (day, func) => {\n    switch (Number(day)) {\n      case 0:\n        func(\"Воскресенье\");\n        break;\n      case 1:\n        func(\"Понедельник\");\n        break;\n      case 2:\n        func(\"Вторник\");\n        break;\n      case 3:\n        func(\"Среда\");\n        break;\n      case 4:\n        func(\"Четверг\");\n        break;\n      case 5:\n        func(\"Пятница\");\n        break;\n      case 6:\n        func(\"Суббота\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const save = () => {\n    console.log(`reportDay =${reportDay}`);\n    console.log(\n      `currentOrganization?.reportDay =${currentOrganization?.reportDay}`\n    );\n    if (reportDay != currentOrganization?.reportDay) {\n      setOpenModalReportDay(true);\n      dayWeek(reportDay, setShowReportDay);\n      dayWeek(currentOrganization?.reportDay, setShowReportDayComes);\n    } else {\n      saveUpdateStatistics();\n    }\n  };\n\n  const btnYes = async () => {\n    try {\n      await saveUpdateOrganization(); // Сначала выполняем обновление организации\n      localStorage.setItem(\"reportDay\", Number(reportDay));\n      setOpenModalReportDay(false);\n      // Добавляем задержку в 1 секунду\n      await new Promise((resolve) => setTimeout(resolve, 1500));\n\n      await saveUpdateStatistics(); // Затем обновляем статистику через секунду\n    } catch (error) {\n      console.error(\"Ошибка при выполнении операций:\", error);\n    }\n  };\n\n  const btnNo = () => {\n    saveUpdateStatistics();\n  };\n\n  const saveUpdateOrganization = async () => {\n    await updateOrganization({\n      _id: reduxSelectedOrganizationId,\n      reportDay: Number(reportDay),\n    })\n      .unwrap()\n      .then(() => {\n        setOpenModalReportDay(false);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  // Для кастомного Select\n  const weeksDay = [\n    { id: 1, value: \"Понедельник\" },\n    { id: 2, value: \"Вторник\" },\n    { id: 3, value: \"Среда\" },\n    { id: 4, value: \"Четверг\" },\n    { id: 5, value: \"Пятница\" },\n    { id: 6, value: \"Суббота\" },\n    { id: 0, value: \"Воскресенье\" },\n  ];\n\n  const selectType = [\n    { id: \"Прямая\", value: \"Прямая\" },\n    { id: \"Обратная\", value: \"Обратная\" },\n  ];\n\n  const selectViewGraphic = [\n    { id: \"Ежедневный\", value: \"Ежедневный\", view: \"Ежедневный\" },\n    { id: \"Ежемесячный\", value: \"Ежемесячный\", view: \"Ежемесячный\" },\n    { id: \"Ежегодовой\", value: \"Ежегодовой\", view: \"Ежегодовой\" },\n    { id: \"13\", value: \"13\", view: \"13 недель\" },\n    { id: \"26\", value: \"26\", view: \"26 недель\" },\n    { id: \"52\", value: \"52\", view: \"52 недели\" },\n  ];\n\n  const selectStatistics = (id) => {\n    setStatisticId(id);\n  };\n\n  return (\n    <div className={classes.dialog}>\n      <Headers name={\"статистика\"} funcActiveHint={() => setOpen(true)}>\n        <BottomHeaders\n          create={functionOpenModalForCreated}\n          update={save}\n          refCreate={refCreate}\n          refUpdate={refUpdate}\n        >\n          <Select\n            refSelect={refDay}\n            name={\"Отчетный день\"}\n            value={reportDay}\n            onChange={setReportDay}\n            array={weeksDay}\n            arrayItem={\"value\"}\n          ></Select>\n        </BottomHeaders>\n      </Headers>\n\n      <ConfigProvider locale={ruRU}>\n        <Tour open={open} onClose={() => setOpen(false)} steps={steps} />\n      </ConfigProvider>\n\n      <div className={classes.main}>\n        {isErrorGetStatistics && isErrorGetPosts ? (\n          <>\n            <HandlerQeury\n              Error={isErrorGetStatistics || isErrorGetPosts}\n            ></HandlerQeury>\n          </>\n        ) : (\n          <>\n            {isErrorGetStatisticId ? (\n              <HandlerQeury Error={isErrorGetStatisticId}></HandlerQeury>\n            ) : (\n              <>\n                <HandlerQeury\n                  Loading={isLoadingGetStatistics}\n                  Fetching={isFetchingGetStatistics}\n                ></HandlerQeury>\n\n                <HandlerQeury Loading={isLoadingGetPosts}></HandlerQeury>\n\n                {isFetchingGetStatisticId || isLoadingGetStatisticId ? (\n                  <HandlerQeury\n                    Loading={isLoadingGetStatisticId}\n                    Fetching={isFetchingGetStatisticId}\n                  ></HandlerQeury>\n                ) : (\n                  <>\n                    {currentStatistic.id ? (\n                      <>\n                        <div className={classes.block1}>\n                          <Graphic\n                            colorFirstPoint={colorFirstPoint}\n                            data={[...receivedPoints, ...createPoints]}\n                            name={name}\n                            setName={setName}\n                            typeGraphic={typeGraphic}\n                            type={type}\n                          ></Graphic>\n\n                          <div className={classes.blockArrrow}>\n                            <div\n                              ref={refArrowLeft}\n                              className={classes.statisticsArrow}\n                            >\n                              <img\n                                src={statisticsArrowLeft}\n                                alt=\"statisticsArrowLeftWhite\"\n                                onClick={handleArrowLeftClick}\n                              />\n                            </div>\n                            <div\n                              ref={refArrowRight}\n                              className={classes.statisticsArrow}\n                            >\n                              <img\n                                src={statisticsArrowRight}\n                                alt=\"statisticsArrowRightWhite\"\n                                onClick={handleArrowRightClick}\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className={classes.block2}>\n                          <div\n                            ref={refAddPoint}\n                            className={classes.addPoint}\n                            onClick={addPoint}\n                          >\n                            <img src={addBlock} alt=\"addBlock\" />\n                          </div>\n\n                          {statisticId !== \"\" ? (\n                            <div className={classes.points}>\n                              {createPoints\n                                ?.sort(\n                                  (a, b) =>\n                                    Date.parse(b.valueDate) -\n                                    Date.parse(a.valueDate)\n                                )\n                                ?.map((item, index) => {\n                                  if (item.valueDate === \"\") {\n                                    item.valueDate = new Date()\n                                      .toISOString()\n                                      .split(\"T\")[0];\n                                  }\n                                  return (\n                                    <div key={index} className={classes.item}>\n                                      <input\n                                        type=\"date\"\n                                        value={item.valueDate}\n                                        onChange={(e) => {\n                                          onChangePoints(\n                                            \"\",\n                                            e.target.value,\n                                            \"valueDate\",\n                                            null,\n                                            item.id\n                                          );\n                                        }}\n                                        className={classes.date}\n                                      />\n                                      <input\n                                        type=\"text\"\n                                        value={item.value}\n                                        inputMode=\"numeric\"\n                                        placeholder=\"—\"\n                                        onChange={(e) => {\n                                          const newValue =\n                                            e.target.value.replace(\n                                              /[^0-9]/g,\n                                              \"\"\n                                            );\n                                          onChangePoints(\n                                            \"\",\n                                            newValue,\n                                            \"value\",\n                                            null,\n                                            item.id\n                                          );\n                                        }}\n                                        className={classes.number}\n                                      />\n                                    </div>\n                                  );\n                                })}\n\n                              {receivedPoints?.map((item, index) => {\n                                if (typeGraphic === \"Ежедневный\") {\n                                  return (\n                                    <div key={index} className={classes.item}>\n                                      <input\n                                        type=\"date\"\n                                        value={item.valueDate}\n                                        onChange={(e) => {\n                                          onChangePoints(\n                                            \"received\",\n                                            e.target.value,\n                                            \"valueDate\",\n                                            index,\n                                            null\n                                          );\n                                        }}\n                                        className={`${classes.date}`}\n                                        disabled={disabledPoints}\n                                      />\n\n                                      <input\n                                        type=\"text\"\n                                        value={item.value}\n                                        onChange={(e) => {\n                                          const newValue =\n                                            e.target.value.replace(\n                                              /[^0-9]/g,\n                                              \"\"\n                                            );\n                                          onChangePoints(\n                                            \"received\",\n                                            newValue,\n                                            \"value\",\n                                            index,\n                                            null\n                                          );\n                                        }}\n                                        className={classes.number}\n                                        disabled={disabledPoints}\n                                      />\n                                    </div>\n                                  );\n                                } else {\n                                  return (\n                                    <div\n                                      key={index}\n                                      className={`${classes.item}  ${\n                                        classes.itemHover\n                                      }  ${\n                                        activeIndex === index\n                                          ? classes.active\n                                          : \"\"\n                                      }`}\n                                      onClick={() => {\n                                        setActiveIndex(index);\n                                        showCurrentPoint(item.valueDate);\n                                      }}\n                                    >\n                                      <span\n                                        disabled={disabledPoints}\n                                        className={`${classes.date} ${classes.textGrey}`}\n                                      >\n                                        {getDateFormatSatatistic(\n                                          item.valueDate,\n                                          typeGraphic\n                                        )}\n                                      </span>\n\n                                      <span\n                                        className={`${classes.number} ${classes.textGrey}`}\n                                        disabled={disabledPoints}\n                                      >\n                                        {item.value}\n                                      </span>\n                                    </div>\n                                  );\n                                }\n                              })}\n                            </div>\n                          ) : (\n                            <></>\n                          )}\n\n                          <div\n                            ref={refDeletePoint}\n                            className={classes.deletePoint}\n                            onClick={deletePoint}\n                          >\n                            <img src={trash} alt=\"trash\" />\n                          </div>\n                        </div>\n\n                        <div className={classes.block3}>\n                          <div className={classes.row1}>\n                            <Input\n                              refInput={refName}\n                              name={\"Статистика\"}\n                              value={name}\n                              onChange={setName}\n                            >\n                              <Lupa\n                                refLupa={refLupa}\n                                setIsOpenSearch={setIsOpenSearch}\n                                isOpenSearch={isOpenSearch}\n                                select={selectStatistics}\n                                array={statistics}\n                                arrayItem={\"name\"}\n                                positionBottomStyle={\"0\"}\n                              ></Lupa>\n                            </Input>\n\n                            <Select\n                              refSelect={refType}\n                              name={\"Тип\"}\n                              value={type}\n                              onChange={setType}\n                              array={selectType}\n                              arrayItem={\"value\"}\n                            ></Select>\n\n                            <Select\n                              refSelect={refPost}\n                              name={\"Пост\"}\n                              value={postId}\n                              onChange={setPostId}\n                              array={allPosts}\n                              arrayItem={\"postName\"}\n                            ></Select>\n\n                            <Select\n                              refSelect={refTypeGraphic}\n                              name={\"График\"}\n                              value={typeGraphic}\n                              onChange={setTypeGraphic}\n                              array={selectViewGraphic}\n                              arrayItem={\"view\"}\n                            ></Select>\n                          </div>\n\n                          <div className={classes.row2}>\n                            <textarea\n                              ref={refDescription}\n                              placeholder=\"Описание статистики: что и как считать\"\n                              value={description}\n                              onChange={(e) => setDescription(e.target.value)}\n                              className={classes.textMontserrat}\n                            ></textarea>\n                          </div>\n                        </div>\n\n                        <HandlerMutation\n                          Loading={isLoadingPostStatisticMutation}\n                          Error={\n                            isErrorPostStatisticMutation &&\n                            localIsResponsePostStatisticsMutation\n                          } // Учитываем ручной сброс\n                          Success={\n                            isSuccessPostStatisticMutation &&\n                            localIsResponsePostStatisticsMutation\n                          } // Учитываем ручной сброс\n                          textSuccess={\"Статистика создана\"}\n                          textError={\n                            ErrorPostStatisticMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? ErrorPostStatisticMutation.data.errors[0]\n                                  .errors[0]\n                              : ErrorPostStatisticMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n\n                        <HandlerMutation\n                          Loading={isLoadingUpdateStatisticMutation}\n                          Error={\n                            isErrorUpdateStatisticMutation &&\n                            localIsResponseUpdateStatisticsMutation\n                          } // Учитываем ручной сброс\n                          Success={\n                            isSuccessUpdateStatisticMutation &&\n                            localIsResponseUpdateStatisticsMutation\n                          } // Учитываем ручной сброс\n                          textSuccess={\"Статистика обновлена\"}\n                          textError={\n                            ErrorUpdateStatisticMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? ErrorUpdateStatisticMutation.data.errors[0]\n                                  .errors[0]\n                              : ErrorUpdateStatisticMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n\n                        {openModal && (\n                          <>\n                            <div className={classes.modal}>\n                              <table className={classes.modalTable}>\n                                <div className={classes.tableHeader}>\n                                  {typeGraphic === \"Ежемесячный\" ||\n                                  typeGraphic === \"Ежегодовой\" ? (\n                                    <div className={classes.tableHeading}>\n                                      <span>Значение за месяц</span>\n                                      <div className={classes.tableHintWrapper}>\n                                        <img\n                                          src={hint}\n                                          alt=\"hint\"\n                                          className={classes.tableHint}\n                                        />\n                                      </div>\n                                    </div>\n                                  ) : (\n                                    <div className=\"\"></div>\n                                  )}\n\n                                  <div className={classes.iconSaveModal}>\n                                    <img\n                                      src={Blacksavetmp}\n                                      alt=\"Blacksavetmp\"\n                                      className={classes.image}\n                                      onClick={() => {\n                                        saveModalPoints(showPoints);\n                                      }}\n                                    />\n                                  </div>\n                                </div>\n\n                                <img\n                                  src={exit}\n                                  alt=\"exit\"\n                                  onClick={exitModal}\n                                  className={classes.exitImage}\n                                />\n\n                                <thead>\n                                  <tr>\n                                    <th>Дата</th>\n                                    <th>Значение</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr>\n                                    <td>\n                                      {showPoints?.map((item) => (\n                                        <div\n                                          key={item.id}\n                                          className={classes.row}\n                                        >\n                                          <span\n                                            className={`${classes.date} ${classes.textGrey}`}\n                                          >\n                                            {getDateFormatSatatistic(\n                                              item.valueDate,\n                                              typeGraphic\n                                            )}\n                                          </span>\n                                        </div>\n                                      ))}\n                                    </td>\n\n                                    <td>\n                                      {showPoints?.map((item, index) => (\n                                        <div\n                                          key={item.id}\n                                          className={classes.row}\n                                        >\n                                          <input\n                                            type=\"text\"\n                                            inputMode=\"numeric\"\n                                            placeholder=\"—\"\n                                            value={\n                                              item.value === null ||\n                                              item.value === \"\"\n                                                ? \"\"\n                                                : item.value\n                                            }\n                                            onChange={(e) => {\n                                              const newValue =\n                                                e.target.value.replace(\n                                                  /[^0-9]/g,\n                                                  \"\"\n                                                );\n                                              updateModalPoint(\n                                                newValue === \"\"\n                                                  ? null\n                                                  : newValue,\n                                                index\n                                              );\n                                            }}\n                                          />\n                                        </div>\n                                      ))}\n                                    </td>\n                                  </tr>\n                                </tbody>\n                              </table>\n                            </div>\n                          </>\n                        )}\n                      </>\n                    ) : (\n                      <>\n                        <WaveLetters\n                          letters={\"Выберите статистику\"}\n                        ></WaveLetters>\n                        <div className={classes.block1}></div>\n                        <div className={classes.block2}></div>\n                        <div className={classes.block3}>\n                          <div className={classes.row1}>\n                            <Input\n                              refInput={refName}\n                              name={\"Статистика\"}\n                              value={name}\n                              onChange={setName}\n                            >\n                              <Lupa\n                                refLupa={refLupa}\n                                setIsOpenSearch={setIsOpenSearch}\n                                isOpenSearch={isOpenSearch}\n                                select={selectStatistics}\n                                array={statistics}\n                                arrayItem={\"name\"}\n                                positionBottomStyle={\"0\"}\n                              ></Lupa>\n                            </Input>\n                          </div>\n                          <div className={classes.row2}>\n                            <textarea\n                              disabled\n                              placeholder=\"Описание статистики: что и как считать\"\n                            ></textarea>\n                          </div>\n                        </div>\n                      </>\n                    )}\n\n                    {openModalReportDay && (\n                      <>\n                        <div className={classes.modalDelete}>\n                          <div className={classes.modalDeleteElement}>\n                            <img\n                              src={exit}\n                              alt=\"exit\"\n                              className={classes.exitImage}\n                              onClick={() => setOpenModalReportDay(false)}\n                            />\n                            <div className={classes.modalRow1}>\n                              <span className={classes.text}>\n                                Вы поменяли отчетный день с <span> </span>\n                                <span style={{ fontWeight: \"700\" }}>\n                                  {showReportDayComes}\n                                </span>\n                                <span> на </span>\n                                <span style={{ fontWeight: \"700\" }}>\n                                  {showReportDay}\n                                </span>\n                                . Если подтвердите действие, то отчетный день\n                                поменяется у всей организации.\n                              </span>\n                            </div>\n\n                            <div className={classes.modalRow2}>\n                              <button\n                                className={`${classes.btnYes} ${classes.textBtnYes}`}\n                                onClick={btnYes}\n                              >\n                                Да\n                              </button>\n                              <button\n                                className={`${classes.btnNo} ${classes.textBtnNo}`}\n                                onClick={btnNo}\n                              >\n                                Нет\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </>\n                    )}\n\n                    <HandlerMutation\n                      Loading={isLoadingUpdateOrganizationMutation}\n                      Error={\n                        isErrorUpdateOrganizationMutation &&\n                        localIsResponseUpdateOrganizationMutation\n                      }\n                      Success={\n                        isSuccessUpdateOrganizationMutation &&\n                        localIsResponseUpdateOrganizationMutation\n                      }\n                      textSuccess={`Обновился отчетный день у организации на ${showReportDay}`}\n                      textError={\n                        ErrorOrganization?.data?.errors?.[0]?.errors?.[0]\n                          ? ErrorOrganization.data.errors[0].errors[0]\n                          : ErrorOrganization?.data?.message\n                      }\n                    ></HandlerMutation>\n\n                    {openModalForCreated && (\n                      <ModalSelectRadio\n                        nameTable={\"Название поста\"}\n                        handleSearchValue={inputSearchModal}\n                        handleSearchOnChange={handleInputChangeModalSearch}\n                        handleRadioChange={handleRadioChange}\n                        exit={() => {\n                          setOpenModalForCreated(false);\n                        }}\n                        filterArray={filterArraySearchModal}\n                        array={allPosts}\n                        arrayItem={\"postName\"}\n                        selectedItemID={selectedPostIdForCreated}\n                        save={createStatistics}\n                      ></ModalSelectRadio>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["Lupa","_ref","setIsOpenSearch","isOpenSearch","select","projects","archivesProjects","projectsWithProgram","archivesProjectsWithProgram","programs","archivesPrograms","array","arrayItem","positionBottomStyle","refLupa","selectRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","ref","children","_jsx","src","subbarSearch","alt","onClick","className","classes","ul","style","bottom","length","value","disabled","activeText","map","item","id","li","projectName","completedText","ButtonAction","create","update","refUpdate","refCreate","wrapper","ButtonImage","refAction","name","icon","iconAdd","Blacksavetmp","BottomHeaders","editText","WaveLetters","letters","arrayLetters","split","wave","index","ModalSelectRadio","nameTable","handleSearchValue","handleSearchOnChange","exit","filterArray","selectedItemID","handleRadioChange","save","modal","modalWindow","exitModal","header","item1","type","placeholder","onChange","search","item2","table","row","checked","colorFirstPoint","data","setName","typeGraphic","svgRef","nameStatistics","setNameStatistics","useState","width","setWidth","height","setHeight","updateDimensions","newWidth","newHeight","window","innerWidth","sort","a","b","Date","valueDate","margin","upperLimit","d3","d","x","domain","getDateFormatSatatistic","range","padding","y","nice","line","defined","selectAll","remove","svg","attr","tickValues","yTickValues","ticks","enter","append","xAxis","call","tickFormat","forEach","i","prevValue","color","datum","getColor","undefined","on","currentTarget","tooltipX","tooltipY","dateText","valueText","textWidth","Math","max","tooltipWidth","isTopOutOfBound","adjustedX","adjustedY","pointColor","indexOf","tooltipGroup","text","block","e","row1","row2","Statistic","_createPoints$sort","_ErrorPostStatisticMu","_ErrorPostStatisticMu2","_ErrorPostStatisticMu3","_ErrorPostStatisticMu4","_ErrorPostStatisticMu5","_ErrorUpdateStatistic","_ErrorUpdateStatistic2","_ErrorUpdateStatistic3","_ErrorUpdateStatistic4","_ErrorUpdateStatistic5","_ErrorOrganization$da","_ErrorOrganization$da2","_ErrorOrganization$da3","_ErrorOrganization$da4","_ErrorOrganization$da5","setColorFirstPoint","reduxSelectedOrganizationId","reduxSelectedOrganizationReportDay","currentOrganization","isLoadingOrganizationId","isFetchingOrganizationId","updateOrganization","isLoadingUpdateOrganizationMutation","isSuccessUpdateOrganizationMutation","isErrorUpdateOrganizationMutation","ErrorOrganization","localIsResponseUpdateOrganizationMutation","useOrganizationHook","openModalForCreated","setOpenModalForCreated","statisticId","setStatisticId","setType","postId","setPostId","description","setDescription","receivedPoints","setReceivedPoints","oldReceivedPoints","setOldReceivedPoints","createPoints","setCreatePoints","reportDay","setReportDay","setTypeGraphic","disabledPoints","setDisabledPoints","arrayPoints","setArrayPoints","showPoints","setShowPoints","openModal","setOpenModal","activeIndex","setActiveIndex","count","setCount","openModalReportDay","setOpenModalReportDay","showReportDay","setShowReportDay","showReportDayComes","setShowReportDayComes","showCorrelationPoint","setShowCorrelationPoint","refDay","refName","refArrowLeft","refArrowRight","refType","refPost","refTypeGraphic","refDescription","refAddPoint","refDeletePoint","open","setOpen","steps","title","filter","step","statistics","isLoadingGetStatistics","isFetchingGetStatistics","isErrorGetStatistics","currentStatistic","statisticDatas","isLoadingGetStatisticId","isErrorGetStatisticId","isFetchingGetStatisticId","updateStatistics","isLoadingUpdateStatisticMutation","isSuccessUpdateStatisticMutation","isErrorUpdateStatisticMutation","ErrorUpdateStatisticMutation","localIsResponseUpdateStatisticsMutation","postStatistics","isLoadingPostStatisticMutation","isSuccessPostStatisticMutation","isErrorPostStatisticMutation","ErrorPostStatisticMutation","localIsResponsePostStatisticsMutation","useStatisticsHook","statisticData","allPosts","isLoadingGetPosts","isErrorGetPosts","usePostsHook","selectedID","selectedPostIdForCreated","handleInputChangeModalSearch","filterArraySearchModal","inputSearchModal","useModalSelectRadio","onChangePoints","nameArrray","updatedPoints","Number","prevState","parse","saveUpdateStatistics","async","_currentStatistic$pos","Data","Object","keys","post","formatDate","statisticDataCreateDtos","oldArray","newArray","changes","newItem","oldItem","find","itemChanges","key","push","_id","compareArrays","statisticDataUpdateDtos","unwrap","then","catch","error","console","JSON","stringify","_currentStatistic$pos2","countMonthsForGraphicYear","monthlyData","reduce","acc","itemDate","monthKey","getFullYear","getMonth","_acc$monthKey","isNaN","correlationType","setFullYear","valueSum","year","month","getDate","_statisticDatas$filte","dayNow","currentWeekday","getDay","startDate","dayDifference","setDate","endDate","allDates","date","toISOString","filteredData","getTime","isValidStartDate","isValidEndDate","itemDateStr","startDateStr","endDateStr","_item$valueDate","_updatedPoints","_createdPoints","existingPoint","functionForColorFirstPoint","arrayPointsCorrelationTypeisMonth","_acc$monthKey2","setMonth","updatedMonthlyPoints","_monthlyData$monthKey","monthDate","lastDayOfMonth","monthValue","arrayPointsCorrelationTypeisYear","dataMonth","dataWithCorrelationTypeYear","prepareData","_acc$yearKey","yearKey","elementWithSameYear","el","objectdataWithCorrelationTypeYear","prepareObjectData","_","updatedYearPoints","_prepareObjectData$ye","yearDate","today","end","start","selectedDayOfWeek","parseInt","Error","result","currentDate","nextDate","currentSum","isValid","sum","myID","element","oneMonth","minDate","maxDate","_acc$monthKey3","firstMonthData","values","log","_acc$yearKey2","firstYearData","updateStatisticsData","maxStartDate","setTime","last7Days","dataMap","crPoints","updatedPoints1","_acc$monthKey4","_monthlyData$monthKey2","_acc$yearKey3","_prepareObjectData$ye2","dayWeek","day","func","saveUpdateOrganization","selectStatistics","dialog","Headers","funcActiveHint","functionOpenModalForCreated","Select","refSelect","ConfigProvider","locale","ruRU","Tour","onClose","main","_Fragment","HandlerQeury","Loading","Fetching","block1","Graphic","blockArrrow","statisticsArrow","statisticsArrowLeft","handleArrowLeftClick","prevCount","statisticsArrowRight","handleArrowRightClick","block2","addPoint","addBlock","points","inputMode","newValue","replace","number","itemHover","active","elementcorrelationType","toDateString","arrayNew","foundItem","showCurrentPoint","textGrey","deletePoint","slice","trash","block3","Input","refInput","view","textMontserrat","HandlerMutation","Success","textSuccess","textError","errors","message","modalTable","tableHeader","tableHeading","tableHintWrapper","hint","tableHint","iconSaveModal","image","arrayReceived","endArray","received","saveModalPoints","exitImage","updateModalPoint","modalDelete","modalDeleteElement","modalRow1","fontWeight","modalRow2","btnYes","textBtnYes","localStorage","setItem","Promise","resolve","setTimeout","btnNo","textBtnNo"],"sourceRoot":""}