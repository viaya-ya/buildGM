{"version":3,"file":"static/js/101.c9dd1b30.chunk.js","mappings":"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","sources":["UI/app/Project/desktop/Program/CustomTableProgram.jsx","UI/app/Project/desktop/Program/DrawerUpdateProgram.jsx","UI/app/Project/desktop/Program/Program.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Table, Form } from \"antd\";\r\n\r\nimport { createStyles } from \"antd-style\";\r\n\r\nimport useCustomTableProgram from \"../../componentLogic/useCustomTableProgram\";\r\n\r\nconst useStyle = createStyles(({ css, token }) => {\r\n  const { antCls } = token;\r\n  return {\r\n    customTable: css`\r\n      ${antCls}-table {\r\n        ${antCls}-table-container {\r\n          ${antCls}-table-body,\r\n          ${antCls}-table-content {\r\n            scrollbar-width: thin;\r\n            scrollbar-color: #eaeaea transparent;\r\n            scrollbar-gutter: stable;\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  };\r\n});\r\n\r\nexport default function CustomTableProgram({\r\n  expandedRowKeys,\r\n  setExpandedRowKeys,\r\n  form,\r\n  selectedProgramId,\r\n  targetStateOnProduct,\r\n  setTargetStateOnProduct,\r\n\r\n  disabledTable,\r\n  tables,\r\n  setTables,\r\n  isLoadingGetProjectId,\r\n  isFetchingGetProjectId,\r\n  targets,\r\n  currentProjects,\r\n  posts,\r\n  projects,\r\n  selectedProjectIds,\r\n  setSelectedProjectIds,\r\n  setDescriptionProgram,\r\n  descriptionProgram,\r\n}) {\r\n  const { styles } = useStyle();\r\n\r\n  const stylesColumnProjectPopconfim = {\r\n    placement: \"rightBottom\",\r\n  };\r\n\r\n  const stylesColumnProjectSelect = {\r\n    style: { width: \"100%\" },\r\n    placement: \"topLeft\",\r\n  };\r\n\r\n  const stylesColumnSelect = {\r\n    style: { width: \"100%\" },\r\n    placement: \"topLeft\",\r\n  };\r\n\r\n  const stylesColumnDate = {\r\n    style: { width: \"100%\" },\r\n  };\r\n\r\n  const { groupColumns, dataWithGroups, expandableConfig } =\r\n    useCustomTableProgram({\r\n      expandedRowKeys,\r\n      setExpandedRowKeys,\r\n      form,\r\n      selectedProgramId,\r\n      targetStateOnProduct,\r\n      setTargetStateOnProduct,\r\n\r\n      disabledTable,\r\n      tables,\r\n      setTables,\r\n      isLoadingGetProjectId,\r\n      isFetchingGetProjectId,\r\n      targets,\r\n      currentProjects,\r\n      posts,\r\n      projects,\r\n      selectedProjectIds,\r\n      setSelectedProjectIds,\r\n      setDescriptionProgram,\r\n      descriptionProgram,\r\n\r\n      stylesColumnProjectPopconfim,\r\n      stylesColumnProjectSelect,\r\n      stylesColumnSelect,\r\n      stylesColumnDate,\r\n    });\r\n\r\n  return (\r\n    <Form form={form} disabled={disabledTable}>\r\n      <Table\r\n        bordered\r\n        className={styles.customTable}\r\n        loading={isLoadingGetProjectId || isFetchingGetProjectId}\r\n        columns={groupColumns}\r\n        dataSource={dataWithGroups}\r\n        rowKey=\"key\"\r\n        pagination={false}\r\n        scroll={{ x: \"max-content\", y: \"calc(100vh - 320px)\" }}\r\n        style={{ width: \"100%\" }}\r\n        expandable={expandableConfig}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Space,\r\n  Button,\r\n  Input,\r\n  Select,\r\n  Form,\r\n  Flex,\r\n  Drawer as DrawerAnt,\r\n} from \"antd\";\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nimport useDrawerUpdateProgram from \"../../componentLogic/useDrawerUpdateProgram\";\r\n\r\nexport default function DrawerUpdateProgram({\r\n  currentProgram,\r\n  isLoadingGetProjectId,\r\n  open,\r\n  setOpen,\r\n  disabled,\r\n}) {\r\n  const {\r\n    form,\r\n    isSaving,\r\n    setIsSaving,\r\n    strategies,\r\n    isLoadingGetNew,\r\n    updateProject,\r\n    isLoadingUpdateProjectMutation,\r\n    isSuccessUpdateProjectMutation,\r\n    isErrorUpdateProjectMutation,\r\n    ErrorUpdateProjectMutation,\r\n    localIsResponseUpdateProjectMutation,\r\n    handlePostValuesChange,\r\n    handleSave,\r\n    handleReset,\r\n  } = useDrawerUpdateProgram({\r\n    currentProgram,\r\n    isLoadingGetProjectId,\r\n    open,\r\n    setOpen,\r\n    disabled,\r\n  });\r\n  return (\r\n    <>\r\n      <DrawerAnt\r\n        closable\r\n        destroyOnClose2\r\n        title={<div style={{ whiteSpace: \"nowrap\" }}>Обновление программы</div>}\r\n        placement=\"right\"\r\n        open={open}\r\n        loading={isLoadingGetProjectId || isLoadingGetNew}\r\n        onClose={() => {\r\n          setOpen(false);\r\n          handleReset();\r\n        }}\r\n        width={isMobile ? 300 : 350}\r\n      >\r\n        <Flex vertical={true} style={{ height: \"100%\" }}>\r\n          <Form\r\n            disabled={disabled}\r\n            form={form}\r\n            onValuesChange={handlePostValuesChange}\r\n            layout=\"vertical\"\r\n            style={{ flexGrow: 1 }}\r\n          >\r\n            {/* Название организации */}\r\n            <Form.Item\r\n              label=\"Название программы\"\r\n              name=\"projectName\"\r\n              rules={[\r\n                { required: true, message: \"Пожалуйста, введите название!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Отчетный день*/}\r\n            <Form.Item label=\"Стратегия\" name=\"strategyId\">\r\n              <Select\r\n                allowClear\r\n                showSearch\r\n                optionFilterProp=\"label\"\r\n                filterOption={(input, option) =>\r\n                  option?.label.toLowerCase().includes(input.toLowerCase())\r\n                }\r\n                options={strategies?.map((strategy) => ({\r\n                  label: \"Стратегия\" + \" \" + strategy.strategyNumber,\r\n                  value: strategy.id,\r\n                }))}\r\n              />\r\n            </Form.Item>\r\n          </Form>\r\n\r\n          <Space style={{ marginTop: \"auto\" }}>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={handleSave}\r\n              loading={isSaving}\r\n              disabled={disabled}\r\n            >\r\n              Сохранить\r\n            </Button>\r\n            <Button onClick={handleReset} disabled={disabled}>\r\n              Сбросить\r\n            </Button>\r\n          </Space>\r\n        </Flex>\r\n      </DrawerAnt>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport CustomTableProgram from \"./CustomTableProgram\";\r\nimport DrawerUpdateProgram from \"./DrawerUpdateProgram\";\r\n\r\nimport _ from \"lodash\";\r\nimport {\r\n  Tabs,\r\n  Button,\r\n  Popconfirm,\r\n  Select,\r\n  Typography,\r\n  Flex,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { PlusOutlined, SaveOutlined } from \"@ant-design/icons\";\r\nimport usePrograma from \"../../componentLogic/usePrograma\";\r\n\r\nexport default function Program({ activeTabTypesProgram, disabledTable }) {\r\n  const {\r\n    selectedProgramId,\r\n    setSelectedProgramId,\r\n    selectedStrategyId,\r\n    setSelectedStrategyId,\r\n    selectedProjectIds,\r\n    setSelectedProjectIds,\r\n    descriptionProgram,\r\n    setDescriptionProgram,\r\n    form,\r\n    isSaving,\r\n    setIsSaving,\r\n    tables,\r\n    setTables,\r\n    targetStateOnProduct,\r\n    setTargetStateOnProduct,\r\n    expandedRowKeys,\r\n    setExpandedRowKeys,\r\n    items,\r\n    setItems,\r\n    activeTab,\r\n    setActiveTab,\r\n    openDrawer,\r\n    setOpenDrawer,\r\n    // Получение данных проектов\r\n    programs,\r\n    archivesPrograms,\r\n    isErrorGetProject,\r\n    isLoadingGetProject,\r\n    // Получение данных выбранного проекта\r\n\r\n    currentProgram,\r\n    currentProjects,\r\n    targets,\r\n    isLoadingGetProgramId,\r\n    isErrorGetProgramId,\r\n    isFetchingGetProgramId,\r\n    // Данные для создания программы\r\n    posts,\r\n    strategies,\r\n    projects,\r\n\r\n    isLoadingGetNew,\r\n    isErrorGetNew,\r\n    // Создание нового проекта\r\n\r\n    reduxSelectedOrganizationId,\r\n    createProject,\r\n    isLoadingProjectMutation,\r\n    // Обновление проекта\r\n\r\n    updateProject,\r\n    isLoadingUpdateProjectMutation,\r\n    isSuccessUpdateProjectMutation,\r\n    isErrorUpdateProjectMutation,\r\n    ErrorUpdateProjectMutation,\r\n    localIsResponseUpdateProjectMutation,\r\n    // методы\r\n    onChangeTab,\r\n    addProgram,\r\n    resetUseState,\r\n    updateSingleProject,\r\n  } = usePrograma({ activeTabTypesProgram });\r\n\r\n\r\n  \r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Flex justify=\"space-between\" align=\"center\" style={{ width: \"100%\" }}>\r\n        <Tabs\r\n          style={{ width: \"calc(100% - 40px)\" }}\r\n          type={activeTabTypesProgram === \"programs\" ? \"editable-card\" : \"card\"}\r\n          activeKey={activeTab}\r\n          items={items}\r\n          onChange={onChangeTab}\r\n          addIcon={\r\n            <Tooltip  placement=\"bottom\" title={\"создать программу\"}>\r\n              <Popconfirm\r\n                placement=\"rightBottom\"\r\n                showCancel={false}\r\n                okButtonProps={{ style: { display: \"none\" } }}\r\n                icon={null}\r\n                description={\r\n                  <>\r\n                    <Flex vertical gap={\"small\"}>\r\n                      <Typography>Выберите стратегию</Typography>\r\n                      <Select\r\n                        style={{ width: \"160px\" }}\r\n                        allowClear\r\n                        showSearch\r\n                        optionFilterProp=\"label\"\r\n                        value={selectedStrategyId}\r\n                        onChange={(strategy) => setSelectedStrategyId(strategy)}\r\n                        filterOption={(input, option) =>\r\n                          option?.label\r\n                            .toLowerCase()\r\n                            .includes(input.toLowerCase())\r\n                        }\r\n                        options={strategies.map((strategy) => ({\r\n                          label: \"Стратегия\" + \" \" + strategy.strategyNumber,\r\n                          value: strategy.id,\r\n                        }))}\r\n                      />\r\n                    </Flex>\r\n                    <Button\r\n                      style={{ marginTop: \"10px\", marginLeft: \"55px\" }}\r\n                      size=\"small\"\r\n                      type=\"primary\"\r\n                      onClick={addProgram}\r\n                      disabled={!selectedStrategyId}\r\n                    >\r\n                      сохранить\r\n                    </Button>\r\n                  </>\r\n                }\r\n              >\r\n                <Button  data-tour=\"create-button\" size=\"small\" type=\"text\" icon={<PlusOutlined />} />\r\n              </Popconfirm>\r\n            </Tooltip>\r\n          }\r\n        />\r\n        \r\n        <Tooltip placement=\"bottom\" title={\"сохранить\"}>\r\n          <Button\r\n            data-tour=\"save-button\"\r\n            type=\"primary\"\r\n            style={{ width: \"40px\" }}\r\n            icon={<SaveOutlined />}\r\n            onClick={updateSingleProject}\r\n            loading={isSaving}\r\n          />\r\n        </Tooltip>\r\n      </Flex>\r\n\r\n      {selectedProgramId && (\r\n        <DrawerUpdateProgram\r\n          currentProgram={currentProgram}\r\n          isLoadingGetProgramId={isLoadingGetProgramId}\r\n          open={openDrawer}\r\n          setOpen={setOpenDrawer}\r\n          disabled={activeTabTypesProgram === \"archivesPrograms\" ? true : false}\r\n        />\r\n      )}\r\n\r\n      <CustomTableProgram\r\n        expandedRowKeys={expandedRowKeys}\r\n        setExpandedRowKeys={setExpandedRowKeys}\r\n        form={form}\r\n        selectedProgramId={selectedProgramId}\r\n        disabledTable={disabledTable}\r\n        tables={tables}\r\n        setTables={setTables}\r\n        isLoadingGetProgramId={isLoadingGetProgramId}\r\n        isFetchingGetProgramId={isFetchingGetProgramId}\r\n        currentProjects={currentProjects}\r\n        targets={targets}\r\n        targetStateOnProduct={targetStateOnProduct}\r\n        setTargetStateOnProduct={setTargetStateOnProduct}\r\n        posts={posts}\r\n        projects={projects}\r\n        selectedProjectIds={selectedProjectIds}\r\n        setSelectedProjectIds={setSelectedProjectIds}\r\n        setDescriptionProgram={setDescriptionProgram}\r\n        descriptionProgram={descriptionProgram}\r\n      ></CustomTableProgram>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["useStyle","createStyles","_ref","css","token","antCls","customTable","_templateObject","_taggedTemplateLiteral","CustomTableProgram","_ref2","expandedRowKeys","setExpandedRowKeys","form","selectedProgramId","targetStateOnProduct","setTargetStateOnProduct","disabledTable","tables","setTables","isLoadingGetProjectId","isFetchingGetProjectId","targets","currentProjects","posts","projects","selectedProjectIds","setSelectedProjectIds","setDescriptionProgram","descriptionProgram","styles","groupColumns","dataWithGroups","expandableConfig","useCustomTableProgram","stylesColumnProjectPopconfim","placement","stylesColumnProjectSelect","style","width","stylesColumnSelect","stylesColumnDate","_jsx","Form","disabled","children","Table","bordered","className","loading","columns","dataSource","rowKey","pagination","scroll","x","y","expandable","DrawerUpdateProgram","currentProgram","open","setOpen","isSaving","setIsSaving","strategies","isLoadingGetNew","updateProject","isLoadingUpdateProjectMutation","isSuccessUpdateProjectMutation","isErrorUpdateProjectMutation","ErrorUpdateProjectMutation","localIsResponseUpdateProjectMutation","handlePostValuesChange","handleSave","handleReset","useDrawerUpdateProgram","_Fragment","DrawerAnt","closable","destroyOnClose2","title","whiteSpace","onClose","isMobile","_jsxs","Flex","vertical","height","onValuesChange","layout","flexGrow","Item","label","name","rules","required","message","Input","Select","allowClear","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","includes","options","map","strategy","strategyNumber","value","id","Space","marginTop","Button","type","onClick","Program","activeTabTypesProgram","setSelectedProgramId","selectedStrategyId","setSelectedStrategyId","items","setItems","activeTab","setActiveTab","openDrawer","setOpenDrawer","programs","archivesPrograms","isErrorGetProject","isLoadingGetProject","isLoadingGetProgramId","isErrorGetProgramId","isFetchingGetProgramId","isErrorGetNew","reduxSelectedOrganizationId","createProject","isLoadingProjectMutation","onChangeTab","addProgram","resetUseState","updateSingleProject","usePrograma","justify","align","Tabs","activeKey","onChange","addIcon","Tooltip","Popconfirm","showCancel","okButtonProps","display","icon","description","gap","Typography","marginLeft","size","PlusOutlined","SaveOutlined"],"sourceRoot":""}