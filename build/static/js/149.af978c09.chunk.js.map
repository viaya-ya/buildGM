{"version":3,"file":"static/js/149.af978c09.chunk.js","mappings":"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","sources":["webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","webpack://good_management/./src/UI/Custom/TextArea/TextArea.module.css?c32b","UI/Custom/TextArea/TextArea.jsx","webpack://good_management/./src/UI/Custom/SelectBorder/SelectBorder.module.css?11b5","UI/Custom/SelectBorder/SelectBorder.jsx","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx","webpack://good_management/./src/UI/app/ObjectivePage/Objective.module.css?42cc","UI/app/ObjectivePage/Objective.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__BUuuG\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__S7EYo\"};","import React from \"react\";\nimport classes from \"./ButtonAction.module.css\";\nimport iconAdd from \"../../../../image/iconAdd.svg\";\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\nexport default function ButtonAction({ create, update, refUpdate, refCreate }) {\n  return (\n    <div className={classes.wrapper}>\n      {create && (\n        <ButtonImage\n          refAction={refCreate}\n          name={\"создать\"}\n          icon={iconAdd}\n          onClick={create}\n        ></ButtonImage>\n      )}\n\n      {update && (\n        <ButtonImage\n          refAction={refUpdate}\n          name={\"обновить\"}\n          icon={Blacksavetmp}\n          onClick={update}\n        ></ButtonImage>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport classes from \"./BottomHeaders.module.css\"\nimport ButtonAction from './ButtonAction/ButtonAction'\n\nexport default function BottomHeaders({children, create, update,  refUpdate, refCreate}) {\n  return (\n    <div className={classes.editText}>\n        {children}\n        <ButtonAction create={create} update={update} refUpdate={refUpdate} refCreate={refCreate}></ButtonAction>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"textArea\":\"TextArea_textArea__W74x1\",\"textColor\":\"TextArea_textColor__B5yhy\"};","import React from \"react\";\nimport classes from \"./TextArea.module.css\";\n\nexport default function TextArea({ value, onChange, readOnly }) {\n  return (\n    <textarea\n      className={`${classes.textArea} ${readOnly ? classes.textColor : \"\"}`}\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      disabled={readOnly}\n    ></textarea>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"SelectBorder_item__DiOvO\",\"select\":\"SelectBorder_select__1QGX7\",\"Активный\":\"SelectBorder_Активный__LTOt8\",\"Черновик\":\"SelectBorder_Черновик__fMOp0\",\"Завершено\":\"SelectBorder_Завершено__buugC\"};","import React from \"react\";\nimport classes from \"./SelectBorder.module.css\";\n\nexport default function SelectBorder({\n  value,\n  onChange,\n  array,\n  array1,\n  arrayItem,\n  prefix,\n  styleSelected,\n  refSelectBorder\n}) {\n\n  return (\n    <div className={classes.item} ref={refSelectBorder}>\n      <select\n        name=\"mySelect\"\n        value={value}\n        onChange={(e) => {\n          onChange(e.target.value);\n        }}\n        className={`${classes.select} ${classes[styleSelected]}`}\n      >\n        <option value=\"\" disabled>\n          Выберите стратегию\n        </option>\n\n        {array?.map((item) => (\n          <>\n            <option key={item.id} value={item.id} className={classes[item.state]}>\n              {prefix}\n              {item[arrayItem]}\n            </option>\n          </>\n        ))}\n\n        {array1?.map((item) => {\n          return (\n            <option key={item.id} value={item.id} className={classes[item.state]}>\n              {prefix}\n              {item[arrayItem]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__2Gves\"};","import React from \"react\";\nimport classes from \"./WaveLetters.module.css\";\nexport default function WaveLetters({ letters }) {\n  const arrayLetters = letters.split(\"\");\n  return (\n    <div className={classes.wave}>\n      {arrayLetters?.map((item, index) => (\n        <span key={index} style={{ \"--i\": index + 1 }}>\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\n        </span>\n      ))}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Objective_dialog__AGsZy\",\"header\":\"Objective_header__CwqH2\",\"fon\":\"Objective_fon__IHEX0\",\"pomoshnikSearch\":\"Objective_pomoshnikSearch__n+8mY\",\"pomoshnik\":\"Objective_pomoshnik__sapCt\",\"iconBack\":\"Objective_iconBack__8q8he\",\"search\":\"Objective_search__Bh658\",\"spanPomoshnik\":\"Objective_spanPomoshnik__y01xr\",\"editText\":\"Objective_editText__C2X+e\",\"one\":\"Objective_one__pBzSk\",\"two\":\"Objective_two__3V81z\",\"three\":\"Objective_three__aW0R0\",\"blockSelect\":\"Objective_blockSelect__srgvk\",\"option\":\"Objective_option__ep3vm\",\"date\":\"Objective_date__zCYXt\",\"image\":\"Objective_image__HulAZ\",\"main\":\"Objective_main__MdAhZ\",\"editorContainer\":\"Objective_editorContainer__Wu4S0\",\"deleteIcon\":\"Objective_deleteIcon__v66op\",\"iconAdd\":\"Objective_iconAdd__23qSh\",\"iconSave\":\"Objective_iconSave__W5qtA\",\"Teaxtaera\":\"Objective_Teaxtaera__NpKzL\",\"add\":\"Objective_add__gSb0u\",\"nameButton\":\"Objective_nameButton__729Uq\",\"text\":\"Objective_text__hBYIL\",\"selectHeader\":\"Objective_selectHeader__ijB6q\",\"textSelectHeader\":\"Objective_textSelectHeader__i6Y9X\",\"textSelectHeaderSpan\":\"Objective_textSelectHeaderSpan__KHO+H\",\"active\":\"Objective_active__BJlg2\",\"activeTextSelectHeader\":\"Objective_activeTextSelectHeader__EILz8\",\"select\":\"Objective_select__6UvrW\",\"activeSelect\":\"Objective_activeSelect__u1dA5\",\"completed\":\"Objective_completed__W6+iq\",\"draft\":\"Objective_draft__sHPg3\"};","import React, { useState, useEffect, useRef} from \"react\";\nimport classes from \"./Objective.module.css\";\nimport classNames from \"classnames\";\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\nimport TextArea from \"@Custom/TextArea/TextArea.jsx\";\nimport Headers from \"@Custom/Headers/Headers\";\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\nimport SelectBorder from \"@Custom/SelectBorder/SelectBorder\";\nimport { useObjectiveHook, useStrategyHook } from \"@hooks\";\n\nimport { ConfigProvider, Tour } from \"antd\";\nimport ruRU from \"antd/locale/ru_RU\";\n\nexport default function Objective() {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [selectedStrategyId, setSelectedStrategyId] = useState(\"\");\n\n  const [contentEditors, setContentEditors] = useState([]);\n  const [situationEditors, setSituationEditors] = useState([]);\n  const [rootCauseEditors, setRootCauseEditors] = useState([]);\n\n  const [stateStrategy, setStateStrategy] = useState(\"\");\n\n  const ref1 = useRef(null);\n  const ref2 = useRef(null);\n  const ref3 = useRef(null);\n  const refSelectBorder = useRef(null);\n  const refUpdate = useRef(null);\n\n  const [open, setOpen] = useState(false);\n\n  const steps = [\n    {\n      title: \"КРАТКОСРОЧАЯ ЦЕЛЬ\",\n      description: \"КРАТКОСРОЧАЯ ЦЕЛЬ\",\n      target: () => ref1.current,\n    },\n    {\n      title: \"СИТУАЦИЯ\",\n      description: \"СИТУАЦИЯ\",\n      target: () => ref2.current,\n    },\n    {\n      title: \"ПРИЧИНА\",\n      description: \"ПРИЧИНА\",\n      target: () => ref3.current,\n    },\n    {\n      title: \"Выбрать стратегию\",\n      description: \"Выбрать стратегию для показа краткосрочной цели\",\n      target: () => refSelectBorder.current,\n    },\n    {\n      title: \"Сохранить\",\n      description: \"Нажмите для сохранения\",\n      target: () => refUpdate.current,\n    },\n  ];\n\n  const {\n    currentObjective,\n    isLoadingGetObjectiveId,\n    isErrorGetObjectiveId,\n    isFetchingGetObjectiveId,\n\n    updateObjective,\n    isLoadingUpdateObjectiveMutation,\n    isSuccessUpdateObjectiveMutation,\n    isErrorUpdateObjectiveMutation,\n    errorUpdateObjectiveMutation,\n    localIsResponseUpdateObjectiveMutation,\n  } = useObjectiveHook(selectedStrategyId);\n\n  const {\n    activeAndDraftStrategies,\n    archiveStrategies,\n    isLoadingStrategies,\n    isErrorStrategies,\n  } = useStrategyHook();\n\n  const saveUpdateObjective = async () => {\n    await updateObjective({\n      _id: currentObjective.id,\n      situation: situationEditors,\n      content: contentEditors,\n      rootCause: rootCauseEditors,\n    })\n      .unwrap()\n      .then(() => {})\n      .catch((error) => {\n        console.error(\"Error:\", JSON.stringify(error, null, 2));\n      });\n  };\n\n  const handleEditorChange = (index, newState, type) => {\n    switch (type) {\n      case \"content\":\n        setContentEditors((prevEditors) => {\n          const updated = [...prevEditors];\n          updated[index] = newState;\n          return updated;\n        });\n        break;\n      case \"situation\":\n        setSituationEditors((prevEditors) => {\n          const updated = [...prevEditors];\n          updated[index] = newState;\n          return updated;\n        });\n        break;\n      case \"rootCause\":\n        setRootCauseEditors((prevEditors) => {\n          const updated = [...prevEditors];\n          updated[index] = newState;\n          return updated;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const changeStrategyId = (id) => {\n    setSelectedStrategyId(id);\n  };\n\n  useEffect(() => {\n    if (Array.isArray(currentObjective.content)) {\n      setContentEditors(currentObjective.content);\n    }\n\n    if (Array.isArray(currentObjective.situation)) {\n      setSituationEditors(currentObjective.situation);\n    }\n\n    if (Array.isArray(currentObjective.rootCause)) {\n      setRootCauseEditors(currentObjective.rootCause);\n    }\n  }, [currentObjective]);\n\n  useEffect(() => {\n    const array = [...archiveStrategies, ...activeAndDraftStrategies];\n    const element = array.find((item) => item.id === selectedStrategyId);\n    setStateStrategy(element?.state);\n  }, [selectedStrategyId]);\n\n  return (\n    <div className={classes.dialog}>\n      <Headers name={\"Краткосрочная цель\"} speedGoal={\"speedGoal\"}  funcActiveHint = {() => setOpen(true)}>\n        <div className={classes.selectHeader}>\n          {[{name: \"КРАТКОСРОЧАЯ ЦЕЛЬ\", ref: ref1},{name: \"СИТУАЦИЯ\", ref: ref2} , {name: \"ПРИЧИНА\", ref: ref3}].map((obj, index) => (\n            <div\n             ref={obj.ref}\n              key={index}\n              className={classNames(\n                classes.textSelectHeader,\n                activeIndex === index && classes.activeTextSelectHeader\n              )}\n              onClick={() => setActiveIndex(index)}\n            >\n              <span\n                className={classNames(\n                  activeIndex === index\n                    ? classes.active\n                    : classes.textSelectHeaderSpan\n                )}\n              >\n                {obj.name}\n              </span>\n            </div>\n          ))}\n        </div>\n        <BottomHeaders update={saveUpdateObjective} refUpdate={refUpdate}> \n          <SelectBorder\n            refSelectBorder = {refSelectBorder}\n            value={selectedStrategyId}\n            onChange={changeStrategyId}\n            array={activeAndDraftStrategies}\n            array1={archiveStrategies}\n            arrayItem={\"strategyNumber\"}\n            prefix={\"Стратегия №\"}\n            styleSelected={stateStrategy}\n          ></SelectBorder>\n        </BottomHeaders>\n      </Headers>\n\n        <ConfigProvider locale={ruRU}>\n          <Tour open={open} onClose={() => setOpen(false)} steps={steps} />\n        </ConfigProvider>\n\n      <div className={classes.main}>\n        {isErrorGetObjectiveId || isErrorStrategies ? (\n          <HandlerQeury Error={isErrorGetObjectiveId || isErrorStrategies} />\n        ) : isLoadingStrategies ||\n          isFetchingGetObjectiveId ||\n          isLoadingGetObjectiveId ? (\n          <HandlerQeury\n            Loading={isLoadingStrategies || isLoadingGetObjectiveId}\n            Fetching={isFetchingGetObjectiveId}\n          />\n        ) : (\n          <>\n            {currentObjective.id ? (\n              <>\n                {activeIndex === 0 && (\n                  <>\n                    {contentEditors.map((item, index) => (\n                      <TextArea\n                        key={index}\n                        value={item}\n                        onChange={(newState) =>\n                          handleEditorChange(index, newState, \"content\")\n                        }\n                        readOnly={stateStrategy === \"Завершено\"}\n                      ></TextArea>\n                    ))}\n                  </>\n                )}\n\n                {activeIndex === 1 && (\n                  <>\n                    {situationEditors.map((item, index) => (\n                      <TextArea\n                        key={index}\n                        value={item}\n                        onChange={(newState) =>\n                          handleEditorChange(index, newState, \"situation\")\n                        }\n                        readOnly={stateStrategy === \"Завершено\"}\n                      ></TextArea>\n                    ))}\n                  </>\n                )}\n\n                {activeIndex === 2 && (\n                  <>\n                    {rootCauseEditors.map((item, index) => (\n                      <TextArea\n                        key={index}\n                        value={item}\n                        onChange={(newState) =>\n                          handleEditorChange(index, newState, \"rootCause\")\n                        }\n                        readOnly={stateStrategy === \"Завершено\"}\n                      ></TextArea>\n                    ))}\n                  </>\n                )}\n\n                <HandlerMutation\n                  Loading={isLoadingUpdateObjectiveMutation}\n                  Error={\n                    isErrorUpdateObjectiveMutation &&\n                    localIsResponseUpdateObjectiveMutation\n                  }\n                  Success={\n                    isSuccessUpdateObjectiveMutation &&\n                    localIsResponseUpdateObjectiveMutation\n                  }\n                  textSuccess={\"Краткосрочная цель обновлена\"}\n                  textError={\n                    errorUpdateObjectiveMutation?.data?.errors?.[0]?.errors?.[0]\n                      ? errorUpdateObjectiveMutation.data.errors[0].errors[0]\n                      : errorUpdateObjectiveMutation?.data?.message\n                  }\n                />\n              </>\n            ) : (\n              <>\n                <WaveLetters letters={\"Выберите стратегию\"}></WaveLetters>\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["ButtonAction","_ref","create","update","refUpdate","refCreate","_jsxs","className","classes","wrapper","children","_jsx","ButtonImage","refAction","name","icon","iconAdd","onClick","Blacksavetmp","BottomHeaders","editText","TextArea","value","onChange","readOnly","textArea","textColor","e","target","disabled","SelectBorder","array","array1","arrayItem","prefix","styleSelected","refSelectBorder","item","ref","select","map","_Fragment","id","state","WaveLetters","letters","arrayLetters","split","wave","index","style","Objective","_errorUpdateObjective","_errorUpdateObjective2","_errorUpdateObjective3","_errorUpdateObjective4","_errorUpdateObjective5","activeIndex","setActiveIndex","useState","selectedStrategyId","setSelectedStrategyId","contentEditors","setContentEditors","situationEditors","setSituationEditors","rootCauseEditors","setRootCauseEditors","stateStrategy","setStateStrategy","ref1","useRef","ref2","ref3","open","setOpen","steps","title","description","current","currentObjective","isLoadingGetObjectiveId","isErrorGetObjectiveId","isFetchingGetObjectiveId","updateObjective","isLoadingUpdateObjectiveMutation","isSuccessUpdateObjectiveMutation","isErrorUpdateObjectiveMutation","errorUpdateObjectiveMutation","localIsResponseUpdateObjectiveMutation","useObjectiveHook","activeAndDraftStrategies","archiveStrategies","isLoadingStrategies","isErrorStrategies","useStrategyHook","handleEditorChange","newState","type","prevEditors","updated","useEffect","Array","isArray","content","situation","rootCause","element","find","dialog","Headers","speedGoal","funcActiveHint","selectHeader","obj","classNames","textSelectHeader","activeTextSelectHeader","active","textSelectHeaderSpan","async","_id","unwrap","then","catch","error","console","JSON","stringify","ConfigProvider","locale","ruRU","Tour","onClose","main","HandlerQeury","Error","Loading","Fetching","HandlerMutation","Success","textSuccess","textError","data","errors","message"],"sourceRoot":""}