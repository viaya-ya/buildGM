{"version":3,"file":"static/js/937.08d11659.chunk.js","mappings":"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","sources":["UI/image/subbarSearch.svg","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","webpack://good_management/./src/UI/Custom/ModalWindow.module.css?7f9e","UI/Custom/ModalWindow.jsx","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx","webpack://good_management/./src/UI/app/PolicyPage/Policy.module.css?b3af","UI/image/folder.svg","UI/image/iconSublist.svg","UI/image/addCircleBlue.svg","UI/Custom/Mdxeditor/i18n.js","webpack://good_management/./src/UI/Custom/Mdxeditor/Mdxeditor.module.css?ace3","UI/Custom/Mdxeditor/Mdxeditor.jsx","webpack://good_management/./src/UI/Custom/modalFolder/ModalFolder.module.css?760e","UI/image/deleteGrey.svg","UI/Custom/modalFolder/ModalFolder.jsx","UI/app/PolicyPage/Policy.jsx","UI/app/PolicyPage/hooks/Directories.js"],"sourcesContent":["var _desc, _defs, _rect, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgSubbarSearch(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\r\\n\\t\\t\\tCreated with Pixso.\\r\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip8_4774\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip8_4774)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M10.33 9.33L9.8 9.33L9.61 9.15C10.41 8.21 10.83 6.94 10.6 5.59C10.29 3.73 8.74 2.26 6.87 2.03C4.05 1.68 1.68 4.05 2.03 6.87C2.25 8.74 3.73 10.29 5.59 10.6C6.94 10.83 8.21 10.41 9.15 9.61L9.33 9.8L9.33 10.33L12.16 13.16C12.43 13.43 12.88 13.43 13.15 13.16C13.43 12.89 13.43 12.44 13.15 12.17L10.33 9.33ZM6.33 9.33C4.67 9.33 3.33 7.99 3.33 6.33C3.33 4.67 4.67 3.33 6.33 3.33C7.99 3.33 9.33 4.67 9.33 6.33C9.33 7.99 7.99 9.33 6.33 9.33Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubbarSearch);\nexport default __webpack_public_path__ + \"static/media/subbarSearch.df8e3ae4a1f8534780d8d7a0a7a27549.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__6e9Ca\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__YWbBU\"};","import React from \"react\";\r\nimport classes from \"./ButtonAction.module.css\";\r\nimport iconAdd from \"../../../../image/iconAdd.svg\";\r\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\r\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\r\nexport default function ButtonAction({ create, update, refUpdate, refCreate }) {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {create && (\r\n        <ButtonImage\r\n          refAction={refCreate}\r\n          name={\"создать\"}\r\n          icon={iconAdd}\r\n          onClick={create}\r\n        ></ButtonImage>\r\n      )}\r\n\r\n      {update && (\r\n        <ButtonImage\r\n          refAction={refUpdate}\r\n          name={\"обновить\"}\r\n          icon={Blacksavetmp}\r\n          onClick={update}\r\n        ></ButtonImage>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport classes from \"./BottomHeaders.module.css\"\r\nimport ButtonAction from './ButtonAction/ButtonAction'\r\n\r\nexport default function BottomHeaders({children, create, update,  refUpdate, refCreate}) {\r\n  return (\r\n    <div className={classes.editText}>\r\n        {children}\r\n        <ButtonAction create={create} update={update} refUpdate={refUpdate} refCreate={refCreate}></ButtonAction>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDelete\":\"ModalWindow_modalDelete__6F2XA\",\"modalDeleteElement\":\"ModalWindow_modalDeleteElement__BWKSd\",\"modalRow1\":\"ModalWindow_modalRow1__lAjGg\",\"modalRow2\":\"ModalWindow_modalRow2__s2-a6\",\"btnYes\":\"ModalWindow_btnYes__ScZrA\",\"btnNo\":\"ModalWindow_btnNo__q5w-4\",\"textBtnYes\":\"ModalWindow_textBtnYes__nsbep\",\"textBtnNo\":\"ModalWindow_textBtnNo__3q10K\",\"text\":\"ModalWindow_text__LCc-R\",\"exitImage\":\"ModalWindow_exitImage__OFdfY\"};","import React from \"react\";\r\nimport classes from \"./ModalWindow.module.css\";\r\nimport exit from \"../image/exitModal.svg\";\r\n\r\nexport default function ModalWindow({ text, close, btnYes, btnNo, exitBtn }) {\r\n  return (\r\n    <div className={classes.modalDelete}>\r\n      <div className={classes.modalDeleteElement}>\r\n        <img\r\n          src={exit}\r\n          alt=\"exit\"\r\n          className={classes.exitImage}\r\n          onClick={() => close(false)}\r\n        />\r\n        <div className={classes.modalRow1}>\r\n          <span className={classes.text}>{text}</span>\r\n        </div>\r\n        {!exitBtn && (\r\n          <div className={classes.modalRow2}>\r\n            <button\r\n              className={`${classes.btnYes} ${classes.textBtnYes}`}\r\n              onClick={btnYes}\r\n            >\r\n              Да\r\n            </button>\r\n            <button\r\n              className={`${classes.btnNo} ${classes.textBtnNo}`}\r\n              onClick={btnNo}\r\n            >\r\n              Нет\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__DfO0r\"};","import React from \"react\";\r\nimport classes from \"./WaveLetters.module.css\";\r\nexport default function WaveLetters({ letters }) {\r\n  const arrayLetters = letters.split(\"\");\r\n  return (\r\n    <div className={classes.wave}>\r\n      {arrayLetters?.map((item, index) => (\r\n        <span key={index} style={{ \"--i\": index + 1 }}>\r\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Policy_dialog__sOJ0q\",\"item\":\"Policy_item__FmZcC\",\"itemName\":\"Policy_itemName__0jtiZ\",\"div\":\"Policy_div__NPkBf\",\"five\":\"Policy_five__-smr1\",\"sixth\":\"Policy_sixth__VZjyl\",\"policySearch\":\"Policy_policySearch__gWKIW\",\"listUL\":\"Policy_listUL__y6tnd\",\"listULElement\":\"Policy_listULElement__7sf+7\",\"policySearchItem\":\"Policy_policySearchItem__6l65O\",\"listULElementNested\":\"Policy_listULElementNested__rDjsH\",\"listULElementNestedTwo\":\"Policy_listULElementNestedTwo__B5GB3\",\"listULNested\":\"Policy_listULNested__Rdicj\",\"policySearchItemNested\":\"Policy_policySearchItemNested__XOEZy\",\"policySearchItemNestedNested\":\"Policy_policySearchItemNestedNested__2fizD\",\"listText\":\"Policy_listText__U896-\",\"textMontserrat\":\"Policy_textMontserrat__DCkK3\",\"textMontserrat14\":\"Policy_textMontserrat14__3rdF+\",\"activeText\":\"Policy_activeText__S6ygd\",\"draftText\":\"Policy_draftText__CP+ZG\",\"completedText\":\"Policy_completedText__vUPmY\",\"headerText\":\"Policy_headerText__B0zF-\",\"main\":\"Policy_main__fzA0n\"};","var _desc, _defs, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgFolder(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\r\\n\\t\\t\\tCreated with Pixso.\\r\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip321_3153\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / folder\",\n    width: 24,\n    height: 24,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip321_3153)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path\",\n    d: \"M10.41 4.16L4.16 4.16C3.02 4.16 2.09 5.1 2.09 6.25L2.08 18.75C2.08 19.89 3.02 20.83 4.16 20.83L20.83 20.83C21.97 20.83 22.91 19.89 22.91 18.75L22.91 8.33C22.91 7.18 21.97 6.25 20.83 6.25L12.5 6.25L10.41 4.16Z\",\n    fill: \"#B4B4B4\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolder);\nexport default __webpack_public_path__ + \"static/media/folder.1a02631f43da20286f780a201c5db651.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _rect, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgIconSublist(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\r\\n\\t\\t\\tCreated with Pixso.\\r\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip321_3149\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / sublist hiden\",\n    width: 24,\n    height: 24,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / sublist hiden\",\n    width: 24,\n    height: 24,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip321_3149)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M9.5 17.5L14.5 12.5L9.5 7.5L9.5 17.5Z\",\n    fill: \"#B4B4B4\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconSublist);\nexport default __webpack_public_path__ + \"static/media/iconSublist.826897c72c8e0f388e47f5161bee47bd.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgAddCircleBlue(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18ZM10 0C8.68678 0 7.38642 0.258658 6.17317 0.761205C4.95991 1.26375 3.85752 2.00035 2.92893 2.92893C1.05357 4.8043 0 7.34784 0 10C0 12.6522 1.05357 15.1957 2.92893 17.0711C3.85752 17.9997 4.95991 18.7362 6.17317 19.2388C7.38642 19.7413 8.68678 20 10 20C12.6522 20 15.1957 18.9464 17.0711 17.0711C18.9464 15.1957 20 12.6522 20 10C20 8.68678 19.7413 7.38642 19.2388 6.17317C18.7362 4.95991 17.9997 3.85752 17.0711 2.92893C16.1425 2.00035 15.0401 1.26375 13.8268 0.761205C12.6136 0.258658 11.3132 0 10 0ZM11 5H9V9H5V11H9V15H11V11H15V9H11V5Z\",\n    fill: \"#005475\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAddCircleBlue);\nexport default __webpack_public_path__ + \"static/media/addCircleBlue.5c3bed2da5be41e014d2024e9976a947.svg\";\nexport { ForwardRef as ReactComponent };","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\ni18n.use(initReactI18next).init({\r\n    resources: {\r\n      ru: {\r\n        translation: {\r\n          \"toolbar.undo\": \"Отменить\",\r\n          \"toolbar.redo\": \"Вернуть\",\r\n\r\n          \"toolbar.bold\": \"Жирный\",\r\n          \"toolbar.removeBold\": \"Убрать жирный\",\r\n          \"toolbar.italic\": \"Курсив\",\r\n          \"toolbar.underline\": \"Подчеркнутый\",\r\n          \r\n          \"toolbar.bulletedList\": \"Маркированный список\",\r\n          \"toolbar.numberedList\": \"Нумерованный список\",\r\n          \"toolbar.checkList\": \"Контрольный список\",\r\n\r\n          \"toolbar.image\": \"Вставить изображение\",\r\n          \"toolbar.table\": \"Вставить таблицу\",\r\n          \"toolbar.link\": \"Создать ссылку\",\r\n\r\n          \"table.rowMenu\": \"Меню строк\",\r\n          \"table.columnMenu\": \"Меню столбцов\",\r\n\r\n          \"table.alignRight\": \"Выравнивание справа\",\r\n          \"table.alignCenter\": \"Выравнивание по центру\",\r\n          \"table.alignLeft\": \"Выравнивание слева\",\r\n\r\n          \"table.insertColumnRight\": \"Добавить столбец справа\",\r\n          \"table.insertColumnLeft\": \"Добавить столбец слева\",\r\n\r\n          \"table.deleteColumn\": \"Удалить столбец\",\r\n          \"table.deleteRow\": \"Удалить строку\",\r\n\r\n          \"table.deleteTable\": \"Удалить таблицу\",\r\n          \"table.insertRowAbove\": \"Добавить строку сверху\",\r\n          \"table.insertRowBelow\": \"Добавить строку снизу\",\r\n\r\n\r\n          \"uploadImage.dialogTitle\": \"Загрузка изображения\",\r\n          \"uploadImage.addViaUrlInstructionsNoUpload\": \"Добавление изображения по URL-адресу:\",\r\n          \"uploadImage.alt\": \"Текст когда изображение не загрузилось\",\r\n          \"uploadImage.title\": \"Подпись\",\r\n          \"uploadImage.uploadInstructions\": \"Загрузите изображение со своего устройства:\",\r\n          \"uploadImage.addViaUrlInstructions\": \"Или добавьте изображение с URL-адреса:\",\r\n          \r\n          \"imageEditor.deleteImage\": \"Удалить\",\r\n          \"imageEditor.editImage\": \"Изменить\",\r\n\r\n          \"dialogControls.save\": \"Сохранить\",\r\n          \"dialogControls.cancel\": \"Отменить\",\r\n\r\n          \"createLink.url\": \"Ссылка\",\r\n          \"createLink.title\": \"Название\",\r\n    \r\n          \"linkPreview.open\": \"Открыть\",\r\n          \"linkPreview.remove\": \"Удалить\",\r\n          \"linkPreview.edit\": \"Изменить\",\r\n          \"linkPreview.copyToClipboard\": \"Скопировать ссылку\",\r\n        },\r\n      },\r\n    },\r\n    lng: \"ru\",\r\n    fallbackLng: \"en\",\r\n    // debug: true, \r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Mdxeditor_wrapper__XL43X\",\"editorContainer\":\"Mdxeditor_editorContainer__zW6EO\",\"toolbar-custom\":\"Mdxeditor_toolbar-custom__t4HYm\"};","import React, { useRef, useEffect } from \"react\";\r\nimport \"@mdxeditor/editor/style.css\";\r\nimport {\r\n  MDXEditor,\r\n  toolbarPlugin,\r\n  UndoRedo,\r\n  BoldItalicUnderlineToggles,\r\n  ListsToggle,\r\n  InsertImage,\r\n  InsertTable,\r\n  listsPlugin,\r\n  tablePlugin,\r\n  imagePlugin,\r\n  CreateLink,\r\n  linkDialogPlugin,\r\n  linkPlugin,\r\n  Separator,\r\n} from \"@mdxeditor/editor\";\r\nimport i18n from \"./i18n\";\r\nimport classes from \"./Mdxeditor.module.css\";\r\nimport { usePostImageMutation } from \"@services\";\r\nimport { baseUrl } from \"@helpers/constants\";\r\n\r\nexport default function Mdxeditor({\r\n  editorState,\r\n  setEditorState,\r\n  userId,\r\n  readOnly,\r\n}) {\r\n  const editorRef = useRef(null); // Ссылка на редактор\r\n\r\n  // Функция для обновления содержимого редактора и состояния\r\n  const updateEditorContent = (newContent) => {\r\n    if (editorRef.current) {\r\n      editorRef.current.setMarkdown(newContent); // Обновляем содержимое через setMarkdown\r\n      setEditorState(newContent); // Обновляем состояние редактора\r\n    }\r\n  };\r\n\r\n  const [postImage] = usePostImageMutation();\r\n\r\n  // Функция для обработки загрузки изображений\r\n  const imageUploadHandler = async (file) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      // Вызов postImage для отправки файла на сервер\r\n      const response = await postImage(formData).unwrap();\r\n\r\n      // Проверка формата ответа\r\n      const filePath = (response.filePath || response.data?.filePath)?.replace(\r\n        /\\\\/g,\r\n        \"/\"\r\n      );\r\n\r\n      if (!filePath) {\r\n        throw new Error(\"filePath не найден в ответе сервера\");\r\n      }\r\n\r\n      console.log(\"Успешно загружено:\", filePath);\r\n\r\n      return `${baseUrl}${filePath}`;\r\n    } catch (error) {\r\n      console.error(\"Ошибка загрузки изображения:\", error);\r\n      return Promise.reject(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <div className={classes.editorContainer}>\r\n        <MDXEditor\r\n          contentEditableClassName={classes.par}\r\n          ref={editorRef}\r\n          markdown={editorState}\r\n          translation={(key, defaultValue, interpolations) =>\r\n            i18n.t(key, { defaultValue, ...interpolations })\r\n          }\r\n          placeholder=\"Нажмите, чтобы ввести текст\"\r\n          readOnly={readOnly}\r\n          onChange={updateEditorContent}\r\n          plugins={[\r\n            linkPlugin(),\r\n            linkDialogPlugin(),\r\n            imagePlugin({ imageUploadHandler }),\r\n            tablePlugin(),\r\n            listsPlugin(),\r\n            toolbarPlugin({\r\n              toolbarClassName: classes[\"toolbar-custom\"],\r\n              toolbarContents: () => (\r\n                <>\r\n                  <div style={{ marginRight: \"20px\" }}>\r\n                    <UndoRedo />\r\n                  </div>\r\n                  <div style={{ marginRight: \"20px\" }}>\r\n                    <BoldItalicUnderlineToggles />\r\n                  </div>\r\n                  <div style={{ marginRight: \"20px\" }}>\r\n                    <ListsToggle />\r\n                  </div>\r\n                  <InsertImage />\r\n                  <Separator />\r\n                  <InsertTable />\r\n                  <Separator />\r\n                  <CreateLink />\r\n                </>\r\n              ),\r\n            }),\r\n          ]}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalFolder_modal__ApDDr\",\"modalWindow\":\"ModalFolder_modalWindow__ee+lO\",\"exit\":\"ModalFolder_exit__9xRSZ\",\"header\":\"ModalFolder_header__eXDLA\",\"search\":\"ModalFolder_search__9G089\",\"item1\":\"ModalFolder_item1__R7pgO\",\"item2\":\"ModalFolder_item2__twAOv\",\"modalTableRowIcon\":\"ModalFolder_modalTableRowIcon__hPZCh\",\"tablesContainer\":\"ModalFolder_tablesContainer__5USqE\",\"tableWrapper\":\"ModalFolder_tableWrapper__vp8F0\",\"tableHeader\":\"ModalFolder_tableHeader__mpAXh\",\"tableContent\":\"ModalFolder_tableContent__84VTk\",\"scrollContent\":\"ModalFolder_scrollContent__kshLZ\",\"row\":\"ModalFolder_row__+kdMp\"};","var _path;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgDeleteGrey(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.25 3H11.625L10.875 2.25H7.125L6.375 3H3.75V4.5H14.25M4.5 14.25C4.5 14.6478 4.65804 15.0294 4.93934 15.3107C5.22064 15.592 5.60218 15.75 6 15.75H12C12.3978 15.75 12.7794 15.592 13.0607 15.3107C13.342 15.0294 13.5 14.6478 13.5 14.25V5.25H4.5V14.25Z\",\n    fill: \"#999999\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDeleteGrey);\nexport default __webpack_public_path__ + \"static/media/deleteGrey.9244dfda749b0e4242fe453646d15a95.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport classes from \"./ModalFolder.module.css\";\r\nimport deleteGrey from \"../../image/deleteGrey.svg\";\r\nimport exitModal from \"../../image/exitModal.svg\";\r\nimport Blacksavetmp from \"../../image/Blacksavetmp.svg\";\r\nimport Input from \"@Custom/Input/Input\";\r\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\r\n\r\nexport default function ModalFolder({\r\n  searchArrayDirectives,\r\n  searchArrayInstructions,\r\n  arrayDirectives,\r\n  arrayInstructions,\r\n  inputSearchModalDirectory,\r\n  handleInputChangeModalSearch,\r\n  handleCheckboxChange,\r\n  directoryName,\r\n  setDirectoryName,\r\n  save,\r\n  setOpenModalDeleteDirectory,\r\n  exit,\r\n  buttonDelete,\r\n}) {\r\n  const renderDirectives = () => {\r\n    const directivesToRender = searchArrayDirectives.length > 0 \r\n      ? searchArrayDirectives \r\n      : arrayDirectives;\r\n    \r\n    return directivesToRender?.map((item) => (\r\n      <div\r\n        key={item.id}\r\n        className={classes.row}\r\n        onClick={() => handleCheckboxChange(item.id, \"directives\")}\r\n      >\r\n        <input \r\n          type=\"checkbox\" \r\n          checked={item.checked} \r\n          onChange={(e) => e.stopPropagation()}\r\n        />\r\n        <span>{item.policyName}</span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const renderInstructions = () => {\r\n    const instructionsToRender = searchArrayInstructions.length > 0 \r\n      ? searchArrayInstructions \r\n      : arrayInstructions;\r\n    \r\n    return instructionsToRender?.map((item) => (\r\n      <div\r\n        key={item.id}\r\n        className={classes.row}\r\n        onClick={() => handleCheckboxChange(item.id, \"instructions\")}\r\n      >\r\n        <input \r\n          type=\"checkbox\" \r\n          checked={item.checked} \r\n          onChange={(e) => e.stopPropagation()}\r\n        />\r\n        <span>{item.policyName}</span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.modalWindow}>\r\n        <img\r\n          src={exitModal}\r\n          alt=\"exitModal\"\r\n          onClick={exit}\r\n          className={classes.exit}\r\n        />\r\n\r\n        <div className={classes.header}>\r\n          <div className={classes.item1}>\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"Найти\"\r\n              value={inputSearchModalDirectory}\r\n              onChange={handleInputChangeModalSearch}\r\n              className={classes.search}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.item2}>\r\n            <Input\r\n              name={\"Название папки\"}\r\n              value={directoryName}\r\n              onChange={setDirectoryName}\r\n            />\r\n\r\n            <div className={classes.modalTableRowIcon}>\r\n              <ButtonImage\r\n                name={\"сохранить\"}\r\n                icon={Blacksavetmp}\r\n                onClick={save}\r\n              />\r\n              {buttonDelete && (\r\n                <ButtonImage\r\n                  name={\"удалить\"}\r\n                  icon={deleteGrey}\r\n                  onClick={() => setOpenModalDeleteDirectory(true)}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={classes.tablesContainer}>\r\n          {/* Таблица директив */}\r\n          <div className={classes.tableWrapper}>\r\n            <div className={classes.tableHeader}>Директивы</div>\r\n            <div className={classes.tableContent}>\r\n              <div className={classes.scrollContent}>\r\n                {renderDirectives()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Таблица инструкций */}\r\n          <div className={classes.tableWrapper}>\r\n            <div className={classes.tableHeader}>Инструкции</div>\r\n            <div className={classes.tableContent}>\r\n              <div className={classes.scrollContent}>\r\n                {renderInstructions()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport classes from \"./Policy.module.css\";\r\nimport subbarSearch from \"@image/subbarSearch.svg\";\r\nimport folder from \"@image/folder.svg\";\r\nimport iconSublist from \"@image/iconSublist.svg\";\r\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\r\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\r\nimport addCircleBlue from \"@image/addCircleBlue.svg\";\r\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\r\nimport Mdxeditor from \"@Custom/Mdxeditor/Mdxeditor.jsx\";\r\nimport Headers from \"@Custom/Headers/Headers.jsx\";\r\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders.jsx\";\r\nimport Select from \"@Custom/Select/Select.jsx\";\r\nimport ModalFolder from \"@Custom/modalFolder/ModalFolder\";\r\nimport ModalWindow from \"@Custom/ModalWindow\";\r\nimport { usePolicyHook, useGetReduxOrganization } from \"@hooks\";\r\nimport { useDirectories } from \"./hooks/Directories\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { ConfigProvider, Tour } from \"antd\";\r\nimport ruRU from \"antd/locale/ru_RU\";\r\n\r\nexport default function Policy() {\r\n  const { policyId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (policyId) {\r\n      setSelectedPolicyId(policyId);\r\n    }\r\n  }, []);\r\n\r\n  const selectRef = useRef(null);\r\n\r\n  const [isOpenSearch, setIsOpenSearch] = useState(false);\r\n\r\n  const [selectedPolicyId, setSelectedPolicyId] = useState(null);\r\n  const [policyName, setPolicyName] = useState(null);\r\n  const [type, setType] = useState(null);\r\n  const [state, setState] = useState(null);\r\n  const [editorState, setEditorState] = useState(\"\");\r\n  const [disabledArchive, setDisabledArchive] = useState(false);\r\n\r\n  const { reduxSelectedOrganizationId } = useGetReduxOrganization();\r\n\r\n  const refName = useRef(null);\r\n  const refType = useRef(null);\r\n  const refStatus = useRef(null);\r\n  const refCreate = useRef(null);\r\n  const refUpdate = useRef(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const steps = [\r\n    {\r\n      title: \"Название политики\",\r\n      description: \"Здесь можно поменять название выбранной политики\",\r\n      target: () => refName.current, // Добавляем проверку\r\n    },\r\n    {\r\n      title: \"Выбрать политику\",\r\n      description: \"Нажмите и выберите политику\",\r\n      target: () => selectRef.current, // Добавляем проверку\r\n    },\r\n    {\r\n      title: \"Тип политики\",\r\n      description: \"Нажмите и поменяйте тип\",\r\n      target: () => (selectedPolicyId ? refType.current : null), // Добавляем проверку\r\n      disabled: !selectedPolicyId,\r\n    },\r\n    {\r\n      title: \"Состояние политики\",\r\n      description: \"Нажмите и поменяйте состояние\",\r\n      target: () => (selectedPolicyId ? refStatus.current : null), // Добавляем проверку\r\n      disabled: !selectedPolicyId,\r\n    },\r\n    {\r\n      title: \"Создать\",\r\n      description: \"Нажмите для создания стратегии\",\r\n      target: () => refCreate.current,\r\n    },\r\n    {\r\n      title: \"Сохранить\",\r\n      description: \"Нажмите для сохранения\",\r\n      target: () => refUpdate.current,\r\n    },\r\n  ].filter((step) => !step.disabled); // Фильтруем шаги, у которых disabled=true;\r\n\r\n  const {\r\n    //useGetPoliciesQuery\r\n    isLoadingGetPolicies,\r\n    isErrorGetPolicies,\r\n    isFetchingGetPolicies,\r\n\r\n    //Valera\r\n    instructionsActive,\r\n    instructionsDraft,\r\n    instructionsCompleted,\r\n\r\n    directivesActive,\r\n    directivesDraft,\r\n    directivesCompleted,\r\n\r\n    //useGetPoliciesIdQuery\r\n    currentPolicy,\r\n    isLoadingGetPoliciesId,\r\n    isFetchingGetPoliciesId,\r\n    isErrorGetPoliciesId,\r\n\r\n    postPolicy,\r\n    isLoadingPostPoliciesMutation,\r\n    isSuccessPostPoliciesMutation,\r\n    isErrorPostPoliciesMutation,\r\n    ErrorPostPoliciesMutation,\r\n    localIsResponsePostPoliciesMutation,\r\n\r\n    updatePolicy,\r\n    isLoadingUpdatePoliciesMutation,\r\n    isSuccessUpdatePoliciesMutation,\r\n    isErrorUpdatePoliciesMutation,\r\n    ErrorUpdatePoliciesMutation,\r\n    localIsResponseUpdatePoliciesMutation,\r\n  } = usePolicyHook({\r\n    policyId: selectedPolicyId,\r\n    organizationId: reduxSelectedOrganizationId,\r\n  });\r\n\r\n  const {\r\n    setCurrentDirectoryInstructions,\r\n    setCurrentDirectoryDirectives,\r\n\r\n    directoriesSendBD,\r\n    currentDirectoryName,\r\n    setCurrentDirectoryName,\r\n\r\n    directoryName,\r\n    setDirectoryName,\r\n\r\n    currentDirectoryInstructions,\r\n    currentDirectoryDirectives,\r\n\r\n    inputSearchModalDirectory,\r\n    filterArraySearchModalDirectives,\r\n    filterArraySearchModalInstructions,\r\n\r\n    //Получение папок\r\n    foldersSort,\r\n    isLoadingGetPolicyDirectories,\r\n    isErrorGetPolicyDirectories,\r\n    isFetchingGetPolicyDirectories,\r\n\r\n    //Создание папки\r\n    openModalCreateDirectory,\r\n\r\n    openCreateDirectory,\r\n    exitCreateDirectory,\r\n\r\n    saveFolder,\r\n\r\n    isLoadingPostPoliciesDirectoriesMutation,\r\n    isSuccessPostPoliciesDirectoriesMutation,\r\n    isErrorPostPoliciesDirectoriesMutation,\r\n    ErrorPostPoliciesDirectoriesMutation,\r\n    localIsResponsePostPolicyDirectoriesMutation,\r\n\r\n    //Обновление папки\r\n    openModalUpdateDirectory,\r\n\r\n    updateDirectory,\r\n    exitUpdateDirectory,\r\n\r\n    saveUpdateFolder,\r\n\r\n    isLoadingUpdatePolicyDirectoriesMutation,\r\n    isSuccessUpdatePolicyDirectoriesMutation,\r\n    isErrorUpdatePolicyDirectoriesMutation,\r\n    ErrorUpdateDirectories,\r\n    localIsResponseUpdatePolicyDirectoriesMutation,\r\n\r\n    //Удаление папки\r\n    openModalDeleteDirectory,\r\n    setOpenModalDeleteDirectory,\r\n\r\n    saveDeleteFolder,\r\n\r\n    isLoadingDeletePolicyDirectoriesMutation,\r\n    isSuccessDeletePolicyDirectoriesMutation,\r\n    isErrorDeletePolicyDirectoriesMutation,\r\n    ErrorDeleteDirectories,\r\n    localIsResponseDeletePolicyDirectoriesMutation,\r\n\r\n    handleInputChangeModalSearch,\r\n    handleCheckboxChange,\r\n    handleCheckboxChangeUpdate,\r\n  } = useDirectories({ instructionsActive, directivesActive });\r\n\r\n  const savePostPolicy = async () => {\r\n    await postPolicy({\r\n      organizationId: reduxSelectedOrganizationId,\r\n    })\r\n      .unwrap()\r\n      .then((result) => {\r\n        setSelectedPolicyId(result.id);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\r\n      });\r\n  };\r\n\r\n  const saveUpdatePolicy = async () => {\r\n    const Data = {};\r\n\r\n    if (policyName !== null && currentPolicy.policyName !== policyName) {\r\n      Data.policyName = policyName;\r\n    }\r\n    if (state !== null && currentPolicy.state !== state) {\r\n      Data.state = state;\r\n    }\r\n    if (type !== null && currentPolicy.type !== type) {\r\n      Data.type = type;\r\n    }\r\n    if (editorState !== null && currentPolicy.content !== editorState) {\r\n      Data.content = editorState;\r\n    }\r\n    await updatePolicy({\r\n      _id: selectedPolicyId,\r\n      ...Data,\r\n    })\r\n      .unwrap()\r\n      .then(() => {})\r\n      .catch((error) => {\r\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\r\n      });\r\n  };\r\n\r\n  const getPolicyId = (id) => {\r\n    setSelectedPolicyId(id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentPolicy.policyName) {\r\n      setPolicyName(currentPolicy.policyName);\r\n    }\r\n    if (currentPolicy.type) {\r\n      setType(currentPolicy.type);\r\n    }\r\n    if (currentPolicy.state) {\r\n      setState(currentPolicy.state);\r\n    }\r\n    if (currentPolicy.content && currentPolicy.content !== editorState) {\r\n      setEditorState(currentPolicy.content);\r\n    }\r\n  }, [currentPolicy.id]);\r\n\r\n  useEffect(() => {\r\n    if (instructionsActive.length > 0) {\r\n      const update = instructionsActive.map((item) => ({\r\n        id: item.id,\r\n        policyName: item.policyName,\r\n        checked: false,\r\n      }));\r\n      setCurrentDirectoryInstructions(update);\r\n    }\r\n    if (directivesActive.length > 0) {\r\n      const update = directivesActive.map((item) => ({\r\n        id: item.id,\r\n        policyName: item.policyName,\r\n        checked: false,\r\n      }));\r\n      setCurrentDirectoryDirectives(update);\r\n    }\r\n  }, [isLoadingGetPolicies, isFetchingGetPolicies]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\r\n        setIsOpenSearch(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const arrayTypes = [\r\n    { id: \"Директива\", value: \"Директива\" },\r\n    { id: \"Инструкция\", value: \"Инструкция\" },\r\n  ];\r\n\r\n  const arrayState = [\r\n    { id: \"Черновик\", value: \"Черновик\" },\r\n    { id: \"Активный\", value: \"Активный\" },\r\n    { id: \"Отменён\", value: \"Отменён\" },\r\n  ];\r\n\r\n  const btnYes = () => {\r\n    saveDeleteFolder();\r\n  };\r\n\r\n  const btnNo = () => {\r\n    setOpenModalDeleteDirectory(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dialog}>\r\n      <Headers name={\"политика\"} funcActiveHint={() => setOpen(true)}>\r\n        <BottomHeaders\r\n          create={savePostPolicy}\r\n          update={saveUpdatePolicy}\r\n          refCreate={refCreate}\r\n          refUpdate={refUpdate}\r\n        >\r\n          <div className={classes.item} ref={refName}>\r\n            <div className={classes.itemName} >\r\n              <span>\r\n                Название политики <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </div>\r\n            <div className={classes.div}>\r\n              <input\r\n                type=\"text\"\r\n                value={policyName}\r\n                onChange={(e) => setPolicyName(e.target.value)}\r\n                title=\"Название политики\"\r\n                className={`${classes.five} ${classes.textMontserrat14}`}\r\n                disabled={disabledArchive}\r\n              ></input>\r\n              <div className={classes.sixth} ref={selectRef}>\r\n                <img\r\n                  src={subbarSearch}\r\n                  alt=\"subbarSearch\"\r\n                  onClick={() => setIsOpenSearch(true)}\r\n                />\r\n                {isOpenSearch && (\r\n                  <ul className={classes.policySearch}>\r\n                    <li className={classes.policySearchItemNested}>\r\n                      <div className={classes.listUL}>\r\n                        <img src={folder} alt=\"folder\" />\r\n                        <div className={classes.listText}>Директивы</div>\r\n                        <img\r\n                          src={iconSublist}\r\n                          alt=\"iconSublist\"\r\n                          style={{ marginLeft: \"auto\" }}\r\n                        />\r\n                      </div>\r\n                      <ul className={classes.listULElementNested}>\r\n                        <li className={classes.policySearchItemNestedNested}>\r\n                          <div className={classes.listULNested}>\r\n                            <img src={folder} alt=\"folder\" />\r\n                            <div\r\n                              className={`${classes.listText} ${classes.activeText}`}\r\n                            >\r\n                              Активные\r\n                            </div>\r\n                            <img\r\n                              src={iconSublist}\r\n                              alt=\"iconSublist\"\r\n                              style={{ marginLeft: \"auto\" }}\r\n                            />\r\n                          </div>\r\n                          <ul className={classes.listULElementNestedTwo}>\r\n                            {directivesActive?.map((item) => (\r\n                              <li\r\n                                key={item.id}\r\n                                onClick={() => {\r\n                                  getPolicyId(item.id);\r\n                                  setIsOpenSearch(false);\r\n                                }}\r\n                                className={classes.textMontserrat}\r\n                              >\r\n                                {item.policyName}\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </li>\r\n\r\n                        <li className={classes.policySearchItemNestedNested}>\r\n                          <div className={classes.listULNested}>\r\n                            <img src={folder} alt=\"folder\" />\r\n                            <div\r\n                              className={`${classes.listText} ${classes.draftText}`}\r\n                            >\r\n                              Черновики\r\n                            </div>\r\n                            <img\r\n                              src={iconSublist}\r\n                              alt=\"iconSublist\"\r\n                              style={{ marginLeft: \"auto\" }}\r\n                            />\r\n                          </div>\r\n                          <ul className={classes.listULElementNestedTwo}>\r\n                            {directivesDraft?.map((item) => (\r\n                              <li\r\n                                key={item.id}\r\n                                onClick={() => {\r\n                                  getPolicyId(item.id);\r\n                                  setIsOpenSearch(false);\r\n                                }}\r\n                                className={classes.textMontserrat}\r\n                              >\r\n                                {item.policyName}\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </li>\r\n\r\n                        <li className={classes.policySearchItemNestedNested}>\r\n                          <div className={classes.listULNested}>\r\n                            <img src={folder} alt=\"folder\" />\r\n                            <div\r\n                              className={`${classes.listText} ${classes.completedText}`}\r\n                            >\r\n                              Завершенные\r\n                            </div>\r\n                            <img\r\n                              src={iconSublist}\r\n                              alt=\"iconSublist\"\r\n                              style={{ marginLeft: \"auto\" }}\r\n                            />\r\n                          </div>\r\n                          <ul className={classes.listULElementNestedTwo}>\r\n                            {directivesCompleted?.map((item) => (\r\n                              <li\r\n                                key={item.id}\r\n                                onClick={() => {\r\n                                  getPolicyId(item.id);\r\n                                  setDisabledArchive(true);\r\n                                  setIsOpenSearch(false);\r\n                                }}\r\n                                className={classes.textMontserrat}\r\n                              >\r\n                                {item.policyName}\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </li>\r\n                      </ul>\r\n                    </li>\r\n\r\n                    <li className={classes.policySearchItemNested}>\r\n                      <div className={classes.listUL}>\r\n                        <img src={folder} alt=\"folder\" />\r\n                        <div className={classes.listText}>Инструкции</div>\r\n                        <img\r\n                          src={iconSublist}\r\n                          alt=\"iconSublist\"\r\n                          style={{ marginLeft: \"auto\" }}\r\n                        />\r\n                      </div>\r\n                      <ul className={classes.listULElementNested}>\r\n                        <li className={classes.policySearchItemNestedNested}>\r\n                          <div className={classes.listULNested}>\r\n                            <img src={folder} alt=\"folder\" />\r\n                            <div\r\n                              className={`${classes.listText} ${classes.activeText}`}\r\n                            >\r\n                              Активные\r\n                            </div>\r\n                            <img\r\n                              src={iconSublist}\r\n                              alt=\"iconSublist\"\r\n                              style={{ marginLeft: \"auto\" }}\r\n                            />\r\n                          </div>\r\n                          <ul className={classes.listULElementNestedTwo}>\r\n                            {instructionsActive?.map((item) => (\r\n                              <li\r\n                                key={item.id}\r\n                                onClick={() => {\r\n                                  getPolicyId(item.id);\r\n                                  setIsOpenSearch(false);\r\n                                }}\r\n                                className={classes.textMontserrat}\r\n                              >\r\n                                {item.policyName}\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </li>\r\n\r\n                        <li className={classes.policySearchItemNestedNested}>\r\n                          <div className={classes.listULNested}>\r\n                            <img src={folder} alt=\"folder\" />\r\n                            <div\r\n                              className={`${classes.listText} ${classes.draftText}`}\r\n                            >\r\n                              Черновики\r\n                            </div>\r\n                            <img\r\n                              src={iconSublist}\r\n                              alt=\"iconSublist\"\r\n                              style={{ marginLeft: \"auto\" }}\r\n                            />\r\n                          </div>\r\n                          <ul className={classes.listULElementNestedTwo}>\r\n                            {instructionsDraft?.map((item) => (\r\n                              <li\r\n                                key={item.id}\r\n                                onClick={() => {\r\n                                  getPolicyId(item.id);\r\n                                  setIsOpenSearch(false);\r\n                                }}\r\n                                className={classes.textMontserrat}\r\n                              >\r\n                                {item.policyName}\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </li>\r\n\r\n                        <li className={classes.policySearchItemNestedNested}>\r\n                          <div className={classes.listULNested}>\r\n                            <img src={folder} alt=\"folder\" />\r\n                            <div\r\n                              className={`${classes.listText} ${classes.completedText}`}\r\n                            >\r\n                              Завершенные\r\n                            </div>\r\n                            <img\r\n                              src={iconSublist}\r\n                              alt=\"iconSublist\"\r\n                              style={{ marginLeft: \"auto\" }}\r\n                            />\r\n                          </div>\r\n                          <ul className={classes.listULElementNestedTwo}>\r\n                            {instructionsCompleted?.map((item) => (\r\n                              <li\r\n                                key={item.id}\r\n                                onClick={() => {\r\n                                  getPolicyId(item.id);\r\n                                  setDisabledArchive(true);\r\n                                  setIsOpenSearch(false);\r\n                                }}\r\n                                className={classes.textMontserrat}\r\n                              >\r\n                                {item.policyName}\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </li>\r\n                      </ul>\r\n                    </li>\r\n\r\n                    {foldersSort?.map((item) => {\r\n                      let hasInstruction = false;\r\n                      let hasDirective = false;\r\n                      return (\r\n                        <li className={classes.policySearchItem} key={item.id}>\r\n                          <div\r\n                            className={classes.listUL}\r\n                            onClick={() => updateDirectory(item)}\r\n                          >\r\n                            <img src={folder} alt=\"folder\" />\r\n                            <div className={classes.listText}>\r\n                              {item.directoryName}\r\n                            </div>\r\n                            <img\r\n                              src={iconSublist}\r\n                              alt=\"iconSublist\"\r\n                              style={{ marginLeft: \"auto\" }}\r\n                            />\r\n                          </div>\r\n                          <ul className={classes.listULElement}>\r\n                            {item.policyToPolicyDirectories?.map((element) => {\r\n                              const isInstruction =\r\n                                element.policy.type === \"Инструкция\";\r\n\r\n                              let instructionHeader = null;\r\n\r\n                              if (isInstruction && !hasInstruction) {\r\n                                hasInstruction = true;\r\n                                instructionHeader = (\r\n                                  <li\r\n                                    key=\"instruction-header\"\r\n                                    className={`${classes.headerText}`}\r\n                                  >\r\n                                    Инструкции\r\n                                  </li>\r\n                                );\r\n                              }\r\n\r\n                              const isDirective =\r\n                                element.policy.type === \"Директива\";\r\n\r\n                              let directiveHeader = null;\r\n\r\n                              if (isDirective && !hasDirective) {\r\n                                hasDirective = true;\r\n                                directiveHeader = (\r\n                                  <li\r\n                                    key=\"directive-header\"\r\n                                    className={`${classes.headerText}`}\r\n                                  >\r\n                                    Директивы\r\n                                  </li>\r\n                                );\r\n                              }\r\n\r\n                              return (\r\n                                <React.Fragment key={element.policy.id}>\r\n                                  {directiveHeader}\r\n                                  {instructionHeader}\r\n                                  <li\r\n                                    onClick={() => {\r\n                                      getPolicyId(element.policy.id);\r\n                                      setIsOpenSearch(false);\r\n                                    }}\r\n                                    className={classes.textMontserrat}\r\n                                  >\r\n                                    {element.policy.policyName}\r\n                                  </li>\r\n                                </React.Fragment>\r\n                              );\r\n                            })}\r\n                          </ul>\r\n                        </li>\r\n                      );\r\n                    })}\r\n\r\n                    <li className={classes.policySearchItem}>\r\n                      <div\r\n                        className={classes.listUL}\r\n                        onClick={openCreateDirectory}\r\n                      >\r\n                        <img src={addCircleBlue} alt=\"addCircleBlue\" />\r\n                        <div className={classes.listText}>Создать папку</div>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {currentPolicy.id && (\r\n            <>\r\n              <Select\r\n               refSelect={refType}\r\n                name={\"Тип\"}\r\n                value={type}\r\n                onChange={setType}\r\n                array={arrayTypes}\r\n                arrayItem={\"value\"}\r\n                disabledPole={disabledArchive}\r\n              ></Select>\r\n              <Select\r\n                refSelect={refStatus}\r\n                name={\"Состояние\"}\r\n                value={state}\r\n                onChange={setState}\r\n                array={arrayState}\r\n                arrayItem={\"value\"}\r\n                disabledPole={disabledArchive}\r\n              ></Select>\r\n            </>\r\n          )}\r\n        </BottomHeaders>\r\n      </Headers>\r\n\r\n      <ConfigProvider locale={ruRU}>\r\n        <Tour open={open} onClose={() => setOpen(false)} steps={steps} />\r\n      </ConfigProvider>\r\n\r\n      <div className={classes.main}>\r\n        {isErrorPostPoliciesMutation ||\r\n        (isErrorGetPolicies && isErrorGetPolicyDirectories) ? (\r\n          <>\r\n            <HandlerQeury\r\n              Error={\r\n                isErrorGetPolicies ||\r\n                isErrorGetPolicyDirectories ||\r\n                isErrorPostPoliciesMutation\r\n              }\r\n            ></HandlerQeury>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {isErrorGetPoliciesId ? (\r\n              <HandlerQeury Error={isErrorGetPoliciesId}></HandlerQeury>\r\n            ) : (\r\n              <>\r\n                <HandlerQeury\r\n                  Loading={isLoadingGetPolicies}\r\n                  Fetching={isFetchingGetPolicies}\r\n                ></HandlerQeury>\r\n\r\n                <HandlerQeury\r\n                  Loading={isLoadingGetPolicyDirectories}\r\n                  Fetching={isFetchingGetPolicyDirectories}\r\n                ></HandlerQeury>\r\n\r\n                {isFetchingGetPoliciesId || isLoadingGetPoliciesId ? (\r\n                  <HandlerQeury\r\n                    Loading={isLoadingGetPoliciesId}\r\n                    Fetching={isFetchingGetPoliciesId}\r\n                  ></HandlerQeury>\r\n                ) : (\r\n                  <>\r\n                    {currentPolicy.content ? (\r\n                      <>\r\n                        <Mdxeditor\r\n                          key={currentPolicy.id}\r\n                          editorState={currentPolicy.content}\r\n                          setEditorState={setEditorState}\r\n                          readOnly={disabledArchive}\r\n                        ></Mdxeditor>\r\n\r\n                        <HandlerMutation\r\n                          Loading={isLoadingPostPoliciesMutation}\r\n                          Error={\r\n                            isErrorPostPoliciesMutation &&\r\n                            localIsResponsePostPoliciesMutation\r\n                          }\r\n                          Success={\r\n                            isSuccessPostPoliciesMutation &&\r\n                            localIsResponsePostPoliciesMutation\r\n                          }\r\n                          textSuccess={\"Политика успешно создана.\"}\r\n                          textError={\r\n                            ErrorPostPoliciesMutation?.data?.errors?.[0]\r\n                              ?.errors?.[0]\r\n                              ? ErrorPostPoliciesMutation.data.errors[0]\r\n                                  .errors[0]\r\n                              : ErrorPostPoliciesMutation?.data?.message\r\n                          }\r\n                        ></HandlerMutation>\r\n\r\n                        <HandlerMutation\r\n                          Loading={isLoadingUpdatePoliciesMutation}\r\n                          Error={\r\n                            isErrorUpdatePoliciesMutation &&\r\n                            localIsResponseUpdatePoliciesMutation\r\n                          }\r\n                          Success={\r\n                            isSuccessUpdatePoliciesMutation &&\r\n                            localIsResponseUpdatePoliciesMutation\r\n                          }\r\n                          textSuccess={`Политика ${policyName} обновлена`}\r\n                          textError={\r\n                            ErrorUpdatePoliciesMutation?.data?.errors?.[0]\r\n                              ?.errors?.[0]\r\n                              ? ErrorUpdatePoliciesMutation.data.errors[0]\r\n                                  .errors[0]\r\n                              : ErrorUpdatePoliciesMutation?.data?.message\r\n                          }\r\n                        ></HandlerMutation>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <WaveLetters\r\n                          letters={\"Выберите политику\"}\r\n                        ></WaveLetters>\r\n                      </>\r\n                    )}\r\n\r\n                    <HandlerMutation\r\n                      Loading={isLoadingPostPoliciesDirectoriesMutation}\r\n                      Error={\r\n                        isErrorPostPoliciesDirectoriesMutation &&\r\n                        localIsResponsePostPolicyDirectoriesMutation\r\n                      }\r\n                      Success={\r\n                        isSuccessPostPoliciesDirectoriesMutation &&\r\n                        localIsResponsePostPolicyDirectoriesMutation\r\n                      }\r\n                      textSuccess={`Папка ${directoryName} создана`}\r\n                      textError={\r\n                        ErrorPostPoliciesDirectoriesMutation?.data?.errors?.[0]\r\n                          ?.errors?.[0]\r\n                          ? ErrorPostPoliciesDirectoriesMutation.data.errors[0]\r\n                              .errors[0]\r\n                          : ErrorPostPoliciesDirectoriesMutation?.data?.message\r\n                      }\r\n                    ></HandlerMutation>\r\n\r\n                    <HandlerMutation\r\n                      Loading={isLoadingUpdatePolicyDirectoriesMutation}\r\n                      Error={\r\n                        isErrorUpdatePolicyDirectoriesMutation &&\r\n                        localIsResponseUpdatePolicyDirectoriesMutation\r\n                      }\r\n                      Success={\r\n                        isSuccessUpdatePolicyDirectoriesMutation &&\r\n                        localIsResponseUpdatePolicyDirectoriesMutation\r\n                      }\r\n                      textSuccess={`Папка ${currentDirectoryName} обновлена`}\r\n                      textError={\r\n                        ErrorUpdateDirectories?.data?.errors?.[0]?.errors?.[0]\r\n                          ? ErrorUpdateDirectories.data.errors[0].errors[0]\r\n                          : ErrorUpdateDirectories?.data?.message\r\n                      }\r\n                    ></HandlerMutation>\r\n\r\n                    <HandlerMutation\r\n                      Loading={isLoadingDeletePolicyDirectoriesMutation}\r\n                      Error={\r\n                        isErrorDeletePolicyDirectoriesMutation &&\r\n                        localIsResponseDeletePolicyDirectoriesMutation\r\n                      }\r\n                      Success={\r\n                        isSuccessDeletePolicyDirectoriesMutation &&\r\n                        localIsResponseDeletePolicyDirectoriesMutation\r\n                      }\r\n                      textSuccess={`Папка ${currentDirectoryName} удалена`}\r\n                      textError={\r\n                        ErrorDeleteDirectories?.data?.errors?.[0]?.errors?.[0]\r\n                          ? ErrorDeleteDirectories.data.errors[0].errors[0]\r\n                          : ErrorDeleteDirectories?.data?.message\r\n                      }\r\n                    ></HandlerMutation>\r\n\r\n                    {openModalCreateDirectory && (\r\n                      <ModalFolder\r\n                        searchArrayDirectives={filterArraySearchModalDirectives}\r\n                        searchArrayInstructions={\r\n                          filterArraySearchModalInstructions\r\n                        }\r\n                        arrayDirectives={directivesActive}\r\n                        arrayInstructions={instructionsActive}\r\n                        handleInputChangeModalSearch={\r\n                          handleInputChangeModalSearch\r\n                        }\r\n                        inputSearchModalDirectory={inputSearchModalDirectory}\r\n                        handleCheckboxChange={handleCheckboxChange}\r\n                        directoryName={directoryName}\r\n                        setDirectoryName={setDirectoryName}\r\n                        save={saveFolder}\r\n                        setOpenModalDeleteDirectory={\r\n                          setOpenModalDeleteDirectory\r\n                        }\r\n                        exit={exitCreateDirectory}\r\n                      ></ModalFolder>\r\n                    )}\r\n\r\n                    {openModalUpdateDirectory && (\r\n                      <ModalFolder\r\n                        searchArrayDirectives={filterArraySearchModalDirectives}\r\n                        searchArrayInstructions={\r\n                          filterArraySearchModalInstructions\r\n                        }\r\n                        arrayDirectives={currentDirectoryDirectives}\r\n                        arrayInstructions={currentDirectoryInstructions}\r\n                        handleInputChangeModalSearch={\r\n                          handleInputChangeModalSearch\r\n                        }\r\n                        inputSearchModalDirectory={inputSearchModalDirectory}\r\n                        handleCheckboxChange={handleCheckboxChangeUpdate}\r\n                        directoryName={currentDirectoryName}\r\n                        setDirectoryName={setCurrentDirectoryName}\r\n                        save={saveUpdateFolder}\r\n                        setOpenModalDeleteDirectory={\r\n                          setOpenModalDeleteDirectory\r\n                        }\r\n                        exit={exitUpdateDirectory}\r\n                        buttonDelete={true}\r\n                      ></ModalFolder>\r\n                    )}\r\n\r\n                    {openModalDeleteDirectory && (\r\n                      <ModalWindow\r\n                        text={` Вы точно хотите удалить папку ${currentDirectoryName}`}\r\n                        close={setOpenModalDeleteDirectory}\r\n                        btnYes={btnYes}\r\n                        btnNo={btnNo}\r\n                      ></ModalWindow>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  useDeleteDirectoriesMutation,\r\n  useGetDirectoriesQuery,\r\n  usePostDirectoriesMutation,\r\n  useUpdateDirectoriesMutation,\r\n} from \"@hooks\";\r\nimport { usePolicyDirectoriesHook } from \"../../../../hooks/usePolicyDirectoriesHook\";\r\n\r\nexport function useDirectories({ instructionsActive, directivesActive }) {\r\n  const [currentDirectoryName, setCurrentDirectoryName] = useState();\r\n  const [currentDirectoryId, setCurrentDirectoryId] = useState();\r\n\r\n  const [openModalCreateDirectory, setOpenModalCreateDirectory] =\r\n    useState(false);\r\n  const [openModalUpdateDirectory, setOpenModalUpdateDirectory] =\r\n    useState(false);\r\n  const [openModalDeleteDirectory, setOpenModalDeleteDirectory] =\r\n    useState(false);\r\n\r\n  const [directoryName, setDirectoryName] = useState(\"\");\r\n\r\n  const [directoriesSendBD, setDirectoriesSendBD] = useState([]);\r\n  const [directoriesUpdate, setDirectoriesUpdate] = useState([]);\r\n\r\n  const [currentDirectoryInstructions, setCurrentDirectoryInstructions] =\r\n    useState([]);\r\n  const [currentDirectoryDirectives, setCurrentDirectoryDirectives] = useState(\r\n    []\r\n  );\r\n\r\n  const [inputSearchModalDirectory, setInputSearchModalDirectory] =\r\n    useState(\"\");\r\n  const [\r\n    filterArraySearchModalDirectives,\r\n    setFilterArraySearchModalDirectives,\r\n  ] = useState([]);\r\n  const [\r\n    filterArraySearchModalInstructions,\r\n    setFilterArraySearchModalInstructions,\r\n  ] = useState([]);\r\n\r\n  const {\r\n    folders,\r\n    foldersSort,\r\n    isLoadingGetPolicyDirectories,\r\n    isErrorGetPolicyDirectories,\r\n    isFetchingGetPolicyDirectories,\r\n\r\n    deletePolicyDirectories,\r\n    isLoadingDeletePolicyDirectoriesMutation,\r\n    isSuccessDeletePolicyDirectoriesMutation,\r\n    isErrorDeletePolicyDirectoriesMutation,\r\n    ErrorDeleteDirectories,\r\n    localIsResponseDeletePolicyDirectoriesMutation,\r\n\r\n    updatePolicyDirectories,\r\n    isLoadingUpdatePolicyDirectoriesMutation,\r\n    isSuccessUpdatePolicyDirectoriesMutation,\r\n    isErrorUpdatePolicyDirectoriesMutation,\r\n    ErrorUpdateDirectories,\r\n    localIsResponseUpdatePolicyDirectoriesMutation,\r\n\r\n    postDirectory,\r\n    isLoadingPostPoliciesDirectoriesMutation,\r\n    isSuccessPostPoliciesDirectoriesMutation,\r\n    isErrorPostPoliciesDirectoriesMutation,\r\n    ErrorPostPoliciesDirectoriesMutation,\r\n    localIsResponsePostPolicyDirectoriesMutation,\r\n  } = usePolicyDirectoriesHook();\r\n\r\n  const saveFolder = async () => {\r\n    await postDirectory({\r\n      directoryName: directoryName,\r\n      policyToPolicyDirectories: directoriesSendBD,\r\n    })\r\n      .unwrap()\r\n      .then(() => {\r\n        setDirectoryName(\"\");\r\n        setDirectoriesSendBD([]);\r\n\r\n        setOpenModalCreateDirectory(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\r\n      });\r\n  };\r\n\r\n  const saveUpdateFolder = async () => {\r\n    await updatePolicyDirectories({\r\n      policyDirectoryId: currentDirectoryId,\r\n      directoryName: currentDirectoryName,\r\n      policyToPolicyDirectories: directoriesUpdate,\r\n    })\r\n      .unwrap()\r\n      .then(() => {\r\n        exitUpdateDirectory();\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\r\n      });\r\n  };\r\n\r\n  const saveDeleteFolder = async () => {\r\n    await deletePolicyDirectories({\r\n      policyDirectoryId: currentDirectoryId,\r\n    })\r\n      .unwrap()\r\n      .then(() => {\r\n        setOpenModalDeleteDirectory(false);\r\n        setOpenModalUpdateDirectory(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\r\n      });\r\n  };\r\n\r\n  const openCreateDirectory = () => {\r\n    setOpenModalCreateDirectory(true);\r\n  };\r\n  const exitCreateDirectory = () => {\r\n    setOpenModalCreateDirectory(false);\r\n  };\r\n\r\n  const updateDirectory = (element) => {\r\n    const obj = folders?.filter((item) => item.id === element.id);\r\n    if (obj?.length > 0) {\r\n      const { id, directoryName, policyToPolicyDirectories } = obj[0];\r\n      const policyIds = policyToPolicyDirectories.map(\r\n        (element) => element.policy.id\r\n      );\r\n      setDirectoriesUpdate(policyIds);\r\n      const filterArray = instructionsActive\r\n        .filter((item) => policyIds.includes(item.id))\r\n        .map((item) => ({\r\n          id: item.id,\r\n          policyName: item.policyName,\r\n          checked: true,\r\n        }));\r\n      const filterArray1 = directivesActive\r\n        .filter((item) => policyIds.includes(item.id))\r\n        .map((item) => ({\r\n          id: item.id,\r\n          policyName: item.policyName,\r\n          checked: true,\r\n        }));\r\n\r\n      const update = currentDirectoryInstructions\r\n        ?.map((item) => {\r\n          const foundItem = filterArray?.find(\r\n            (element) => item.id === element.id\r\n          );\r\n          return {\r\n            id: item.id,\r\n            policyName: item.policyName,\r\n            checked: foundItem ? true : false,\r\n          };\r\n        })\r\n        ?.sort((a, b) => {\r\n          // Сначала сортируем по checked: true должны быть выше\r\n          if (a.checked === b.checked) {\r\n            // Если оба элемента имеют одинаковое значение checked, сортируем по policyName (алфавитно)\r\n            return a.policyName.localeCompare(b.policyName);\r\n          }\r\n          return b.checked - a.checked; // true (1) должно быть выше false (0)\r\n        });\r\n\r\n      const update1 = currentDirectoryDirectives\r\n        ?.map((item) => {\r\n          const foundItem = filterArray1?.find(\r\n            (element) => item.id === element.id\r\n          );\r\n          return {\r\n            id: item.id,\r\n            policyName: item.policyName,\r\n            checked: foundItem ? true : false,\r\n          };\r\n        })\r\n        ?.sort((a, b) => {\r\n          // Сначала сортируем по checked: true должны быть выше\r\n          if (a.checked === b.checked) {\r\n            // Если оба элемента имеют одинаковое значение checked, сортируем по policyName (алфавитно)\r\n            return a.policyName.localeCompare(b.policyName);\r\n          }\r\n          return b.checked - a.checked; // true (1) должно быть выше false (0)\r\n        });\r\n      setCurrentDirectoryInstructions(update);\r\n      setCurrentDirectoryDirectives(update1);\r\n      setCurrentDirectoryName(directoryName);\r\n      setCurrentDirectoryId(id);\r\n      setOpenModalUpdateDirectory(true);\r\n    }\r\n  };\r\n  const exitUpdateDirectory = () => {\r\n    setOpenModalUpdateDirectory(false);\r\n  };\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setDirectoriesSendBD((prev) => {\r\n      if (prev.includes(id)) {\r\n        return prev.filter((item) => item !== id);\r\n      } else {\r\n        return [...prev, id];\r\n      }\r\n    });\r\n  };\r\n  const handleCheckboxChangeUpdate = (id, type) => {\r\n    setDirectoriesUpdate((prev) => {\r\n      if (prev.includes(id)) {\r\n        return prev.filter((item) => item !== id);\r\n      } else {\r\n        return [...prev, id];\r\n      }\r\n    });\r\n\r\n    if (type === \"directives\") {\r\n      setCurrentDirectoryDirectives((prev) => {\r\n        return prev.map((item) => {\r\n          if (item.id === id) {\r\n            return { ...item, checked: !item.checked };\r\n          }\r\n          return item;\r\n        });\r\n      });\r\n    }\r\n\r\n    if (type === \"instructions\") {\r\n      setCurrentDirectoryInstructions((prev) => {\r\n        return prev.map((item) => {\r\n          if (item.id === id) {\r\n            return { ...item, checked: !item.checked };\r\n          }\r\n          return item;\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChangeModalSearch = (e) => {\r\n    setInputSearchModalDirectory(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputSearchModalDirectory !== \"\") {\r\n      const arrayDirectives = [...directivesActive];\r\n      const arrayInstructions = [...instructionsActive];\r\n      const filteredDirectives = arrayDirectives.filter((item) =>\r\n        item.policyName\r\n          .toLowerCase()\r\n          .includes(inputSearchModalDirectory.toLowerCase())\r\n      );\r\n      const filteredInstructions = arrayInstructions.filter((item) =>\r\n        item.policyName\r\n          .toLowerCase()\r\n          .includes(inputSearchModalDirectory.toLowerCase())\r\n      );\r\n      setFilterArraySearchModalDirectives(filteredDirectives);\r\n      setFilterArraySearchModalInstructions(filteredInstructions);\r\n    } else {\r\n      setFilterArraySearchModalDirectives([]);\r\n      setFilterArraySearchModalInstructions([]);\r\n    }\r\n  }, [inputSearchModalDirectory]);\r\n\r\n  useEffect(() => {\r\n    if (openModalUpdateDirectory === false) {\r\n      setInputSearchModalDirectory(\"\");\r\n      setFilterArraySearchModalDirectives([]);\r\n      setFilterArraySearchModalInstructions([]);\r\n    }\r\n  }, [openModalUpdateDirectory]);\r\n\r\n  useEffect(() => {\r\n    if (openModalCreateDirectory === false) {\r\n      setInputSearchModalDirectory(\"\");\r\n      setFilterArraySearchModalDirectives([]);\r\n      setFilterArraySearchModalInstructions([]);\r\n    }\r\n  }, [openModalCreateDirectory]);\r\n\r\n  return {\r\n    setCurrentDirectoryInstructions,\r\n    setCurrentDirectoryDirectives,\r\n\r\n    directoriesSendBD,\r\n    currentDirectoryName,\r\n    setCurrentDirectoryName,\r\n\r\n    directoryName,\r\n    setDirectoryName,\r\n\r\n    currentDirectoryInstructions,\r\n    currentDirectoryDirectives,\r\n\r\n    inputSearchModalDirectory,\r\n    filterArraySearchModalDirectives,\r\n    filterArraySearchModalInstructions,\r\n\r\n    //Получение папок\r\n    foldersSort,\r\n    isLoadingGetPolicyDirectories,\r\n    isErrorGetPolicyDirectories,\r\n    isFetchingGetPolicyDirectories,\r\n\r\n    //Создание папки\r\n    openModalCreateDirectory,\r\n\r\n    openCreateDirectory,\r\n    exitCreateDirectory,\r\n\r\n    saveFolder,\r\n\r\n    isLoadingPostPoliciesDirectoriesMutation,\r\n    isSuccessPostPoliciesDirectoriesMutation,\r\n    isErrorPostPoliciesDirectoriesMutation,\r\n    ErrorPostPoliciesDirectoriesMutation,\r\n    localIsResponsePostPolicyDirectoriesMutation,\r\n\r\n    //Обновление папки\r\n    openModalUpdateDirectory,\r\n\r\n    updateDirectory,\r\n    exitUpdateDirectory,\r\n\r\n    saveUpdateFolder,\r\n\r\n    isLoadingUpdatePolicyDirectoriesMutation,\r\n    isSuccessUpdatePolicyDirectoriesMutation,\r\n    isErrorUpdatePolicyDirectoriesMutation,\r\n    ErrorUpdateDirectories,\r\n    localIsResponseUpdatePolicyDirectoriesMutation,\r\n\r\n\r\n    //Удаление папки\r\n    openModalDeleteDirectory,\r\n    setOpenModalDeleteDirectory,\r\n\r\n    saveDeleteFolder,\r\n\r\n    isLoadingDeletePolicyDirectoriesMutation,\r\n    isSuccessDeletePolicyDirectoriesMutation,\r\n    isErrorDeletePolicyDirectoriesMutation,\r\n    ErrorDeleteDirectories,\r\n    localIsResponseDeletePolicyDirectoriesMutation,\r\n\r\n    handleInputChangeModalSearch,\r\n    handleCheckboxChange,\r\n    handleCheckboxChangeUpdate,\r\n  };\r\n}\r\n"],"names":["ButtonAction","_ref","create","update","refUpdate","refCreate","_jsxs","className","classes","wrapper","children","_jsx","ButtonImage","refAction","name","icon","iconAdd","onClick","Blacksavetmp","BottomHeaders","editText","ModalWindow","text","close","btnYes","btnNo","exitBtn","modalDelete","modalDeleteElement","src","exit","alt","exitImage","modalRow1","modalRow2","concat","textBtnYes","textBtnNo","WaveLetters","letters","arrayLetters","split","wave","map","item","index","style","i18n","initReactI18next","init","resources","ru","translation","lng","fallbackLng","interpolation","escapeValue","Mdxeditor","editorState","setEditorState","userId","readOnly","editorRef","useRef","postImage","usePostImageMutation","editorContainer","MDXEditor","contentEditableClassName","par","ref","markdown","key","defaultValue","interpolations","t","_objectSpread","placeholder","onChange","newContent","current","setMarkdown","plugins","linkPlugin","linkDialogPlugin","imagePlugin","imageUploadHandler","async","_ref2","_response$data","formData","FormData","append","file","response","unwrap","filePath","data","replace","Error","console","log","baseUrl","error","Promise","reject","tablePlugin","listsPlugin","toolbarPlugin","toolbarClassName","toolbarContents","_Fragment","marginRight","UndoRedo","BoldItalicUnderlineToggles","ListsToggle","InsertImage","Separator","InsertTable","CreateLink","ModalFolder","searchArrayDirectives","searchArrayInstructions","arrayDirectives","arrayInstructions","inputSearchModalDirectory","handleInputChangeModalSearch","handleCheckboxChange","directoryName","setDirectoryName","save","setOpenModalDeleteDirectory","buttonDelete","modal","modalWindow","exitModal","header","item1","type","value","search","item2","Input","modalTableRowIcon","deleteGrey","tablesContainer","tableWrapper","tableHeader","tableContent","scrollContent","renderDirectives","directivesToRender","length","row","id","checked","e","stopPropagation","policyName","renderInstructions","instructionsToRender","Policy","_ErrorPostPoliciesMut","_ErrorPostPoliciesMut2","_ErrorPostPoliciesMut3","_ErrorPostPoliciesMut4","_ErrorPostPoliciesMut5","_ErrorUpdatePoliciesM","_ErrorUpdatePoliciesM2","_ErrorUpdatePoliciesM3","_ErrorUpdatePoliciesM4","_ErrorUpdatePoliciesM5","_ErrorPostPoliciesDir","_ErrorPostPoliciesDir2","_ErrorPostPoliciesDir3","_ErrorPostPoliciesDir4","_ErrorPostPoliciesDir5","_ErrorUpdateDirectori","_ErrorUpdateDirectori2","_ErrorUpdateDirectori3","_ErrorUpdateDirectori4","_ErrorUpdateDirectori5","_ErrorDeleteDirectori","_ErrorDeleteDirectori2","_ErrorDeleteDirectori3","_ErrorDeleteDirectori4","_ErrorDeleteDirectori5","policyId","useParams","useEffect","setSelectedPolicyId","selectRef","isOpenSearch","setIsOpenSearch","useState","selectedPolicyId","setPolicyName","setType","state","setState","disabledArchive","setDisabledArchive","reduxSelectedOrganizationId","useGetReduxOrganization","refName","refType","refStatus","open","setOpen","steps","title","description","target","disabled","filter","step","isLoadingGetPolicies","isErrorGetPolicies","isFetchingGetPolicies","instructionsActive","instructionsDraft","instructionsCompleted","directivesActive","directivesDraft","directivesCompleted","currentPolicy","isLoadingGetPoliciesId","isFetchingGetPoliciesId","isErrorGetPoliciesId","postPolicy","isLoadingPostPoliciesMutation","isSuccessPostPoliciesMutation","isErrorPostPoliciesMutation","ErrorPostPoliciesMutation","localIsResponsePostPoliciesMutation","updatePolicy","isLoadingUpdatePoliciesMutation","isSuccessUpdatePoliciesMutation","isErrorUpdatePoliciesMutation","ErrorUpdatePoliciesMutation","localIsResponseUpdatePoliciesMutation","usePolicyHook","organizationId","setCurrentDirectoryInstructions","setCurrentDirectoryDirectives","directoriesSendBD","currentDirectoryName","setCurrentDirectoryName","currentDirectoryInstructions","currentDirectoryDirectives","filterArraySearchModalDirectives","filterArraySearchModalInstructions","foldersSort","isLoadingGetPolicyDirectories","isErrorGetPolicyDirectories","isFetchingGetPolicyDirectories","openModalCreateDirectory","openCreateDirectory","exitCreateDirectory","saveFolder","isLoadingPostPoliciesDirectoriesMutation","isSuccessPostPoliciesDirectoriesMutation","isErrorPostPoliciesDirectoriesMutation","ErrorPostPoliciesDirectoriesMutation","localIsResponsePostPolicyDirectoriesMutation","openModalUpdateDirectory","updateDirectory","exitUpdateDirectory","saveUpdateFolder","isLoadingUpdatePolicyDirectoriesMutation","isSuccessUpdatePolicyDirectoriesMutation","isErrorUpdatePolicyDirectoriesMutation","ErrorUpdateDirectories","localIsResponseUpdatePolicyDirectoriesMutation","openModalDeleteDirectory","saveDeleteFolder","isLoadingDeletePolicyDirectoriesMutation","isSuccessDeletePolicyDirectoriesMutation","isErrorDeletePolicyDirectoriesMutation","ErrorDeleteDirectories","localIsResponseDeletePolicyDirectoriesMutation","handleCheckboxChangeUpdate","currentDirectoryId","setCurrentDirectoryId","setOpenModalCreateDirectory","setOpenModalUpdateDirectory","setDirectoriesSendBD","directoriesUpdate","setDirectoriesUpdate","setInputSearchModalDirectory","setFilterArraySearchModalDirectives","setFilterArraySearchModalInstructions","folders","deletePolicyDirectories","updatePolicyDirectories","postDirectory","usePolicyDirectoriesHook","filteredDirectives","toLowerCase","includes","filteredInstructions","policyToPolicyDirectories","then","catch","JSON","stringify","element","obj","_currentDirectoryInst","_currentDirectoryDire","policyIds","policy","filterArray","filterArray1","foundItem","find","sort","a","b","localeCompare","update1","policyDirectoryId","prev","useDirectories","getPolicyId","content","handleClickOutside","event","contains","document","addEventListener","removeEventListener","dialog","Headers","funcActiveHint","result","Data","_id","itemName","color","div","five","textMontserrat14","sixth","subbarSearch","policySearch","policySearchItemNested","listUL","folder","listText","iconSublist","marginLeft","listULElementNested","policySearchItemNestedNested","listULNested","activeText","listULElementNestedTwo","textMontserrat","draftText","completedText","_item$policyToPolicyD","hasInstruction","hasDirective","policySearchItem","listULElement","instructionHeader","headerText","directiveHeader","React","addCircleBlue","Select","refSelect","array","arrayItem","disabledPole","ConfigProvider","locale","ruRU","Tour","onClose","main","HandlerQeury","Loading","Fetching","HandlerMutation","Success","textSuccess","textError","errors","message"],"sourceRoot":""}