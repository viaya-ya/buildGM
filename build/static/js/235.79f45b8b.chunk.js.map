{"version":3,"file":"static/js/235.79f45b8b.chunk.js","mappings":"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","sources":["UI/image/blackStatistic.svg","UI/image/greyPolicy.svg","UI/image/subbarSearch.svg","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","webpack://good_management/./src/UI/Custom/Lupa/Lupa.module.css?5dc2","UI/Custom/Lupa/Lupa.jsx","webpack://good_management/./src/UI/Custom/ModalWindow.module.css?7f9e","UI/Custom/ModalWindow.jsx","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx","webpack://good_management/./src/UI/Custom/modalSelectRadio/ModalSelectRadio.module.css?504c","UI/Custom/modalSelectRadio/ModalSelectRadio.jsx","webpack://good_management/./src/UI/app/PostPage/Post.module.css?0714","webpack://good_management/./src/UI/Custom/modalSelectedStatistic/ModalSelectedStatistic.module.css?5e6a","UI/Custom/modalSelectedStatistic/ModalSelectedStatistic.jsx","UI/app/PostPage/Post.jsx"],"sourcesContent":["var _desc, _defs, _rect, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgBlackStatistic(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 25,\n    height: 25,\n    viewBox: \"0 0 25 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\r\\n\\t\\t\\tCreated with Pixso.\\r\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip55_2797\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \" icon / stats\",\n    width: 25,\n    height: 25,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \" icon / stats\",\n    width: 25,\n    height: 25,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip55_2797)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M14.92 11.86L14.51 10.96L13.61 10.55C13.12 10.32 13.12 9.64 13.61 9.41L14.51 9L14.92 8.11C15.15 7.62 15.84 7.62 16.06 8.11L16.47 9.01L17.36 9.42C17.85 9.65 17.85 10.34 17.36 10.56L16.46 10.97L16.05 11.86C15.84 12.35 15.14 12.35 14.92 11.86ZM4.8 14.36L5.21 13.46L6.11 13.05C6.6 12.82 6.6 12.14 6.11 11.91L5.21 11.51L4.8 10.61C4.59 10.12 3.89 10.12 3.67 10.61L3.26 11.51L2.36 11.92C1.87 12.14 1.87 12.84 2.36 13.05L3.26 13.46L3.67 14.36C3.89 14.85 4.59 14.85 4.8 14.36ZM9.17 9.36L9.79 8.04L11.11 7.42C11.6 7.2 11.6 6.51 11.11 6.29L9.79 5.69L9.17 4.36C8.96 3.87 8.26 3.87 8.05 4.36L7.44 5.69L6.11 6.3C5.62 6.51 5.62 7.21 6.11 7.42L7.44 8.04L8.05 9.36C8.26 9.85 8.96 9.85 9.17 9.36ZM22.91 9.36C22.52 9.01 21.94 9.05 21.59 9.44L15.2 16.62L12 13.42C11.51 12.94 10.72 12.94 10.24 13.42L4.29 19.39C3.92 19.75 3.92 20.35 4.29 20.71C4.65 21.07 5.25 21.07 5.61 20.71L11.11 15.2L14.34 18.42C14.85 18.94 15.67 18.91 16.15 18.37L22.99 10.69C23.34 10.3 23.3 9.7 22.91 9.36Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBlackStatistic);\nexport default __webpack_public_path__ + \"static/media/blackStatistic.547f82d845921f581fe5abd65214d5de.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _rect, _rect2, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgGreyPolicy(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\r\\n\\t\\t\\tCreated with Pixso.\\r\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip77_1070\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar /attach policy\",\n    width: 24,\n    height: 24,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / attach policy\",\n    width: 24,\n    height: 24,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar /attach policy\",\n    width: 24,\n    height: 24,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip77_1070)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M4.33 1.33L19.66 1.33C20.21 1.33 20.66 1.78 20.66 2.33L20.66 21C20.66 21.55 20.21 22 19.66 22L4.33 22C3.78 22 3.33 21.55 3.33 21L3.33 2.33C3.33 1.78 3.78 1.33 4.33 1.33Z\",\n    fill: \"#FFFFFF\",\n    fillOpacity: 1,\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M4.33 1.33L19.66 1.33C20.21 1.33 20.66 1.78 20.66 2.33L20.66 21C20.66 21.55 20.21 22 19.66 22L4.33 22C3.78 22 3.33 21.55 3.33 21L3.33 2.33C3.33 1.78 3.78 1.33 4.33 1.33ZM4.33 2.33L19.66 2.33L19.66 21L4.33 21L4.33 2.33Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 24\",\n    d: \"M8 7.33L16.66 7.33\",\n    stroke: \"#3A3A3A\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 25\",\n    d: \"M7.33 10L16.66 10\",\n    stroke: \"#3A3A3A\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 26\",\n    d: \"M7.33 12.66L16.66 12.66\",\n    stroke: \"#3A3A3A\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector 27\",\n    d: \"M7.33 15.33L16.66 15.33\",\n    stroke: \"#3A3A3A\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    strokeLinecap: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M17.78 15.03L22.05 19.3C22.44 19.7 22.67 20.22 22.7 20.76C22.72 21.29 22.52 21.8 22.16 22.16C21.8 22.52 21.29 22.72 20.76 22.7C20.22 22.67 19.7 22.44 19.3 22.05L14.66 17.4C14.42 17.16 14.27 16.83 14.26 16.5C14.24 16.16 14.36 15.85 14.59 15.62C14.82 15.39 15.13 15.27 15.47 15.28C15.8 15.3 16.13 15.44 16.38 15.69L20.28 19.59C20.37 19.69 20.43 19.82 20.44 19.95C20.44 20.09 20.4 20.21 20.3 20.3C20.21 20.39 20.09 20.44 19.95 20.44C19.82 20.43 19.69 20.37 19.59 20.28L16.06 16.75L15.55 17.26L19.08 20.79C19.32 21.04 19.65 21.18 19.98 21.2C20.32 21.21 20.63 21.09 20.86 20.86C21.09 20.63 21.21 20.32 21.2 19.98C21.18 19.65 21.04 19.32 20.79 19.08L16.89 15.18C16.5 14.78 15.97 14.55 15.44 14.53C14.9 14.51 14.4 14.7 14.03 15.06C13.67 15.43 13.48 15.93 13.5 16.47C13.52 17 13.75 17.52 14.15 17.92L18.79 22.56C19.33 23.1 20.05 23.42 20.79 23.45C21.52 23.48 22.22 23.22 22.72 22.72C23.22 22.22 23.48 21.52 23.45 20.79C23.42 20.05 23.1 19.33 22.56 18.79L18.29 14.52L17.78 15.03Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"evenodd\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M21.65 19.61L21.69 19.66C21.79 19.75 21.87 19.85 21.94 19.96C21.98 20.03 22.02 20.1 22.05 20.18C22.12 20.33 22.16 20.47 22.18 20.62C22.19 20.67 22.19 20.73 22.2 20.78C22.2 20.92 22.19 21.07 22.15 21.2C22.14 21.25 22.12 21.3 22.11 21.35C22.07 21.45 22.01 21.55 21.95 21.64C21.91 21.7 21.86 21.75 21.81 21.81C21.75 21.86 21.7 21.91 21.64 21.95C21.55 22.01 21.45 22.07 21.35 22.11C21.3 22.12 21.25 22.14 21.2 22.15C21.07 22.19 20.92 22.2 20.78 22.2C20.73 22.19 20.67 22.19 20.62 22.18C20.47 22.16 20.33 22.12 20.18 22.05C20.1 22.02 20.03 21.98 19.96 21.94C19.85 21.87 19.75 21.79 19.66 21.69L19.61 21.65C19.65 21.65 19.68 21.66 19.72 21.67C19.8 21.68 19.88 21.69 19.96 21.7C20.11 21.7 20.26 21.69 20.4 21.66C20.48 21.64 20.56 21.62 20.64 21.59C20.76 21.54 20.87 21.48 20.98 21.41C21.06 21.35 21.14 21.29 21.21 21.21C21.29 21.14 21.35 21.06 21.41 20.98C21.48 20.87 21.54 20.76 21.59 20.64C21.62 20.56 21.64 20.48 21.66 20.4C21.69 20.26 21.7 20.11 21.69 19.96C21.69 19.88 21.68 19.8 21.67 19.72C21.66 19.68 21.65 19.64 21.65 19.61ZM17.26 14.84L17.24 14.82C17.11 14.69 16.96 14.57 16.8 14.46C16.68 14.38 16.55 14.31 16.42 14.26C16.22 14.16 16.01 14.1 15.8 14.06C15.69 14.04 15.57 14.03 15.46 14.03C15.24 14.02 15.03 14.04 14.83 14.08C14.71 14.11 14.6 14.14 14.49 14.18C14.32 14.25 14.16 14.33 14.01 14.43C13.89 14.51 13.78 14.6 13.68 14.71C13.58 14.81 13.48 14.92 13.4 15.04C13.3 15.19 13.22 15.35 13.15 15.52C13.11 15.63 13.08 15.74 13.05 15.86C13.01 16.06 12.99 16.27 13 16.49C13 16.6 13.02 16.71 13.03 16.83C13.07 17.04 13.14 17.25 13.23 17.45C13.29 17.58 13.36 17.71 13.43 17.83C13.54 17.99 13.66 18.14 13.79 18.27L18.44 22.91C18.62 23.09 18.81 23.25 19.02 23.39C19.17 23.49 19.34 23.58 19.51 23.66C19.78 23.78 20.05 23.86 20.33 23.91C20.48 23.93 20.62 23.95 20.77 23.95C21.05 23.96 21.33 23.94 21.6 23.88C21.74 23.85 21.88 23.8 22.02 23.75C22.24 23.67 22.45 23.56 22.65 23.43C22.8 23.32 22.94 23.2 23.07 23.07C23.2 22.94 23.32 22.8 23.43 22.65C23.56 22.45 23.67 22.24 23.75 22.02C23.8 21.88 23.85 21.74 23.88 21.6C23.94 21.33 23.96 21.05 23.95 20.77C23.95 20.62 23.93 20.48 23.91 20.33C23.86 20.05 23.78 19.78 23.66 19.51C23.58 19.34 23.49 19.17 23.39 19.02C23.25 18.81 23.09 18.62 22.91 18.44L18.29 13.81L17.26 14.84ZM15.03 17.07L16.04 16.06L16.02 16.04C15.97 15.99 15.92 15.95 15.86 15.91C15.82 15.89 15.79 15.87 15.75 15.86C15.67 15.82 15.59 15.8 15.51 15.79C15.49 15.79 15.47 15.79 15.45 15.78C15.32 15.78 15.21 15.8 15.11 15.85C15.05 15.88 15 15.92 14.94 15.97C14.89 16.02 14.85 16.08 14.82 16.14C14.77 16.24 14.75 16.35 14.76 16.48C14.76 16.5 14.76 16.52 14.76 16.54C14.77 16.62 14.79 16.7 14.83 16.78C14.84 16.82 14.86 16.85 14.89 16.89C14.92 16.95 14.97 17 15.02 17.05L15.03 17.07ZM18.13 15.39L22.05 19.3C22.44 19.7 22.67 20.22 22.7 20.76C22.72 21.29 22.52 21.8 22.16 22.16C21.8 22.52 21.29 22.72 20.76 22.7C20.22 22.67 19.7 22.44 19.3 22.05L14.66 17.4C14.42 17.16 14.27 16.83 14.26 16.5C14.24 16.16 14.36 15.85 14.59 15.62C14.82 15.39 15.13 15.27 15.47 15.28C15.8 15.3 16.13 15.44 16.38 15.69L20.28 19.59C20.37 19.69 20.43 19.82 20.44 19.95C20.44 20.09 20.4 20.21 20.3 20.3C20.21 20.39 20.09 20.44 19.95 20.44C19.82 20.43 19.69 20.37 19.59 20.28L16.06 16.75L15.55 17.26L19.08 20.79C19.32 21.04 19.65 21.18 19.98 21.2C20.32 21.21 20.63 21.09 20.86 20.86C21.09 20.63 21.21 20.32 21.2 19.98C21.18 19.65 21.04 19.32 20.79 19.08L16.89 15.18C16.5 14.78 15.97 14.55 15.44 14.53C14.9 14.51 14.4 14.7 14.03 15.06C13.67 15.43 13.48 15.93 13.5 16.47C13.52 17 13.75 17.52 14.15 17.92L18.79 22.56C19.33 23.1 20.05 23.42 20.79 23.45C21.52 23.48 22.22 23.22 22.72 22.72C23.22 22.22 23.48 21.52 23.45 20.79C23.42 20.05 23.1 19.33 22.56 18.79L18.29 14.52L17.78 15.03L18.13 15.39Z\",\n    fill: \"#FFFFFF\",\n    fillOpacity: 1,\n    fillRule: \"evenodd\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgGreyPolicy);\nexport default __webpack_public_path__ + \"static/media/greyPolicy.bc1812d1102c440d49eba0ebc0776092.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _rect, _g;\nconst _excluded = [\"title\", \"titleId\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport * as React from \"react\";\nfunction SvgSubbarSearch(_ref, svgRef) {\n  let {\n      title,\n      titleId\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\r\\n\\t\\t\\tCreated with Pixso.\\r\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip8_4774\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip8_4774)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M10.33 9.33L9.8 9.33L9.61 9.15C10.41 8.21 10.83 6.94 10.6 5.59C10.29 3.73 8.74 2.26 6.87 2.03C4.05 1.68 1.68 4.05 2.03 6.87C2.25 8.74 3.73 10.29 5.59 10.6C6.94 10.83 8.21 10.41 9.15 9.61L9.33 9.8L9.33 10.33L12.16 13.16C12.43 13.43 12.88 13.43 13.15 13.16C13.43 12.89 13.43 12.44 13.15 12.17L10.33 9.33ZM6.33 9.33C4.67 9.33 3.33 7.99 3.33 6.33C3.33 4.67 4.67 3.33 6.33 3.33C7.99 3.33 9.33 4.67 9.33 6.33C9.33 7.99 7.99 9.33 6.33 9.33Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubbarSearch);\nexport default __webpack_public_path__ + \"static/media/subbarSearch.df8e3ae4a1f8534780d8d7a0a7a27549.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__6e9Ca\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__YWbBU\"};","import React from \"react\";\r\nimport classes from \"./ButtonAction.module.css\";\r\nimport iconAdd from \"../../../../image/iconAdd.svg\";\r\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\r\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\r\nexport default function ButtonAction({ create, update, refUpdate, refCreate }) {\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      {create && (\r\n        <ButtonImage\r\n          refAction={refCreate}\r\n          name={\"создать\"}\r\n          icon={iconAdd}\r\n          onClick={create}\r\n        ></ButtonImage>\r\n      )}\r\n\r\n      {update && (\r\n        <ButtonImage\r\n          refAction={refUpdate}\r\n          name={\"обновить\"}\r\n          icon={Blacksavetmp}\r\n          onClick={update}\r\n        ></ButtonImage>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport classes from \"./BottomHeaders.module.css\"\r\nimport ButtonAction from './ButtonAction/ButtonAction'\r\n\r\nexport default function BottomHeaders({children, create, update,  refUpdate, refCreate}) {\r\n  return (\r\n    <div className={classes.editText}>\r\n        {children}\r\n        <ButtonAction create={create} update={update} refUpdate={refUpdate} refCreate={refCreate}></ButtonAction>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"Lupa_ul__sGB5h\",\"li\":\"Lupa_li__U20di\",\"activeText\":\"Lupa_activeText__HbVV8\",\"completedText\":\"Lupa_completedText__vmrPv\"};","import React, { useRef, useEffect } from \"react\";\r\nimport classes from \"./Lupa.module.css\";\r\nimport subbarSearch from \"../../image/subbarSearch.svg\";\r\n\r\nexport default function Lupa({\r\n  setIsOpenSearch,\r\n  isOpenSearch,\r\n  select,\r\n\r\n  projects,\r\n  archivesProjects,\r\n  projectsWithProgram,\r\n  archivesProjectsWithProgram,\r\n\r\n  programs,\r\n  archivesPrograms,\r\n\r\n  array,\r\n  arrayItem,\r\n  positionBottomStyle,\r\n\r\n  refLupa,\r\n}) {\r\n  const selectRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\r\n        setIsOpenSearch(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [setIsOpenSearch, refLupa]);\r\n\r\n  return (\r\n    <div ref={selectRef}>\r\n      <img\r\n        ref={refLupa}\r\n        src={subbarSearch}\r\n        alt=\"subbarSearch\"\r\n        onClick={() => {\r\n          setIsOpenSearch(true);\r\n        }}\r\n      />\r\n      {isOpenSearch && (\r\n        <ul\r\n          className={classes.ul}\r\n          style={{\r\n            bottom: positionBottomStyle,\r\n          }}\r\n        >\r\n          {projects?.length !== 0 && projects && (\r\n            <li value=\"Активные\" disabled className={classes.activeText}>\r\n              Активные\r\n            </li>\r\n          )}\r\n\r\n          {projects?.map((item) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                value={item.id}\r\n                onClick={() => {\r\n                  select(item.id);\r\n                  setIsOpenSearch(false);\r\n                }}\r\n                className={classes.li}\r\n              >\r\n                {item.projectName}\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          {archivesProjects?.length !== 0 && archivesProjects && (\r\n            <li value=\"Завершенные\" disabled className={classes.completedText}>\r\n              Завершенные\r\n            </li>\r\n          )}\r\n\r\n          {archivesProjects?.map((item) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                value={item.id}\r\n                className={classes.li}\r\n                onClick={() => {\r\n                  select(item.id);\r\n                  setIsOpenSearch(false);\r\n                }}\r\n              >\r\n                {item.projectName}\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          {projectsWithProgram?.length !== 0 && projectsWithProgram && (\r\n            <li\r\n              value=\"Проекты с программами\"\r\n              disabled\r\n              className={classes.activeText}\r\n            >\r\n              Проекты с программами\r\n            </li>\r\n          )}\r\n\r\n          {projectsWithProgram?.map((item) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                value={item.id}\r\n                onClick={() => {\r\n                  select(item.id);\r\n                  setIsOpenSearch(false);\r\n                }}\r\n                className={classes.li}\r\n              >\r\n                {item.projectName}\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          {archivesProjectsWithProgram?.length !== 0 &&\r\n            archivesProjectsWithProgram && (\r\n              <li\r\n                value=\"Архивные проекты с программами\"\r\n                disabled\r\n                className={classes.completedText}\r\n              >\r\n                Архивные проекты с программами\r\n              </li>\r\n            )}\r\n\r\n          {archivesProjectsWithProgram?.map((item) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                value={item.id}\r\n                onClick={() => {\r\n                  select(item.id);\r\n                  setIsOpenSearch(false);\r\n                }}\r\n                className={classes.li}\r\n              >\r\n                {item.projectName}\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          {programs?.length !== 0 && programs && (\r\n            <li value=\"Активные\" disabled className={classes.activeText}>\r\n              Активные\r\n            </li>\r\n          )}\r\n\r\n          {programs?.map((item) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                value={item.id}\r\n                onClick={() => {\r\n                  select(item.id);\r\n                  setIsOpenSearch(false);\r\n                }}\r\n                className={classes.li}\r\n              >\r\n                {item.projectName}\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          {archivesPrograms?.length !== 0 && archivesPrograms && (\r\n            <li value=\"Завершенные\" disabled className={classes.completedText}>\r\n              Завершенные\r\n            </li>\r\n          )}\r\n\r\n          {archivesPrograms?.map((item) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                value={item.id}\r\n                onClick={() => {\r\n                  select(item.id);\r\n                  setIsOpenSearch(false);\r\n                }}\r\n                className={classes.li}\r\n              >\r\n                {item.projectName}\r\n              </li>\r\n            );\r\n          })}\r\n\r\n          {array?.map((item) => {\r\n            return (\r\n              <li\r\n                key={item.id}\r\n                value={item.id}\r\n                onClick={() => {\r\n                  select(item.id);\r\n                  setIsOpenSearch(false);\r\n                }}\r\n                className={classes.li}\r\n              >\r\n                {item[arrayItem]}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modalDelete\":\"ModalWindow_modalDelete__6F2XA\",\"modalDeleteElement\":\"ModalWindow_modalDeleteElement__BWKSd\",\"modalRow1\":\"ModalWindow_modalRow1__lAjGg\",\"modalRow2\":\"ModalWindow_modalRow2__s2-a6\",\"btnYes\":\"ModalWindow_btnYes__ScZrA\",\"btnNo\":\"ModalWindow_btnNo__q5w-4\",\"textBtnYes\":\"ModalWindow_textBtnYes__nsbep\",\"textBtnNo\":\"ModalWindow_textBtnNo__3q10K\",\"text\":\"ModalWindow_text__LCc-R\",\"exitImage\":\"ModalWindow_exitImage__OFdfY\"};","import React from \"react\";\r\nimport classes from \"./ModalWindow.module.css\";\r\nimport exit from \"../image/exitModal.svg\";\r\n\r\nexport default function ModalWindow({ text, close, btnYes, btnNo, exitBtn }) {\r\n  return (\r\n    <div className={classes.modalDelete}>\r\n      <div className={classes.modalDeleteElement}>\r\n        <img\r\n          src={exit}\r\n          alt=\"exit\"\r\n          className={classes.exitImage}\r\n          onClick={() => close(false)}\r\n        />\r\n        <div className={classes.modalRow1}>\r\n          <span className={classes.text}>{text}</span>\r\n        </div>\r\n        {!exitBtn && (\r\n          <div className={classes.modalRow2}>\r\n            <button\r\n              className={`${classes.btnYes} ${classes.textBtnYes}`}\r\n              onClick={btnYes}\r\n            >\r\n              Да\r\n            </button>\r\n            <button\r\n              className={`${classes.btnNo} ${classes.textBtnNo}`}\r\n              onClick={btnNo}\r\n            >\r\n              Нет\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__DfO0r\"};","import React from \"react\";\r\nimport classes from \"./WaveLetters.module.css\";\r\nexport default function WaveLetters({ letters }) {\r\n  const arrayLetters = letters.split(\"\");\r\n  return (\r\n    <div className={classes.wave}>\r\n      {arrayLetters?.map((item, index) => (\r\n        <span key={index} style={{ \"--i\": index + 1 }}>\r\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalSelectRadio_modal__nPGHn\",\"modalWindow\":\"ModalSelectRadio_modalWindow__dncJU\",\"header\":\"ModalSelectRadio_header__DW8xM\",\"item1\":\"ModalSelectRadio_item1__QmdXG\",\"item2\":\"ModalSelectRadio_item2__Hm1w9\",\"search\":\"ModalSelectRadio_search__uW77Q\",\"exit\":\"ModalSelectRadio_exit__BO5fc\",\"table\":\"ModalSelectRadio_table__nysW+\",\"row\":\"ModalSelectRadio_row__F5ykw\"};","import React from \"react\";\r\nimport classes from \"./ModalSelectRadio.module.css\";\r\nimport exitModal from \"@image/exitModal.svg\";\r\nimport Blacksavetmp from \"@image/Blacksavetmp.svg\";\r\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\r\n\r\nexport function ModalSelectRadio({\r\n  nameTable,\r\n  handleSearchValue,\r\n  handleSearchOnChange,\r\n  exit,\r\n  filterArray,\r\n  array,\r\n  arrayItem,\r\n  selectedItemID,\r\n  handleRadioChange,\r\n  save,\r\n}) {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.modalWindow}>\r\n        <img\r\n          src={exitModal}\r\n          alt=\"exitModal\"\r\n          onClick={() => exit()}\r\n          className={classes.exit}\r\n        />\r\n\r\n        <div className={classes.header}>\r\n          <div className={classes.item1}>\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"Найти\"\r\n              value={handleSearchValue}\r\n              onChange={handleSearchOnChange}\r\n              className={classes.search}\r\n            />\r\n          </div>\r\n\r\n          {save && (\r\n            <div className={classes.item2}>\r\n              <ButtonImage\r\n                name={\"сохранить\"}\r\n                icon={Blacksavetmp}\r\n                onClick={save}\r\n              ></ButtonImage>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <table className={classes.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>{nameTable}</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {filterArray.length > 0 ? (\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  {filterArray?.map((item) => (\r\n                    <div\r\n                      key={item.id}\r\n                      className={classes.row}\r\n                      onClick={() => handleRadioChange(item.id, item)}\r\n                    >\r\n                      <input\r\n                        type=\"radio\"\r\n                        checked={selectedItemID === item.id}\r\n                      />\r\n                      {item[arrayItem]}\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  {array?.map((item) => (\r\n                    <div\r\n                      key={item.id}\r\n                      className={classes.row}\r\n                      onClick={() => handleRadioChange(item.id, item)}\r\n                    >\r\n                      <input\r\n                        type=\"radio\"\r\n                        checked={selectedItemID === item.id}\r\n                      />\r\n                      {item[arrayItem]}\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Post_dialog__K3gIg\",\"header\":\"Post_header__+16Tw\",\"fon\":\"Post_fon__QqMrQ\",\"pomoshnikSearch\":\"Post_pomoshnikSearch__eoyV4\",\"pomoshnik\":\"Post_pomoshnik__Ue8im\",\"iconBack\":\"Post_iconBack__Gscv5\",\"search\":\"Post_search__YPZ5x\",\"spanPomoshnik\":\"Post_spanPomoshnik__o0eri\",\"editText\":\"Post_editText__0riFk\",\"item\":\"Post_item__6ulyp\",\"itemName\":\"Post_itemName__lE1kH\",\"select\":\"Post_select__LtS0J\",\"div\":\"Post_div__ZUd24\",\"actionButton\":\"Post_actionButton__x-SEc\",\"iconAdd\":\"Post_iconAdd__-hENp\",\"iconSave\":\"Post_iconSave__K5dVh\",\"image\":\"Post_image__Iwz6-\",\"main\":\"Post_main__z7ChF\",\"productTeaxtaera\":\"Post_productTeaxtaera__pAU9j\",\"destinyTeaxtaera\":\"Post_destinyTeaxtaera__8GuWY\",\"Teaxtaera\":\"Post_Teaxtaera__1QKvH\",\"post\":\"Post_post__fVXgQ\",\"postNested\":\"Post_postNested__V7ieH\",\"nameButton\":\"Post_nameButton__37eyF\",\"sixth\":\"Post_sixth__OmGy0\",\"policySearch\":\"Post_policySearch__4x4Dq\",\"policySearchItem\":\"Post_policySearchItem__B45No\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalSelectedStatistic_modal__-Fj7r\",\"modalWindow\":\"ModalSelectedStatistic_modalWindow__xClTb\",\"exit\":\"ModalSelectedStatistic_exit__oflNR\",\"header\":\"ModalSelectedStatistic_header__YmeSl\",\"item1\":\"ModalSelectedStatistic_item1__v4rbX\",\"item2\":\"ModalSelectedStatistic_item2__07FFk\",\"search\":\"ModalSelectedStatistic_search__aiCFG\",\"table\":\"ModalSelectedStatistic_table__WhVRx\",\"row\":\"ModalSelectedStatistic_row__Um8vq\"};","import React from \"react\";\r\nimport classes from \"./ModalSelectedStatistic.module.css\";\r\nimport Blacksavetmp from \"@image/Blacksavetmp.svg\";\r\nimport iconAdd from \"@image/iconAdd.svg\";\r\nimport exitModal from \"@image/exitModal.svg\";\r\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\r\n\r\nexport function ModalSelectedStatistic({\r\n  value,\r\n  onChange,\r\n  createNewStatistic,\r\n  setOpenModalStatisticSave,\r\n  filterArraySearchModalStatistics,\r\n  handleChecboxChangeStatistics,\r\n  statisticsChecked,\r\n  disabledStatisticsChecked,\r\n  statistics,\r\n  openStatisticWarning,\r\n}) {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.modalWindow}>\r\n        <img\r\n          src={exitModal}\r\n          alt=\"exitStatistic\"\r\n          onClick={openStatisticWarning}\r\n          className={classes.exit}\r\n        />\r\n        <div className={classes.header}>\r\n          <div className={classes.item1}>\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"Найти\"\r\n              value={value}\r\n              onChange={onChange}\r\n              className={classes.search}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.item2}>\r\n            <ButtonImage\r\n              name={\"создать\"}\r\n              icon={iconAdd}\r\n              onClick={createNewStatistic}\r\n            ></ButtonImage>\r\n\r\n            <ButtonImage\r\n              name={\"сохранить\"}\r\n              icon={Blacksavetmp}\r\n              onClick={() => {\r\n                setOpenModalStatisticSave(true);\r\n              }}\r\n            ></ButtonImage>\r\n          </div>\r\n        </div>\r\n\r\n        <table className={classes.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>Название статистики</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          {filterArraySearchModalStatistics.length > 0 ? (\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  {filterArraySearchModalStatistics?.map((item) => (\r\n                    <div\r\n                      key={item.id}\r\n                      className={classes.row}\r\n                      onClick={() =>\r\n                        handleChecboxChangeStatistics(item.id, item)\r\n                      }\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={statisticsChecked.includes(item.id)}\r\n                        disabled={disabledStatisticsChecked.includes(item.id)}\r\n                      />\r\n                         {item.name}\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          ) : (\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  {statistics?.map((item) => (\r\n                    <div\r\n                      key={item.id}\r\n                      className={classes.row}\r\n                      onClick={() =>\r\n                        handleChecboxChangeStatistics(item.id, item)\r\n                      }\r\n                    >\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={statisticsChecked.includes(item.id)}\r\n                        disabled={disabledStatisticsChecked.includes(item.id)}\r\n                      />\r\n                      {item.name}\r\n                    </div>\r\n                  ))}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          )}\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport greyPolicy from \"@image/greyPolicy.svg\";\r\nimport blackStatistic from \"@image/blackStatistic.svg\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\r\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\r\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ModalWindow from \"@Custom/ModalWindow.jsx\";\r\nimport Headers from \"@Custom/Headers/Headers\";\r\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\r\nimport Select from \"@Custom/Select/Select\";\r\nimport Input from \"@Custom/Input/Input\";\r\nimport Lupa from \"@Custom/Lupa/Lupa\";\r\nimport { useModalSelectRadio } from \"@hooks/useModalSelectRadio\";\r\nimport { ModalSelectRadio } from \"@Custom/modalSelectRadio/ModalSelectRadio\";\r\nimport { useModalCheckBoxStatistic } from \"@hooks/useModalCheckBoxStatistic\";\r\nimport { ModalSelectedStatistic } from \"@Custom/modalSelectedStatistic/ModalSelectedStatistic\";\r\nimport { usePostsHook } from \"@hooks\";\r\nimport { useStatisticsHook } from \"../../../hooks/useStatisticsHook\";\r\nimport RoleContainer from \"./RoleContainer\";\r\n\r\nimport { ConfigProvider, Tour } from \"antd\";\r\nimport ruRU from \"antd/locale/ru_RU\";\r\n\r\nexport default function Post() {\r\n  const navigate = useNavigate();\r\n  const { postId } = useParams();\r\n  const newPost = () => {\r\n    navigate(`/pomoshnik/postNew`);\r\n  };\r\n\r\n  const [isOpenSearch, setIsOpenSearch] = useState(false);\r\n\r\n  const [selectedPostId, setSelectedPostId] = useState(null);\r\n\r\n  const createdId = useSelector((state) => state.post.postCreatedId);\r\n\r\n  const [postName, setPostName] = useState(null);\r\n  const [divisionName, setDivisionName] = useState(null);\r\n  const [disabledDivisionName, setDisabledDivisionName] = useState(false);\r\n  const [parentPostId, setParentPostId] = useState(\"\");\r\n  const [worker, setWorker] = useState(null);\r\n  const [userRole, setUserRole] = useState();\r\n\r\n  const [product, setProduct] = useState(null);\r\n  const [isProductChanges, setIsProductChanges] = useState(false);\r\n\r\n  const [purpose, setPurpose] = useState(null);\r\n  const [isPurposeChanges, setIsPurposeChanges] = useState(false);\r\n\r\n  const [selectParentPost, setSelectParentPost] = useState();\r\n\r\n  const [openModalPolicy, setOpenModalPolicy] = useState(false);\r\n\r\n  //Статистика\r\n  const [statisticsChecked, setStatisticsChecked] = useState([]);\r\n  const [disabledStatisticsChecked, setDisabledStatisticsChecked] = useState(\r\n    []\r\n  );\r\n  const [openModalStatistic, setOpenModalStatistic] = useState(false);\r\n  const [openModalStatisticWarning, setOpenModalStatisticWarning] =\r\n    useState(false);\r\n  const [openModalStatisticSave, setOpenModalStatisticSave] = useState(false);\r\n\r\n  const refPostName = useRef(null);\r\n  const refLupa = useRef(null);\r\n  const refDivisionName = useRef(null);\r\n  const refParentPostId = useRef(null);\r\n  const refWorker = useRef(null);\r\n  const refCreate = useRef(null);\r\n  const refUpdate = useRef(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const steps = [\r\n    {\r\n      title: \"Название поста\",\r\n      description: \"Здесь можно поменять название выбранного поста\",\r\n      target: () => refPostName.current, // Добавляем проверку\r\n    },\r\n    {\r\n      title: \"Выбрать пост\",\r\n      description: \"Нажмите и выберите пост\",\r\n      target: () => refLupa.current, // Добавляем проверку\r\n    },\r\n    {\r\n      title: \"Название подразделения\",\r\n      description: \"Здесь можно поменять название подразделения\",\r\n      target: () => (selectedPostId ? refDivisionName.current : null), // Добавляем проверку\r\n      disabled: !selectedPostId,\r\n    },\r\n    {\r\n      title: \"Руководитель\",\r\n      description: \"Нажмите и поменяйте руководителя\",\r\n      target: () => (selectedPostId ? refParentPostId.current : null), // Добавляем проверку\r\n      disabled: !selectedPostId,\r\n    },\r\n    {\r\n      title: \"Сотрудники\",\r\n      description: \"Нажмите и поменяйте сотрудника\",\r\n      target: () => (selectedPostId ? refWorker.current : null), // Добавляем проверку\r\n      disabled: !selectedPostId,\r\n    },\r\n\r\n    {\r\n      title: \"Создать\",\r\n      description: \"Нажмите для создания поста\",\r\n      target: () => refCreate.current,\r\n    },\r\n    {\r\n      title: \"Сохранить\",\r\n      description: \"Нажмите для сохранения\",\r\n      target: () => refUpdate.current,\r\n    },\r\n  ].filter((step) => !step.disabled);\r\n\r\n  const {\r\n    allPosts,\r\n    isLoadingGetPosts,\r\n    isErrorGetPosts,\r\n\r\n    currentPost,\r\n    workers,\r\n    posts,\r\n    parentPost,\r\n    policiesActive,\r\n    statisticsIncludedPost,\r\n    isLoadingGetPostId,\r\n    isErrorGetPostId,\r\n    isFetchingGetPostId,\r\n    selectedPolicyIDInPost,\r\n    selectedPolicyNameInPost,\r\n    refetchPostIdQuery,\r\n\r\n    roles,\r\n\r\n    updatePost,\r\n    isLoadingUpdatePostMutation,\r\n    isSuccessUpdatePostMutation,\r\n    isErrorUpdatePostMutation,\r\n    ErrorUpdatePostMutation,\r\n    localIsResponseUpdatePostMutation,\r\n  } = usePostsHook({ postId: selectedPostId });\r\n\r\n  const {\r\n    postStatistics,\r\n    isLoadingPostStatisticMutation,\r\n    isSuccessPostStatisticMutation,\r\n    isErrorPostStatisticMutation,\r\n    ErrorPostStatisticMutation,\r\n    localIsResponsePostStatisticsMutation,\r\n\r\n    updateStatisticsToPostId,\r\n    isLoadingStatisticsToPostIdMutation,\r\n    isSuccessUpdateStatisticsToPostIdMutation,\r\n    isErrorUpdateStatisticsToPostIdMutation,\r\n    ErrorUpdateStatisticsToPostIdMutation,\r\n    localIsResponseUpdateStatisticsToPostIdMutation,\r\n  } = useStatisticsHook();\r\n\r\n  const methodForLupa = (parametr) => {\r\n    setIsOpenSearch(parametr);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (createdId || postId) {\r\n      setSelectedPostId(createdId || postId);\r\n    }\r\n  }, []);\r\n  // Конец\r\n\r\n  useEffect(() => {\r\n    const obj =\r\n      parentPostId !== \"\"\r\n        ? posts?.find((item) => item.id === parentPostId)\r\n        : null;\r\n\r\n    setSelectParentPost(obj);\r\n\r\n    if (parentPostId && currentPost?.isHasChildPost === false) {\r\n      setDivisionName(obj?.divisionName || null);\r\n      setDisabledDivisionName(true);\r\n    } else {\r\n      setDivisionName(currentPost?.divisionName || null);\r\n      setDisabledDivisionName(false);\r\n    }\r\n  }, [parentPostId]);\r\n\r\n  useEffect(() => {\r\n    if (currentPost.postName) {\r\n      setPostName(currentPost.postName);\r\n    }\r\n\r\n    if (parentPost?.id && currentPost?.isHasChildPost === false) {\r\n      setDivisionName(parentPost?.divisionName);\r\n      setDisabledDivisionName(true);\r\n    } else {\r\n      setDivisionName(currentPost?.divisionName);\r\n      setDisabledDivisionName(false);\r\n    }\r\n\r\n    if (currentPost?.user?.id) {\r\n      setWorker(currentPost?.user?.id);\r\n    } else {\r\n      setWorker(null);\r\n    }\r\n\r\n    if (parentPost?.id) {\r\n      setParentPostId(parentPost?.id);\r\n    } else {\r\n      setParentPostId(\"\");\r\n    }\r\n\r\n    if (statisticsIncludedPost) {\r\n      const ids = statisticsIncludedPost.map((item) => item.id);\r\n      setStatisticsChecked(ids);\r\n      setDisabledStatisticsChecked(ids);\r\n    } else {\r\n      setStatisticsChecked([]);\r\n    }\r\n\r\n    if (selectedPolicyIDInPost !== null) {\r\n      setSelectedPolicyID(selectedPolicyIDInPost);\r\n      setSelectedPolicyName(selectedPolicyNameInPost);\r\n    }\r\n\r\n    setUserRole(currentPost.roleId);\r\n  }, [currentPost.id]);\r\n\r\n  const saveUpdatePost = async () => {\r\n    // Создаем объект с измененными полями\r\n    const updatedData = {};\r\n\r\n    // Проверки на изменения и отсутствие null\r\n    if (postName !== currentPost.postName && postName !== null) {\r\n      updatedData.postName = postName;\r\n    }\r\n    if (\r\n      divisionName !== currentPost.divisionName &&\r\n      divisionName !== selectParentPost?.divisionName &&\r\n      divisionName !== null\r\n    ) {\r\n      updatedData.divisionName = divisionName;\r\n    }\r\n    if (\r\n      isProductChanges ||\r\n      (product !== currentPost.product && product !== null)\r\n    ) {\r\n      updatedData.product = product;\r\n    }\r\n    if (\r\n      isPurposeChanges ||\r\n      (purpose !== currentPost.purpose && purpose !== null)\r\n    ) {\r\n      updatedData.purpose = purpose;\r\n    }\r\n    if (parentPostId !== parentPost?.id && parentPostId !== null) {\r\n      updatedData.parentId = parentPostId === \"\" ? null : parentPostId;\r\n    }\r\n\r\n    if (worker !== currentPost?.user?.id && worker !== null) {\r\n      updatedData.responsibleUserId = worker === null ? null : worker;\r\n    }\r\n\r\n    if (selectedPolicyID !== selectedPolicyIDInPost) {\r\n      updatedData.policyId =\r\n        selectedPolicyID === null ? null : selectedPolicyID;\r\n    }\r\n    console.log(JSON.stringify(updatedData));\r\n    // Проверяем, если есть данные для обновления\r\n    if (Object.keys(updatedData).length > 0) {\r\n      await updatePost({\r\n        _id: selectedPostId,\r\n        roleId: userRole,\r\n        ...updatedData, // отправляем только измененные поля\r\n      })\r\n        .unwrap()\r\n        .then(() => {})\r\n        .catch((error) => {\r\n          console.error(\"Ошибка:\", JSON.stringify(error, null, 2));\r\n        });\r\n    } else {\r\n      console.log(\"Нет изменений для обновления\");\r\n    }\r\n  };\r\n\r\n  const selectPost = (id) => {\r\n    setSelectedPostId(id);\r\n    setIsOpenSearch(false);\r\n  };\r\n\r\n  // Политика\r\n  const {\r\n    selectedID: selectedPolicyID,\r\n    setSelectedID: setSelectedPolicyID,\r\n\r\n    selectedName: selectedPolicyName,\r\n    setSelectedName: setSelectedPolicyName,\r\n\r\n    handleRadioChange,\r\n    handleInputChangeModalSearch,\r\n\r\n    filterArraySearchModal,\r\n    inputSearchModal,\r\n  } = useModalSelectRadio({ array: policiesActive, arrayItem: \"policyName\" });\r\n\r\n  useEffect(() => {\r\n    const ids = statisticsIncludedPost.map((item) => item.id);\r\n    setStatisticsChecked(ids);\r\n    setDisabledStatisticsChecked(ids);\r\n  }, [isFetchingGetPostId]);\r\n\r\n  // Статистика\r\n  const {\r\n    statistics,\r\n    isLoadingGetStatistics,\r\n    isFetchingGetStatistics,\r\n    isErrorGetStatistics,\r\n    inputSearchModalStatistics,\r\n    filterArraySearchModalStatistics,\r\n\r\n    handleChecboxChangeStatistics,\r\n    searchStatistics,\r\n    resetStatisticsId,\r\n  } = useModalCheckBoxStatistic({ openModalStatistic, setStatisticsChecked });\r\n\r\n  const saveStatisticsId = async () => {\r\n    const data = statisticsChecked.filter((item) => {\r\n      return !disabledStatisticsChecked\r\n        .map((disabled) => disabled)\r\n        .includes(item);\r\n    });\r\n    if (data.length > 0) {\r\n      await updateStatisticsToPostId({\r\n        postId: selectedPostId,\r\n        ids: data,\r\n      })\r\n        .unwrap()\r\n        .then(() => {\r\n          resetStatisticsId();\r\n          refetchPostIdQuery();\r\n          setOpenModalStatisticWarning(false);\r\n          setOpenModalStatisticSave(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Ошибка:\", JSON.stringify(error, null, 2));\r\n        });\r\n    }\r\n  };\r\n\r\n  const exitStatistic = () => {\r\n    setOpenModalStatistic(false);\r\n    resetStatisticsId();\r\n  };\r\n\r\n  // Модальное окно статистики пиредупреждение что данные нужно сохранить\r\n  const openStatisticWarning = () => {\r\n    const data = statisticsChecked.filter((item) => {\r\n      return !disabledStatisticsChecked\r\n        .map((disabled) => disabled)\r\n        .includes(item);\r\n    });\r\n\r\n    if (data.length > 0) {\r\n      setOpenModalStatisticWarning(true);\r\n    } else {\r\n      exitStatistic();\r\n    }\r\n  };\r\n\r\n  const btnYes = () => {\r\n    saveStatisticsId();\r\n  };\r\n\r\n  const btnNo = () => {\r\n    setOpenModalStatisticWarning(false);\r\n    exitStatistic();\r\n  };\r\n\r\n  const btnNoSave = () => {\r\n    setOpenModalStatisticSave(false);\r\n    exitStatistic();\r\n  };\r\n\r\n  // Переход к созданию статистики\r\n  const createNewStatistic = async () => {\r\n    await postStatistics({\r\n      name: \"Статистика\",\r\n      postId: selectedPostId,\r\n    })\r\n      .unwrap()\r\n      .then(() => {})\r\n      .catch((error) => {\r\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dialog}>\r\n      <Headers name={\"посты\"} funcActiveHint={() => setOpen(true)}>\r\n        <BottomHeaders\r\n          create={newPost}\r\n          update={saveUpdatePost}\r\n          refCreate={refCreate}\r\n          refUpdate={refUpdate}\r\n        >\r\n          <Input\r\n            refInput={refPostName}\r\n            name={\"Название поста\"}\r\n            value={postName}\r\n            onChange={setPostName}\r\n          >\r\n            <Lupa\r\n              refLupa={refLupa}\r\n              setIsOpenSearch={methodForLupa}\r\n              isOpenSearch={isOpenSearch}\r\n              select={selectPost}\r\n              array={allPosts}\r\n              arrayItem={\"postName\"}\r\n            ></Lupa>\r\n          </Input>\r\n\r\n          {currentPost.id && (\r\n            <>\r\n              <Input\r\n                refInput={refDivisionName}\r\n                name={\"Название подразделения\"}\r\n                value={divisionName}\r\n                onChange={setDivisionName}\r\n                disabledPole={disabledDivisionName}\r\n              ></Input>\r\n              <Select\r\n                refSelect={refParentPostId}\r\n                name={\"Руководитель\"}\r\n                value={parentPostId}\r\n                onChange={setParentPostId}\r\n                array={posts}\r\n                arrayItem={\"postName\"}\r\n              >\r\n                <option value=\"\"> — </option>\r\n              </Select>\r\n              <Select\r\n                refSelect={refWorker}\r\n                name={\"Сотрудник\"}\r\n                value={worker}\r\n                onChange={setWorker}\r\n                array={workers}\r\n                arrayItem={\"lastName\"}\r\n                arrayItemTwo={\"firstName\"}\r\n              ></Select>\r\n            </>\r\n          )}\r\n        </BottomHeaders>\r\n      </Headers>\r\n\r\n      <ConfigProvider locale={ruRU}>\r\n        <Tour open={open} onClose={() => setOpen(false)} steps={steps} />\r\n      </ConfigProvider>\r\n\r\n      <div className={classes.main}>\r\n        {isErrorGetPosts ? (\r\n          <>\r\n            <HandlerQeury Error={isErrorGetPosts}></HandlerQeury>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {isErrorGetPostId ? (\r\n              <HandlerQeury Error={isErrorGetPostId}></HandlerQeury>\r\n            ) : (\r\n              <>\r\n                <HandlerQeury Loading={isLoadingGetPosts}></HandlerQeury>\r\n\r\n                {isLoadingGetPostId || isFetchingGetPostId ? (\r\n                  <HandlerQeury\r\n                    Loading={isLoadingGetPostId}\r\n                    Fetching={isFetchingGetPostId}\r\n                  ></HandlerQeury>\r\n                ) : (\r\n                  <>\r\n                    {currentPost.id ? (\r\n                      <>\r\n                        <div className={classes.productTeaxtaera}>\r\n                          <textarea\r\n                            className={classes.Teaxtaera}\r\n                            placeholder=\"описание продукта поста\"\r\n                            value={\r\n                              isProductChanges\r\n                                ? product\r\n                                : product || currentPost.product\r\n                            }\r\n                            onChange={(e) => {\r\n                              setProduct(e.target.value);\r\n                              setIsProductChanges(true);\r\n                            }}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className={classes.destinyTeaxtaera}>\r\n                          <textarea\r\n                            className={classes.Teaxtaera}\r\n                            placeholder=\"описнаие предназначения поста\"\r\n                            value={\r\n                              isPurposeChanges\r\n                                ? purpose\r\n                                : purpose || currentPost.purpose\r\n                            }\r\n                            onChange={(e) => {\r\n                              setPurpose(e.target.value);\r\n                              setIsPurposeChanges(true);\r\n                            }}\r\n                          />\r\n                        </div>\r\n\r\n                        <div\r\n                          className={classes.post}\r\n                          onClick={() => setOpenModalPolicy(true)}\r\n                        >\r\n                          <img src={greyPolicy} alt=\"greyPolicy\" />\r\n                          <div className={classes.postNested}>\r\n                            {selectedPolicyName ? (\r\n                              <span className={classes.nameButton}>\r\n                                Политика: {selectedPolicyName}\r\n                              </span>\r\n                            ) : (\r\n                              <span className={classes.nameButton}>\r\n                                Прикрепить политику\r\n                              </span>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div\r\n                          className={classes.post}\r\n                          onClick={() => setOpenModalStatistic(true)}\r\n                        >\r\n                          <img src={blackStatistic} alt=\"blackStatistic\" />\r\n\r\n                          {statisticsIncludedPost.length > 0 ? (\r\n                            <div className={classes.postNested}>\r\n                              <span className={classes.nameButton}>\r\n                                Статистики:{\" \"}\r\n                                {statisticsIncludedPost.map((item, index) => (\r\n                                  <span key={item.id}>\r\n                                    {item.name}\r\n                                    {index < statisticsIncludedPost.length - 1\r\n                                      ? \", \"\r\n                                      : \"\"}\r\n                                  </span>\r\n                                ))}\r\n                              </span>\r\n                            </div>\r\n                          ) : (\r\n                            <div>\r\n                              <span className={classes.nameButton}>\r\n                                Выбрать или создать статистику для поста\r\n                              </span>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        <RoleContainer\r\n                          rolesArray={roles}\r\n                          role={userRole}\r\n                          setRole={setUserRole}\r\n                        ></RoleContainer>\r\n\r\n                        {openModalPolicy && (\r\n                          <ModalSelectRadio\r\n                            nameTable={\"Название политики\"}\r\n                            handleSearchValue={inputSearchModal}\r\n                            handleSearchOnChange={handleInputChangeModalSearch}\r\n                            handleRadioChange={handleRadioChange}\r\n                            exit={() => {\r\n                              setOpenModalPolicy(false);\r\n                            }}\r\n                            filterArray={filterArraySearchModal}\r\n                            array={policiesActive}\r\n                            arrayItem={\"policyName\"}\r\n                            selectedItemID={selectedPolicyID}\r\n                          ></ModalSelectRadio>\r\n                        )}\r\n\r\n                        {isErrorGetStatistics ? (\r\n                          <HandlerQeury\r\n                            Error={isErrorGetStatistics}\r\n                          ></HandlerQeury>\r\n                        ) : (\r\n                          <>\r\n                            <HandlerQeury\r\n                              Loading={isLoadingGetStatistics}\r\n                            ></HandlerQeury>\r\n                            {!isErrorGetStatistics && (\r\n                              <>\r\n                                {openModalStatistic && (\r\n                                  <ModalSelectedStatistic\r\n                                    value={inputSearchModalStatistics}\r\n                                    onChange={searchStatistics}\r\n                                    createNewStatistic={createNewStatistic}\r\n                                    setOpenModalStatisticSave={\r\n                                      setOpenModalStatisticSave\r\n                                    }\r\n                                    filterArraySearchModalStatistics={\r\n                                      filterArraySearchModalStatistics\r\n                                    }\r\n                                    handleChecboxChangeStatistics={\r\n                                      handleChecboxChangeStatistics\r\n                                    }\r\n                                    statisticsChecked={statisticsChecked}\r\n                                    disabledStatisticsChecked={\r\n                                      disabledStatisticsChecked\r\n                                    }\r\n                                    statistics={statistics}\r\n                                    openStatisticWarning={openStatisticWarning}\r\n                                  ></ModalSelectedStatistic>\r\n                                )}\r\n                              </>\r\n                            )}\r\n                          </>\r\n                        )}\r\n\r\n                        {openModalStatisticSave && (\r\n                          <ModalWindow\r\n                            text={\r\n                              \"При приклеплении статистики к этому посту она отвяжется у предыдущего.\"\r\n                            }\r\n                            close={setOpenModalStatisticSave}\r\n                            btnYes={btnYes}\r\n                            btnNo={btnNoSave}\r\n                          ></ModalWindow>\r\n                        )}\r\n\r\n                        {openModalStatisticWarning && (\r\n                          <ModalWindow\r\n                            text={\r\n                              \"У Вас имеются не сохранненые данные, нажмите на Да и даннные сохранятся.\"\r\n                            }\r\n                            close={setOpenModalStatisticWarning}\r\n                            btnYes={btnYes}\r\n                            btnNo={btnNo}\r\n                          ></ModalWindow>\r\n                        )}\r\n\r\n                        <HandlerMutation\r\n                          Loading={isLoadingUpdatePostMutation}\r\n                          Error={\r\n                            isErrorUpdatePostMutation &&\r\n                            localIsResponseUpdatePostMutation\r\n                          }\r\n                          Success={\r\n                            isSuccessUpdatePostMutation &&\r\n                            localIsResponseUpdatePostMutation\r\n                          }\r\n                          textSuccess={\"Пост обновлен\"}\r\n                          textError={\r\n                            ErrorUpdatePostMutation?.data?.errors?.[0]\r\n                              ?.errors?.[0]\r\n                              ? ErrorUpdatePostMutation.data.errors[0].errors[0]\r\n                              : ErrorUpdatePostMutation?.data?.message\r\n                          }\r\n                        ></HandlerMutation>\r\n\r\n                        <HandlerMutation\r\n                          Loading={isLoadingStatisticsToPostIdMutation}\r\n                          Error={\r\n                            isErrorUpdateStatisticsToPostIdMutation &&\r\n                            localIsResponseUpdateStatisticsToPostIdMutation\r\n                          }\r\n                          Success={\r\n                            isSuccessUpdateStatisticsToPostIdMutation &&\r\n                            localIsResponseUpdateStatisticsToPostIdMutation\r\n                          }\r\n                          textSuccess={\"Статистика для поста обновлена\"}\r\n                          textError={\r\n                            ErrorUpdateStatisticsToPostIdMutation?.data\r\n                              ?.errors?.[0]?.errors?.[0]\r\n                              ? ErrorUpdateStatisticsToPostIdMutation.data\r\n                                  .errors[0].errors[0]\r\n                              : ErrorUpdateStatisticsToPostIdMutation?.data\r\n                                  ?.message\r\n                          }\r\n                        ></HandlerMutation>\r\n\r\n                        <HandlerMutation\r\n                          Loading={isLoadingPostStatisticMutation}\r\n                          Error={\r\n                            isErrorPostStatisticMutation &&\r\n                            localIsResponsePostStatisticsMutation\r\n                          }\r\n                          Success={\r\n                            isSuccessPostStatisticMutation &&\r\n                            localIsResponsePostStatisticsMutation\r\n                          }\r\n                          textSuccess={\"Статистика для поста создана\"}\r\n                          textError={\r\n                            ErrorPostStatisticMutation?.data?.errors?.[0]\r\n                              ?.errors?.[0]\r\n                              ? ErrorPostStatisticMutation.data.errors[0]\r\n                                  .errors[0]\r\n                              : ErrorPostStatisticMutation?.data?.message\r\n                          }\r\n                        ></HandlerMutation>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <WaveLetters letters={\"Выберите пост\"}></WaveLetters>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ButtonAction","_ref","create","update","refUpdate","refCreate","_jsxs","className","classes","wrapper","children","_jsx","ButtonImage","refAction","name","icon","iconAdd","onClick","Blacksavetmp","BottomHeaders","editText","Lupa","setIsOpenSearch","isOpenSearch","select","projects","archivesProjects","projectsWithProgram","archivesProjectsWithProgram","programs","archivesPrograms","array","arrayItem","positionBottomStyle","refLupa","selectRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","src","subbarSearch","alt","ul","style","bottom","length","value","disabled","activeText","map","item","id","li","projectName","completedText","ModalWindow","text","close","btnYes","btnNo","exitBtn","modalDelete","modalDeleteElement","exit","exitImage","modalRow1","modalRow2","concat","textBtnYes","textBtnNo","WaveLetters","letters","arrayLetters","split","wave","index","ModalSelectRadio","nameTable","handleSearchValue","handleSearchOnChange","filterArray","selectedItemID","handleRadioChange","save","modal","modalWindow","exitModal","header","item1","type","placeholder","onChange","search","item2","table","row","checked","ModalSelectedStatistic","createNewStatistic","setOpenModalStatisticSave","filterArraySearchModalStatistics","handleChecboxChangeStatistics","statisticsChecked","disabledStatisticsChecked","statistics","openStatisticWarning","includes","Post","_ErrorUpdatePostMutat","_ErrorUpdatePostMutat2","_ErrorUpdatePostMutat3","_ErrorUpdatePostMutat4","_ErrorUpdatePostMutat5","_ErrorUpdateStatistic","_ErrorUpdateStatistic2","_ErrorUpdateStatistic3","_ErrorUpdateStatistic4","_ErrorUpdateStatistic5","_ErrorPostStatisticMu","_ErrorPostStatisticMu2","_ErrorPostStatisticMu3","_ErrorPostStatisticMu4","_ErrorPostStatisticMu5","navigate","useNavigate","postId","useParams","useState","selectedPostId","setSelectedPostId","createdId","useSelector","state","post","postCreatedId","postName","setPostName","divisionName","setDivisionName","disabledDivisionName","setDisabledDivisionName","parentPostId","setParentPostId","worker","setWorker","userRole","setUserRole","product","setProduct","isProductChanges","setIsProductChanges","purpose","setPurpose","isPurposeChanges","setIsPurposeChanges","selectParentPost","setSelectParentPost","openModalPolicy","setOpenModalPolicy","setStatisticsChecked","setDisabledStatisticsChecked","openModalStatistic","setOpenModalStatistic","openModalStatisticWarning","setOpenModalStatisticWarning","openModalStatisticSave","refPostName","refDivisionName","refParentPostId","refWorker","open","setOpen","steps","title","description","filter","step","allPosts","isLoadingGetPosts","isErrorGetPosts","currentPost","workers","posts","parentPost","policiesActive","statisticsIncludedPost","isLoadingGetPostId","isErrorGetPostId","isFetchingGetPostId","selectedPolicyIDInPost","selectedPolicyNameInPost","refetchPostIdQuery","roles","updatePost","isLoadingUpdatePostMutation","isSuccessUpdatePostMutation","isErrorUpdatePostMutation","ErrorUpdatePostMutation","localIsResponseUpdatePostMutation","usePostsHook","postStatistics","isLoadingPostStatisticMutation","isSuccessPostStatisticMutation","isErrorPostStatisticMutation","ErrorPostStatisticMutation","localIsResponsePostStatisticsMutation","updateStatisticsToPostId","isLoadingStatisticsToPostIdMutation","isSuccessUpdateStatisticsToPostIdMutation","isErrorUpdateStatisticsToPostIdMutation","ErrorUpdateStatisticsToPostIdMutation","localIsResponseUpdateStatisticsToPostIdMutation","useStatisticsHook","obj","find","isHasChildPost","_currentPost$user","_currentPost$user2","user","ids","setSelectedPolicyID","setSelectedPolicyName","roleId","selectedID","selectedPolicyID","setSelectedID","selectedName","selectedPolicyName","setSelectedName","handleInputChangeModalSearch","filterArraySearchModal","inputSearchModal","useModalSelectRadio","isLoadingGetStatistics","isFetchingGetStatistics","isErrorGetStatistics","inputSearchModalStatistics","searchStatistics","resetStatisticsId","useModalCheckBoxStatistic","exitStatistic","async","data","unwrap","then","catch","error","console","JSON","stringify","saveStatisticsId","dialog","Headers","funcActiveHint","newPost","_currentPost$user3","updatedData","parentId","responsibleUserId","policyId","log","Object","keys","_objectSpread","_id","Input","refInput","parametr","_Fragment","disabledPole","Select","refSelect","arrayItemTwo","ConfigProvider","locale","ruRU","Tour","onClose","main","HandlerQeury","Error","Loading","Fetching","productTeaxtaera","Teaxtaera","e","destinyTeaxtaera","greyPolicy","postNested","nameButton","blackStatistic","RoleContainer","rolesArray","role","setRole","btnNoSave","HandlerMutation","Success","textSuccess","textError","errors","message"],"sourceRoot":""}