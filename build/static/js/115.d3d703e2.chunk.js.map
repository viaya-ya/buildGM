{"version":3,"file":"static/js/115.d3d703e2.chunk.js","mappings":"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","sources":["webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","webpack://good_management/./src/UI/app/SettingsPage/desktop/SettingsPage.module.css?7530","UI/app/SettingsPage/desktop/SettingsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__BUuuG\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__S7EYo\"};","import React from \"react\";\nimport classes from \"./ButtonAction.module.css\";\nimport iconAdd from \"../../../../image/iconAdd.svg\";\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\nexport default function ButtonAction({ create, update, refUpdate, refCreate }) {\n  return (\n    <div className={classes.wrapper}>\n      {create && (\n        <ButtonImage\n          refAction={refCreate}\n          name={\"создать\"}\n          icon={iconAdd}\n          onClick={create}\n        ></ButtonImage>\n      )}\n\n      {update && (\n        <ButtonImage\n          refAction={refUpdate}\n          name={\"обновить\"}\n          icon={Blacksavetmp}\n          onClick={update}\n        ></ButtonImage>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport classes from \"./BottomHeaders.module.css\"\nimport ButtonAction from './ButtonAction/ButtonAction'\n\nexport default function BottomHeaders({children, create, update,  refUpdate, refCreate}) {\n  return (\n    <div className={classes.editText}>\n        {children}\n        <ButtonAction create={create} update={update} refUpdate={refUpdate} refCreate={refCreate}></ButtonAction>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"SettingsPage_dialog__ie2CS\",\"main\":\"SettingsPage_main__8qLPn\",\"wrapper\":\"SettingsPage_wrapper__z5exK\",\"block\":\"SettingsPage_block__joqzP\",\"column2\":\"SettingsPage_column2__JHRly\",\"avatarContainer\":\"SettingsPage_avatarContainer__4ILDU\",\"avatar\":\"SettingsPage_avatar__1p6Jw\",\"hiddenInput\":\"SettingsPage_hiddenInput__eznku\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./SettingsPage.module.css\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport InputMask from \"react-input-mask\";\n\nimport { Button, List, FloatButton } from \"antd\";\nimport { SaveOutlined } from \"@ant-design/icons\";\n\nimport Headers from \"@Custom/Headers/Headers\";\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders\";\nimport Input from \"@Custom/Input/Input\";\nimport HandlerMutation from \"@Custom/HandlerMutation\";\n\nimport { notEmpty } from \"@helpers/helpers\";\nimport { baseUrl } from \"@helpers/constants\";\n\nimport addCircle from \"@image/addCircleGrey.svg\";\nimport exitHeader from \"@image/exitHeader.svg\";\n\nimport { useUserHook } from \"@hooks\";\nimport { usePostImageMutation } from \"@services\";\n\n\nexport default function SettingsPage() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [middleName, setMiddleName] = useState(\"\");\n  const [telephoneNumber, setTelephoneNumber] = useState(\"\");\n  const [isValid, setIsValid] = useState(false);\n\n  const [avatarLocal, setAvatarLocal] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n\n  const handleChangeFirstName = (e) => {\n    const inputValue = e;\n    const lettersOnly = inputValue.replace(/[^A-Za-zА-Яа-я\\s]/g, \"\");\n\n    const formattedValue =\n      lettersOnly.charAt(0).toUpperCase() + lettersOnly.slice(1);\n\n    setFirstName(formattedValue);\n  };\n\n  const handleChangeLastName = (e) => {\n    const inputValue = e;\n    const lettersOnly = inputValue.replace(/[^A-Za-zА-Яа-я\\s]/g, \"\");\n\n    const formattedValue =\n      lettersOnly.charAt(0).toUpperCase() + lettersOnly.slice(1);\n\n    setLastName(formattedValue);\n  };\n\n  const handleChangeMiddleName = (e) => {\n    const inputValue = e;\n    const lettersOnly = inputValue.replace(/[^A-Za-zА-Яа-я\\s]/g, \"\");\n\n    const formattedValue =\n      lettersOnly.charAt(0).toUpperCase() + lettersOnly.slice(1);\n    console.log(formattedValue);\n    setMiddleName(formattedValue);\n  };\n\n  const handleChangeTelephoneNumber = (e) => {\n    const cleanedPhone = e.target.value.replace(/\\D/g, \"\");\n    setTelephoneNumber(`+${cleanedPhone}`);\n  };\n\n  // Создание аккаунта\n  const {\n    // Создать user\n    reduxSelectedOrganizationId,\n    postUser,\n\n    isLoadingUserMutation,\n    isSuccessUserMutation,\n    isErrorUserMutation,\n    ErrorUserMutation,\n\n    localIsResponseUserMutation,\n\n    // Получит информацию для создания user\n    postsWithoutUser,\n    isLoadingGetUserNew,\n    isErrorGetUserNew,\n\n    userInfo,\n\n    updateUser,\n  } = useUserHook();\n\n  // Для картинки\n  const [postImage] = usePostImageMutation();\n\n  const handleUpdateUserButtonClick = async () => {\n    const Data = {};\n\n    if (firstName !== userInfo?.firstName) Data.firstName = firstName;\n\n    if (lastName !== userInfo?.lastName) Data.lastName = lastName;\n\n    if (middleName !== userInfo?.middleName) Data.middleName = middleName;\n\n    if (telephoneNumber !== userInfo?.telephoneNumber)\n      Data.telephoneNumber = telephoneNumber;\n\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      try {\n        const result = await postImage(formData).unwrap();\n        Data.avatar_url = result.filePath;\n      } catch (error) {\n        console.error(\n          \"Ошибка загрузки изображения:\",\n          JSON.stringify(error, null, 2)\n        );\n        throw error;\n      }\n    }\n\n    if (!notEmpty(Data)) return;\n\n    await updateUser({\n      ...Data,\n    })\n      .unwrap()\n      .then(() => {})\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2));\n      });\n  };\n\n  const fileInputRef = useRef(null);\n\n  const handleAvatarClick = () => {\n    fileInputRef.current.click();\n  };\n\n  //Загрузка картинки локально\n  const imageUploadHandlerLocal = (e) => {\n    const fileInput = e.target;\n    const file = e.target.files[0];\n    if (file) {\n      setFile(file);\n      const imageUrl = URL.createObjectURL(file);\n      setAvatarLocal(imageUrl);\n    }\n    // Сбрасываем значение инпута, чтобы можно было выбрать тот же файл\n    fileInput.value = \"\";\n  };\n\n  const deleteImage = () => {\n    if (avatarLocal) {\n      URL.revokeObjectURL(avatarLocal); // Очищаем URL из памяти\n    }\n    setFile(\"\");\n    setAvatarLocal(\"\");\n  };\n\n  useEffect(() => {\n    if (firstName && lastName && middleName && telephoneNumber.length == 12) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  }, [firstName, lastName, middleName, telephoneNumber]);\n\n  const navigate = useNavigate();\n\n  console.log(userInfo);\n\n  useEffect(() => {\n    if (!notEmpty(userInfo)) return;\n\n    setFirstName(userInfo?.firstName);\n    setLastName(userInfo?.lastName);\n    setMiddleName(userInfo?.middleName);\n    setTelephoneNumber(userInfo?.telephoneNumber);\n    setAvatarLocal(userInfo.avatar_url ? baseUrl + userInfo?.avatar_url : \"\");\n  }, [userInfo]);\n\n  const buttonClickToPost = (id) => {\n    navigate(`/pomoshnik/post/${id}`);\n  };\n\n  return (\n    <div className={classes.dialog}>\n      <Headers name={\"редактирование пользователя\"}>\n        <BottomHeaders></BottomHeaders>\n      </Headers>\n\n      <div className={classes.main}>\n        <div className={classes.wrapper}>\n          <div className={classes.block}>\n            <div className={classes.avatarContainer}>\n              <img\n                src={avatarLocal || addCircle}\n                alt=\"avatar\"\n                className={classes.avatar}\n                onClick={handleAvatarClick}\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                ref={fileInputRef}\n                className={classes.hiddenInput}\n                onChange={imageUploadHandlerLocal}\n              />\n              <img\n                src={exitHeader}\n                alt=\"удалить картинку\"\n                title={\"удалить картинку\"}\n                onClick={deleteImage}\n                style={{ width: \"12px\", height: \"12px\" }}\n              ></img>\n            </div>\n\n            <div className={classes.column2}>\n              <Input\n                name={\"Имя\"}\n                value={firstName}\n                onChange={handleChangeFirstName}\n              ></Input>\n\n              <Input\n                name={\"Фамилия\"}\n                value={lastName}\n                onChange={handleChangeLastName}\n              ></Input>\n\n              <Input\n                name={\"Отчество\"}\n                value={middleName}\n                onChange={handleChangeMiddleName}\n              ></Input>\n\n              <Input name={\"Телефон\"} isShowInput={true}>\n                <InputMask\n                  mask=\"+9 (999) 999-99-99\"\n                  value={telephoneNumber}\n                  onChange={handleChangeTelephoneNumber}\n                  placeholder=\"+9 (999) 999-99-99\"\n                  required\n                >\n                  {(inputProps) => (\n                    <input {...inputProps} type=\"tel\" id=\"phone\" />\n                  )}\n                </InputMask>\n              </Input>\n            </div>\n          </div>\n\n          <List\n            style={{ alignSelf: \"flex-start\", width: \"100%\" }}\n            header={<div>Закрепленные посты</div>}\n            bordered\n            dataSource={userInfo?.posts}\n            renderItem={(item) => (\n              <List.Item>\n                <List.Item.Meta\n                  avatar={\n                    <svg\n                      width=\"20.000000\"\n                      height=\"20.000000\"\n                      viewBox=\"0 0 20 20\"\n                      fill=\"none\"\n                    >\n                      <desc>Created with Pixso.</desc>\n                      <defs />\n                      <path\n                        id=\"Vector\"\n                        d=\"M5 20C4.46 20 3.96 19.78 3.58 19.41C3.21 19.03 3 18.53 3 18L3 8C3 7.46 3.21 6.96 3.58 6.58C3.96 6.21 4.46 6 5 6L9 6L9 4L8 4C7.73 4 7.48 3.89 7.29 3.7C7.1 3.51 7 3.26 7 3L0 3L0 1L7 1C7 0.73 7.1 0.48 7.29 0.29C7.48 0.1 7.73 0 8 0L12 0C12.26 0 12.51 0.1 12.7 0.29C12.89 0.48 13 0.73 13 1L20 1L20 3L13 3C13 3.26 12.89 3.51 12.7 3.7C12.51 3.89 12.26 4 12 4L11 4L11 6L15 6C16.11 6 17 6.9 17 8L17 18C17 18.53 16.78 19.03 16.41 19.41C16.03 19.78 15.53 20 15 20L5 20ZM10 12.28C11.18 12.28 12.13 11.32 12.13 10.14C12.13 8.95 11.18 8 10 8C8.81 8 7.85 8.95 7.85 10.14C7.85 11.32 8.81 12.28 10 12.28ZM5 16.21C5 14.55 8.33 13.71 10 13.71C11.66 13.71 15 14.55 15 16.21L15 17.28C15 17.67 14.67 18 14.28 18L5.71 18C5.32 18 5 17.67 5 17.28L5 16.21Z\"\n                        fill=\"#005475\"\n                        fill-opacity=\"0.901961\"\n                        fill-rule=\"evenodd\"\n                      />\n                    </svg>\n                  }\n                  title={\n                    <Button\n                      style={{ padding: 0 }}\n                      color=\"default\"\n                      variant=\"link\"\n                      onClick={() => buttonClickToPost(item.id)}\n                    >\n                      {item.postName}\n                    </Button>\n                  }\n                  description={<div>{item.divisionName}</div>}\n                />\n              </List.Item>\n            )}\n          />\n        </div>\n\n        <FloatButton\n          icon={<SaveOutlined />}\n          type=\"primary\"\n          tooltip=\"Сохранить изменения\"\n          onClick={handleUpdateUserButtonClick}\n          style={{\n            insetInlineEnd: 94,\n          }}\n        />\n        \n        <HandlerMutation\n          Loading={isLoadingUserMutation}\n          Error={isErrorUserMutation && localIsResponseUserMutation}\n          Success={isSuccessUserMutation && localIsResponseUserMutation}\n          textSuccess={`Пользователь ${firstName} ${lastName} ${middleName} создан`}\n          textError={\n            ErrorUserMutation?.data?.errors?.[0]?.errors?.[0]\n              ? ErrorUserMutation.data.errors[0].errors[0]\n              : ErrorUserMutation?.data?.message\n          }\n        ></HandlerMutation>\n\n\n      </div>\n\n    </div>\n  );\n}\n"],"names":["ButtonAction","_ref","create","update","refUpdate","refCreate","_jsxs","className","classes","wrapper","children","_jsx","ButtonImage","refAction","name","icon","iconAdd","onClick","Blacksavetmp","BottomHeaders","editText","SettingsPage","_ErrorUserMutation$da","_ErrorUserMutation$da2","_ErrorUserMutation$da3","_ErrorUserMutation$da4","_ErrorUserMutation$da5","firstName","setFirstName","useState","lastName","setLastName","middleName","setMiddleName","telephoneNumber","setTelephoneNumber","isValid","setIsValid","avatarLocal","setAvatarLocal","file","setFile","reduxSelectedOrganizationId","postUser","isLoadingUserMutation","isSuccessUserMutation","isErrorUserMutation","ErrorUserMutation","localIsResponseUserMutation","postsWithoutUser","isLoadingGetUserNew","isErrorGetUserNew","userInfo","updateUser","useUserHook","postImage","usePostImageMutation","fileInputRef","useRef","useEffect","length","navigate","useNavigate","console","log","notEmpty","avatar_url","baseUrl","dialog","Headers","main","block","avatarContainer","src","addCircle","alt","avatar","handleAvatarClick","current","click","type","accept","ref","hiddenInput","onChange","e","fileInput","target","files","imageUrl","URL","createObjectURL","value","exitHeader","title","deleteImage","revokeObjectURL","style","width","height","column2","Input","lettersOnly","replace","formattedValue","charAt","toUpperCase","slice","isShowInput","InputMask","mask","cleanedPhone","placeholder","required","inputProps","id","List","alignSelf","header","bordered","dataSource","posts","renderItem","item","Item","Meta","viewBox","fill","d","Button","padding","color","variant","buttonClickToPost","postName","description","divisionName","FloatButton","SaveOutlined","tooltip","async","Data","formData","FormData","append","result","unwrap","filePath","error","JSON","stringify","then","catch","insetInlineEnd","HandlerMutation","Loading","Error","Success","textSuccess","textError","data","errors","message"],"sourceRoot":""}