{"version":3,"file":"static/js/309.5032d37a.chunk.js","mappings":"iLACA,SAAgB,OAAS,mCAAmC,KAAO,iCAAiC,KAAO,iCAAiC,mBAAqB,+CAA+C,cAAgB,2C,2FCajN,SAASA,IACpB,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,MACfC,EAAeC,IAAoBC,EAAAA,EAAAA,WAAS,IAC5CC,EAAMC,IAAWF,EAAAA,EAAAA,WAAS,IAG3B,YAAEG,EAAW,aAAEC,EAAY,eAAEC,EAAc,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAgB,CAAEX,UAAWA,IAE/FY,EAAQ,CACV,CACIC,MAAO,gEACPC,YAAa,+IACbC,OAAQA,IAAMC,SAASC,cAAc,+BAEzC,CACIJ,MAAO,0DACPC,YAAa,4OACbC,OAAQA,IAAMC,SAASC,cAAc,gCAEzC,CACIJ,MAAO,yIACPC,YAAa,6MACbC,OAAQA,IAAMC,SAASC,cAAc,gCAE3CC,QAAQC,IAAUA,EAAKC,WAEzB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQC,OAAOC,SAAA,EAC3BC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,KAAiB,OAAXrB,QAAW,IAAXA,OAAW,EAAXA,EAAasB,SAAUC,YAAwB,OAAXvB,QAAW,IAAXA,OAAW,EAAXA,EAAawB,SAAUC,OAAmB,OAAXzB,QAAW,IAAXA,OAAW,EAAXA,EAAayB,OAAQC,eAAgBA,IAAM3B,GAAQ,MAGrIe,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQW,KAAKT,SAAA,EACzBC,EAAAA,EAAAA,KAACS,EAAAA,GAAc,CAACC,OAAQC,EAAAA,EAAKZ,UACzBC,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CAACjC,KAAMA,EAAMkC,QAASA,IAAMjC,GAAQ,GAAQM,MAAOA,OAE5DS,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQiB,KAAKf,SAAA,EACzBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAQkB,cAAeC,QAASA,IAAMvC,GAAkBD,GAAeuB,SAAA,CAClFvB,EAAgB,wCAAY,mDAAW,8GAE3CA,GACGwB,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAlB,SACqB,OAAhBf,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBkC,KAAI,CAACC,EAAMC,KAC1BpB,EAAAA,EAAAA,KAACqB,EAAAA,SAAc,CAAAtB,UACXC,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACC,SAAUJ,EAAMK,WAAW,KADhBJ,QAM7BzB,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAAlB,SAAA,CACmB,OAAdhB,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,KAAI,CAACC,EAAMC,KACxBpB,EAAAA,EAAAA,KAACqB,EAAAA,SAAc,CAAAtB,UACXC,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACC,SAAUJ,KADCC,MAIV,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB0C,QAAS,IACtBzB,EAAAA,EAAAA,KAAA,OAAKJ,UAAWC,EAAQ6B,mBAAmB3B,SAAC,4FAEnC,OAAZjB,QAAY,IAAZA,OAAY,EAAZA,EAAcoC,KAAI,CAACC,EAAMC,KACtBpB,EAAAA,EAAAA,KAACqB,EAAAA,SAAc,CAAAtB,UACXC,EAAAA,EAAAA,KAACsB,EAAAA,EAAI,CAACC,SAAUJ,KADCC,eAQzCpB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAK,CAACC,cAA0B,OAAX/C,QAAW,IAAXA,OAAW,EAAXA,EAAagD,WAI/C,C","sources":["webpack://good_management/./src/UI/app/ConvertsPage/desktop/desktopConvertPage.module.css?f48c","UI/app/ConvertsPage/desktop/DesktopConvertPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"desktopConvertPage_dialog__8hM6u\",\"main\":\"desktopConvertPage_main__xtxA0\",\"body\":\"desktopConvertPage_body__dsmSk\",\"unSeenMessagesInfo\":\"desktopConvertPage_unSeenMessagesInfo__qxmgt\",\"archiveButton\":\"desktopConvertPage_archiveButton__OJqjQ\"};","import React, { useEffect, useState } from 'react'\nimport InputTextContainer from '@Custom/ContainerForInputText/InputTextContainer';\nimport Headers from \"@Custom/Headers/Headers\";\nimport classes from './desktopConvertPage.module.css'\nimport { useParams } from 'react-router-dom';\nimport { notEmpty } from '@helpers/helpers'\nimport Task from '../TaskContainer/Task'\nimport { useConvertsHook } from '@hooks/useConvertsHook';\nimport { ConfigProvider, Tour } from \"antd\";\nimport ruRU from \"antd/locale/ru_RU\";\nimport Input from '../Input';\n\n\n\nexport default function DesktopConvertPage() {\n    const { contactId } = useParams()\n    const [isViewArchive, setIsViewArchive] = useState(false)\n    const [open, setOpen] = useState(false)\n\n\n    const { contactInfo, seenConverts, unseenConverts, archiveConvaerts } = useConvertsHook({ contactId: contactId })\n\n    const steps = [\n        {\n            title: \"Выбор поста\",\n            description: \"Выберите Пост отправителя\",\n            target: () => document.querySelector('[data-tour=\"current-post\"]'),\n        },\n        {\n            title: \"Выбор даты\",\n            description: \"Выберите дату начала и завершения переписки\",\n            target: () => document.querySelector('[data-tour=\"date-for-task\"]'),\n        },\n        {\n            title: \"Создать личную переписку\",\n            description: \"Нажмите для создания личной переписки\",\n            target: () => document.querySelector('[data-tour=\"send-message\"]'),\n        },\n    ].filter((step) => !step.disabled);\n\n    return (\n        <div className={classes.dialog}>\n            <Headers name={contactInfo?.userName} sectionName={contactInfo?.postName} avatar={contactInfo?.avatar} funcActiveHint={() => setOpen(true)}>\n            </Headers>\n\n            <div className={classes.main}>\n                <ConfigProvider locale={ruRU}>\n                    <Tour open={open} onClose={() => setOpen(false)} steps={steps} />\n                </ConfigProvider>\n                <div className={classes.body}>\n                    <div className={classes.archiveButton} onClick={() => setIsViewArchive(!isViewArchive)}>\n                        {isViewArchive ? 'Скрыть ' : 'Показать'} завершенные задачи\n                    </div>\n                    {isViewArchive ? (\n                        <>\n                            {archiveConvaerts?.map((item, index) => (\n                                <React.Fragment key={index}>\n                                    <Task taskData={item} isArchive={true}></Task>\n                                </React.Fragment>\n                            ))}\n                        </>\n                    ) : (\n                        <>\n                            {unseenConverts?.map((item, index) => (\n                                <React.Fragment key={index}>\n                                    <Task taskData={item}></Task>\n                                </React.Fragment>\n                            ))}\n                            {unseenConverts?.length > 0 && (\n                                <div className={classes.unSeenMessagesInfo}> Новые сообщения </div>\n                            )}\n                            {seenConverts?.map((item, index) => (\n                                <React.Fragment key={index}>\n                                    <Task taskData={item}></Task>\n                                </React.Fragment>\n                            ))}\n                        </>\n                    )}\n                </div>\n            </div>\n            <Input reciverPostId={contactInfo?.postId}></Input>\n\n        </div>\n    )\n}\n"],"names":["DesktopConvertPage","contactId","useParams","isViewArchive","setIsViewArchive","useState","open","setOpen","contactInfo","seenConverts","unseenConverts","archiveConvaerts","useConvertsHook","steps","title","description","target","document","querySelector","filter","step","disabled","_jsxs","className","classes","dialog","children","_jsx","Headers","name","userName","sectionName","postName","avatar","funcActiveHint","main","ConfigProvider","locale","ruRU","Tour","onClose","body","archiveButton","onClick","_Fragment","map","item","index","React","Task","taskData","isArchive","length","unSeenMessagesInfo","Input","reciverPostId","postId"],"sourceRoot":""}