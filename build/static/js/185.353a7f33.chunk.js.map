{"version":3,"file":"static/js/185.353a7f33.chunk.js","mappings":"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","sources":["webpack://good_management/./src/UI/app/WorkingPlanPage/MainWorkingPlam.module.css?7e52","UI/app/WorkingPlanPage/MainWorkingPlan.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"MainWorkingPlam_dialog__7mZ+f\",\"main\":\"MainWorkingPlam_main__jEc70\",\"body\":\"MainWorkingPlam_body__oXLhb\",\"archiveButton\":\"MainWorkingPlam_archiveButton__cHf5f\",\"tasksContainer\":\"MainWorkingPlam_tasksContainer__dkBD+\",\"dayContainer\":\"MainWorkingPlam_dayContainer__YBnkE\"};","import React, { useState } from 'react'\r\nimport classes from './MainWorkingPlam.module.css'\r\nimport Headers from \"@Custom/Headers/Headers\";\r\nimport Task from '@app/WorkingPlanPage/mobile/TaskContainer/Task';\r\nimport InputTextContainer from '@Custom/ContainerForInputText/InputTextContainer';\r\nimport { useTargetsHook } from '@hooks';\r\nimport { ConfigProvider, Tour } from \"antd\";\r\nimport ruRU from \"antd/locale/ru_RU\";\r\nimport Input from './mobile/Input';\r\n\r\nexport default function MainWorkingPlan() {\r\n\r\n\r\n    const [isViewArchive, setIsViewArchive] = useState(false)\r\n    const [open, setOpen] = useState(false)\r\n\r\n\r\n\r\n    const steps = [\r\n    {\r\n      title: \"Выбор поста\",\r\n      description: \"Выберите Пост отправителя\",\r\n      target: () => document.querySelector('[data-tour=\"current-post\"]'),\r\n    },\r\n    {\r\n      title: \"Выбор даты\",\r\n      description: \"Выберите дату начала и завершения задачи\",\r\n      target: () => document.querySelector('[data-tour=\"date-for-task\"]'),\r\n    },\r\n    {\r\n      title: \"Вложения\",\r\n      description: \"Прикрепите файлы к задаче\",\r\n      target: () => document.querySelector('[data-tour=\"files-attachment\"]'),\r\n    },\r\n    {\r\n      title: \"Отправить задачу\",\r\n      description: \"Нажмите для создания личной задачи\",\r\n      target: () => document.querySelector('[data-tour=\"send-message\"]'),\r\n    },\r\n    {\r\n      title: \"Создать приказ\",\r\n      description: \"Нажмите для отправки приказа\",\r\n      target: () => document.querySelector('[data-tour=\"share-icon\"]'),\r\n    },\r\n  ].filter((step) => !step.disabled);\r\n\r\n    const {\r\n        personalTargets,\r\n        orderTargets,\r\n        projectTragets,\r\n        futureTargets,\r\n        userPosts,\r\n        isLoadingGetTargets,\r\n        isErrorGetTargets,\r\n\r\n\r\n        archivePersonalTargets,\r\n        archiveOrdersTargets,\r\n        archiveProjectTragets,\r\n        isLoadingGetArchiveTargets,\r\n        isErrorGetArchiveTargets,\r\n\r\n    } = useTargetsHook()\r\n\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <Headers name={\"Рабочий План\"} funcActiveHint={() => setOpen(true)}>\r\n                {/* <BottomHeaders></BottomHeaders> */}\r\n            </Headers>\r\n\r\n            <div className={classes.main}>\r\n                <ConfigProvider locale={ruRU}>\r\n                    <Tour open={open} onClose={() => setOpen(false)} steps={steps} />\r\n                </ConfigProvider>\r\n                <div className={classes.body}>\r\n                    <div key={'un'} className={classes.archiveButton} onClick={() => setIsViewArchive(!isViewArchive)}>\r\n                        {isViewArchive ? 'Скрыть ' : 'Показать'} завершенные задачи\r\n                    </div>\r\n                    <div className={classes.tasksContainer}>\r\n                        {!isViewArchive ? (\r\n                            <>\r\n                                {futureTargets.map((elem, elemIndex) => (\r\n                                    <>\r\n                                        <div key={elemIndex} className={classes.dayContainer}>\r\n                                            <span>Начать {elem.date}</span>\r\n                                        </div>\r\n                                        {elem?.items?.map((item, index) => (\r\n                                            <Task\r\n                                                key={index}\r\n                                                taskData={item}\r\n                                                userPosts={userPosts}\r\n                                            ></Task>\r\n                                        ))}\r\n                                    </>\r\n                                ))}\r\n                                {/* {otherPersonalTargets.map((elem, elemIndex) => (\r\n                                    <>\r\n                                        <div key={elemIndex} className={classes.dayContainer}>\r\n                                            <span>Начать {elem.date}</span>\r\n                                        </div>\r\n                                        {elem?.items?.map((item, index) => (\r\n                                            <Task\r\n                                                key={index}\r\n                                                taskData={item}\r\n                                                userPosts={userPosts}\r\n                                            ></Task>\r\n                                        ))}\r\n                                    </>\r\n                                ))} */}\r\n                                <div className={classes.dayContainer}>\r\n                                    <span>Текущие</span>\r\n                                </div>\r\n                                {orderTargets.map((item, index) => (\r\n                                    <Task\r\n                                        key={index}\r\n                                        taskData={item}\r\n                                        userPosts={userPosts}\r\n                                    ></Task>\r\n                                ))}\r\n\r\n                                {personalTargets.map((item, index) => (\r\n                                    <Task\r\n                                        key={index}\r\n                                        taskData={item}\r\n                                        userPosts={userPosts}\r\n                                    ></Task>\r\n                                ))}\r\n\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {archivePersonalTargets?.map((item, index) => (\r\n                                    <Task\r\n                                        key={index}\r\n                                        taskData={item}\r\n                                        userPosts={userPosts}\r\n                                        isArchive={true}\r\n                                    ></Task>\r\n                                ))}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <Input\r\n                userPosts={userPosts}\r\n            >\r\n            </Input>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["MainWorkingPlan","isViewArchive","setIsViewArchive","useState","open","setOpen","steps","title","description","target","document","querySelector","filter","step","disabled","personalTargets","orderTargets","projectTragets","futureTargets","userPosts","isLoadingGetTargets","isErrorGetTargets","archivePersonalTargets","archiveOrdersTargets","archiveProjectTragets","isLoadingGetArchiveTargets","isErrorGetArchiveTargets","useTargetsHook","_jsxs","className","classes","dialog","children","_jsx","Headers","name","funcActiveHint","main","ConfigProvider","locale","ruRU","Tour","onClose","body","archiveButton","onClick","tasksContainer","_Fragment","map","item","index","Task","taskData","isArchive","elem","elemIndex","_elem$items","dayContainer","date","items","Input"],"sourceRoot":""}