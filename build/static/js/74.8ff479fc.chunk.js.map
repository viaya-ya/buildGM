{"version":3,"file":"static/js/74.8ff479fc.chunk.js","mappings":"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","sources":["UI/app/Project/desktop/Project/CustomTableProject.jsx","UI/app/Project/desktop/Project/DrawerUpdateProject.jsx","UI/app/Project/desktop/Project/Project.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { Table, Form } from \"antd\";\n\nimport { createStyles } from \"antd-style\";\n\nimport useCustomTableProject from \"../../componentLogic/useCustomTableProject\";\n\nconst useStyle = createStyles(({ css, token }) => {\n  const { antCls } = token;\n  return {\n    customTable: css`\n      ${antCls}-table {\n        ${antCls}-table-container {\n          ${antCls}-table-body,\n          ${antCls}-table-content {\n            scrollbar-width: thin;\n            scrollbar-color: #eaeaea transparent;\n            scrollbar-gutter: stable;\n          }\n        }\n      }\n    `,\n  };\n});\n\nexport default function CustomTableProject({\n  expandedRowKeys,\n  setExpandedRowKeys,\n  form,\n  targetStateOnProduct,\n  setTargetStateOnProduct,\n\n  selectedProjectId,\n  disabledTable,\n  tables,\n  setTables,\n  isLoadingGetProjectId,\n  isFetchingGetProjectId,\n  targets,\n  posts,\n  setDescriptionProduct,\n  descriptionProduct,\n}) {\n  const { styles } = useStyle();\n\n  const stylesColumnSelect = {\n    style: { width: \"100%\" },\n    placement: \"topLeft\",\n  };\n\n  const stylesColumnDate = {\n    style: { width: \"100%\" },\n  };\n\n  const { groupColumns, dataWithGroups, expandableConfig } =\n    useCustomTableProject({\n      expandedRowKeys,\n      setExpandedRowKeys,\n      form,\n      targetStateOnProduct,\n      setTargetStateOnProduct,\n\n      selectedProjectId,\n      disabledTable,\n      tables,\n      setTables,\n      isLoadingGetProjectId,\n      isFetchingGetProjectId,\n      targets,\n      posts,\n      setDescriptionProduct,\n      descriptionProduct,\n\n      stylesColumnSelect,\n      stylesColumnDate,\n    });\n\n  return (\n    <Form form={form} disabled={disabledTable}>\n      <Table\n        bordered\n        className={styles.customTable}\n        loading={isLoadingGetProjectId || isFetchingGetProjectId}\n        columns={groupColumns}\n        dataSource={dataWithGroups}\n        rowKey=\"key\"\n        pagination={false}\n        scroll={{ x: \"max-content\", y: \"calc(100vh - 320px)\" }}\n        style={{ width: \"100%\" }}\n        expandable={expandableConfig}\n      />\n    </Form>\n  );\n}\n","import React from \"react\";\n\nimport {\n  Space,\n  Button,\n  Input,\n  Select,\n  Form,\n  Flex,\n  Drawer as DrawerAnt,\n} from \"antd\";\n\nimport { isMobile } from \"react-device-detect\";\n\n\nimport useDrawerUpdateProject from \"../../componentLogic/useDrawerUpdateProject\";\n\nexport default function DrawerUpdateProject({\n  currentProject,\n  isLoadingGetProjectId,\n  open,\n  setOpen,\n  disabled,\n  programId,\n}) {\n\n\n  const {\n    form,\n    isSaving,\n    setIsSaving,\n    strategies,\n    isLoadingGetNew,\n\n    currentProgram,\n    isLoadingGetProgramId,\n    isErrorGetProgramId,\n    isFetchingGetProgramId,\n\n    updateProject,\n    isLoadingUpdateProjectMutation,\n    isSuccessUpdateProjectMutation,\n    isErrorUpdateProjectMutation,\n    ErrorUpdateProjectMutation,\n    localIsResponseUpdateProjectMutation,\n\n    handlePostValuesChange,\n    handleSave,\n    handleReset,\n  } = useDrawerUpdateProject({\n    currentProject,\n    isLoadingGetProjectId,\n    open,\n    setOpen,\n    disabled,\n    programId,\n  });\n  \n  return (\n    <>\n      <DrawerAnt\n        closable\n        destroyOnClose2\n        title={<div style={{ whiteSpace: \"nowrap\" }}>Обновление проекта</div>}\n        placement=\"right\"\n        open={open}\n        loading={isLoadingGetProjectId || isLoadingGetNew}\n        onClose={() => {\n          setOpen(false);\n          handleReset();\n        }}\n        width={isMobile ? 300 : 350}\n      >\n        <Flex vertical={true} style={{ height: \"100%\" }}>\n          <Form\n            disabled={disabled}\n            form={form}\n            onValuesChange={handlePostValuesChange}\n            layout=\"vertical\"\n            style={{ flexGrow: 1 }}\n          >\n            {/* Название проекта */}\n            <Form.Item\n              label=\"Название проекта\"\n              name=\"projectName\"\n              rules={[\n                { required: true, message: \"Пожалуйста, введите название!\" },\n              ]}\n            >\n              <Input />\n            </Form.Item>\n\n            {/* Программа у проекта */}\n            {programId ? (\n              <Form.Item label=\"Программа у проекта\">\n                <Input disabled value={currentProgram?.projectName} />\n              </Form.Item>\n            ) : null}\n\n            {/* Стратегия */}\n\n            {programId ? (\n              <Form.Item label=\"Стратегия\">\n                <Select\n                  disabled\n                  value={currentProgram?.strategy?.id}\n                  options={strategies.map((strategy) => ({\n                    label: \"Стратегия\" + \" \" + strategy.strategyNumber,\n                    value: strategy.id,\n                  }))}\n                />\n              </Form.Item>\n            ) : (\n              <Form.Item label=\"Стратегия\" name=\"strategyId\">\n                <Select\n                  allowClear\n                  showSearch\n                  optionFilterProp=\"label\"\n                  filterOption={(input, option) =>\n                    option?.label.toLowerCase().includes(input.toLowerCase())\n                  }\n                  options={strategies.map((strategy) => ({\n                    label: \"Стратегия\" + \" \" + strategy.strategyNumber,\n                    value: strategy.id,\n                  }))}\n                />\n              </Form.Item>\n            )}\n          </Form>\n\n          <Space style={{ marginTop: \"auto\" }}>\n            <Button\n              type=\"primary\"\n              onClick={handleSave}\n              loading={isSaving}\n              disabled={disabled}\n            >\n              Сохранить\n            </Button>\n            <Button onClick={handleReset} disabled={disabled}>\n              Сбросить\n            </Button>\n          </Space>\n        </Flex>\n      </DrawerAnt>\n    </>\n  );\n}\n","import React from \"react\";\n\nimport CustomTableProject from \"./CustomTableProject\";\nimport DrawerUpdateProject from \"./DrawerUpdateProject\";\n\nimport { SaveOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { Tabs, Button, Flex, Tooltip } from \"antd\";\nimport _ from \"lodash\";\nimport useProject from \"../../componentLogic/useProject\";\n\nexport default function Project({ activeTabTypes, disabledTable }) {\n  const {\n    onChangeTab,\n    addProject,\n    updateSingleProject,\n    selectedProjectId,\n    setSelectedProjectId,\n    descriptionProduct,\n    setDescriptionProduct,\n    form,\n    isSaving,\n    setIsSaving,\n    tables,\n    setTables,\n    expandedRowKeys,\n    setExpandedRowKeys,\n    items,\n    setItems,\n    activeTab,\n    setActiveTab,\n    openDrawer,\n    setOpenDrawer,\n    // Получение данных проектов\n    projects,\n    archivesProjects,\n    projectsWithProgram,\n    archivesProjectsWithProgram,\n    isErrorGetProject,\n    isLoadingGetProject,\n    // Получение данных выбранного проекта\n    currentProject,\n    targets,\n    isLoadingGetProjectId,\n    isErrorGetProjectId,\n    isFetchingGetProjectId,\n    // Данные для создания проекта\n    posts,\n    programs,\n\n    isLoadingGetNew,\n    isErrorGetNew,\n    // Создание нового проекта\n    reduxSelectedOrganizationId,\n    createProject,\n    isLoadingProjectMutation,\n\n    // Обновление проекта\n    updateProject,\n    isLoadingUpdateProjectMutation,\n    isSuccessUpdateProjectMutation,\n    isErrorUpdateProjectMutation,\n    ErrorUpdateProjectMutation,\n    localIsResponseUpdateProjectMutation,\n\n    targetStateOnProduct,\n    setTargetStateOnProduct,\n  } = useProject({ activeTabTypes });\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      <Flex justify=\"space-between\" align=\"center\" style={{ width: \"100%\" }}>\n        <Tabs\n          style={{ width: \"calc(100% - 40px)\" }}\n          type={activeTabTypes === \"projects\" ? \"editable-card\" : \"card\"}\n          activeKey={activeTab}\n          items={items}\n          onChange={onChangeTab}\n          // onEdit={addProject}\n          addIcon={\n            <Tooltip placement=\"bottom\" title={\"создать проект\"}>\n              <Button\n              data-tour=\"create-button\"\n                onClick={addProject}\n                size=\"small\"\n                type=\"text\"\n                icon={<PlusOutlined />}\n              />\n            </Tooltip>\n          }\n        />\n\n        <Tooltip placement=\"bottom\" title={\"сохранить\"}>\n          <Button\n           data-tour=\"save-button\"\n            type=\"primary\"\n            style={{ width: \"40px\", marginBottom:\"15px\" }}\n            icon={<SaveOutlined />}\n            onClick={updateSingleProject}\n            loading={isSaving}\n          />\n        </Tooltip>\n      </Flex>\n\n      {selectedProjectId && (\n        <DrawerUpdateProject\n          currentProject={currentProject}\n          isLoadingGetProjectId={isLoadingGetProjectId}\n          open={openDrawer}\n          setOpen={setOpenDrawer}\n          disabled={\n            activeTabTypes === \"archivesProjects\" ||\n            activeTabTypes === \"archivesProjectsWithProgram\"\n              ? true\n              : false\n          }\n          programId={currentProject.programId}\n        />\n      )}\n\n      <CustomTableProject\n        expandedRowKeys={expandedRowKeys}\n        setExpandedRowKeys={setExpandedRowKeys}\n        form={form}\n        selectedProjectId={selectedProjectId}\n        disabledTable={disabledTable}\n        tables={tables}\n        setTables={setTables}\n        isLoadingGetProjectId={isLoadingGetProjectId}\n        isFetchingGetProjectId={isFetchingGetProjectId}\n        targets={targets}\n        // targetStateOnProduct={targets.find(\n        //   (target) =>\n        //     target.type === \"Продукт\" && target.targetState === \"Активная\"\n        // )}\n        targetStateOnProduct={targetStateOnProduct}\n        setTargetStateOnProduct={setTargetStateOnProduct}\n        \n        posts={posts}\n        setDescriptionProduct={setDescriptionProduct}\n        descriptionProduct={descriptionProduct}\n      ></CustomTableProject>\n    </div>\n  );\n}\n"],"names":["useStyle","createStyles","_ref","css","token","antCls","customTable","CustomTableProject","_ref2","expandedRowKeys","setExpandedRowKeys","form","targetStateOnProduct","setTargetStateOnProduct","selectedProjectId","disabledTable","tables","setTables","isLoadingGetProjectId","isFetchingGetProjectId","targets","posts","setDescriptionProduct","descriptionProduct","styles","groupColumns","dataWithGroups","expandableConfig","useCustomTableProject","stylesColumnSelect","style","width","placement","stylesColumnDate","_jsx","Form","disabled","children","Table","bordered","className","loading","columns","dataSource","rowKey","pagination","scroll","x","y","expandable","DrawerUpdateProject","_currentProgram$strat","currentProject","open","setOpen","programId","isSaving","setIsSaving","strategies","isLoadingGetNew","currentProgram","isLoadingGetProgramId","isErrorGetProgramId","isFetchingGetProgramId","updateProject","isLoadingUpdateProjectMutation","isSuccessUpdateProjectMutation","isErrorUpdateProjectMutation","ErrorUpdateProjectMutation","localIsResponseUpdateProjectMutation","handlePostValuesChange","handleSave","handleReset","useDrawerUpdateProject","_Fragment","DrawerAnt","closable","destroyOnClose2","title","whiteSpace","onClose","isMobile","_jsxs","Flex","vertical","height","onValuesChange","layout","flexGrow","Item","label","name","rules","required","message","Input","value","projectName","Select","strategy","id","options","map","strategyNumber","allowClear","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","includes","Space","marginTop","Button","type","onClick","Project","activeTabTypes","onChangeTab","addProject","updateSingleProject","setSelectedProjectId","items","setItems","activeTab","setActiveTab","openDrawer","setOpenDrawer","projects","archivesProjects","projectsWithProgram","archivesProjectsWithProgram","isErrorGetProject","isLoadingGetProject","isErrorGetProjectId","programs","isErrorGetNew","reduxSelectedOrganizationId","createProject","isLoadingProjectMutation","useProject","justify","align","Tabs","activeKey","onChange","addIcon","Tooltip","size","icon","PlusOutlined","marginBottom","SaveOutlined"],"sourceRoot":""}