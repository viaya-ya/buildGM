{"version":3,"file":"static/js/74.382761b8.chunk.js","mappings":"uNAQA,MAAMA,GAAWC,EAAAA,EAAAA,KAAaC,IAAqB,IAApB,IAAEC,EAAG,MAAEC,GAAOF,EAC3C,MAAM,OAAEG,GAAWD,EACnB,MAAO,CACLE,YAAaH,EAAGI,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wRACZH,EACEA,EACEA,EACAA,GAQT,IAGY,SAASI,EAAkBC,GAiBtC,IAjBuC,gBACzCC,EAAe,mBACfC,EAAkB,KAClBC,EAAI,qBACJC,EAAoB,wBACpBC,EAAuB,kBAEvBC,EAAiB,cACjBC,EAAa,OACbC,EAAM,UACNC,EAAS,sBACTC,EAAqB,uBACrBC,EAAsB,QACtBC,EAAO,MACPC,EAAK,sBACLC,EAAqB,mBACrBC,GACDf,EACC,MAAM,OAAEgB,GAAW1B,KAWb,aAAE2B,EAAY,eAAEC,EAAc,iBAAEC,IACpCC,EAAAA,EAAAA,GAAsB,CACpBnB,kBACAC,qBACAC,OACAC,uBACAC,0BAEAC,oBACAC,gBACAC,SACAC,YACAC,wBACAC,yBACAC,UACAC,QACAC,wBACAC,qBAEAM,mBA5BuB,CACzBC,MAAO,CAAEC,MAAO,QAChBC,UAAW,WA2BTC,iBAxBqB,CACvBH,MAAO,CAAEC,MAAO,WA0BlB,OACEG,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACxB,KAAMA,EAAMyB,SAAUrB,EAAcsB,UACxCH,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CACJC,UAAQ,EACRC,UAAWhB,EAAOpB,YAClBqC,QAASvB,GAAyBC,EAClCuB,QAASjB,EACTkB,WAAYjB,EACZkB,OAAO,MACPC,YAAY,EACZC,OAAQ,CAAEC,EAAG,cAAeC,EAAG,uBAC/BlB,MAAO,CAAEC,MAAO,QAChBkB,WAAYtB,KAIpB,C,mFC7Ee,SAASuB,EAAmBlD,GAOvC,IAADmD,EAAA,IAPyC,eAC1CC,EAAc,sBACdlC,EAAqB,KACrBmC,EAAI,QACJC,EAAO,SACPlB,EAAQ,UACRmB,GACDvD,EAGC,MAAM,KACJW,EAAI,SACJ6C,EAAQ,YACRC,EAAW,WACXC,EAAU,gBACVC,EAAe,eAEfC,EAAc,sBACdC,EAAqB,oBACrBC,EAAmB,uBACnBC,EAAsB,cAEtBC,EAAa,+BACbC,EAA8B,+BAC9BC,EAA8B,6BAC9BC,EAA4B,2BAC5BC,EAA0B,qCAC1BC,EAAoC,uBAEpCC,EAAsB,WACtBC,EAAU,YACVC,IACEC,EAAAA,EAAAA,GAAuB,CACzBrB,iBACAlC,wBACAmC,OACAC,UACAlB,WACAmB,cAGF,OACErB,EAAAA,EAAAA,KAAAwC,EAAAA,SAAA,CAAArC,UACEH,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CACRC,UAAQ,EACRC,iBAAe,EACfC,OAAO5C,EAAAA,EAAAA,KAAA,OAAKJ,MAAO,CAAEiD,WAAY,UAAW1C,SAAC,4GAC7CL,UAAU,QACVqB,KAAMA,EACNZ,QAASvB,GAAyByC,EAClCqB,QAASA,KACP1B,GAAQ,GACRkB,GAAa,EAEfzC,MAAOkD,EAAAA,GAAW,IAAM,IAAI5C,UAE5B6C,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,UAAU,EAAMtD,MAAO,CAAEuD,OAAQ,QAAShD,SAAA,EAC9C6C,EAAAA,EAAAA,MAAC/C,EAAAA,EAAI,CACHC,SAAUA,EACVzB,KAAMA,EACN2E,eAAgBhB,EAChBiB,OAAO,WACPzD,MAAO,CAAE0D,SAAU,GAAInD,SAAA,EAGvBH,EAAAA,EAAAA,KAACC,EAAAA,EAAKsD,KAAI,CACRC,MAAM,8FACNC,KAAK,cACLC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,+JAC3BzD,UAEFH,EAAAA,EAAAA,KAAC6D,EAAAA,EAAK,MAIPxC,GACCrB,EAAAA,EAAAA,KAACC,EAAAA,EAAKsD,KAAI,CAACC,MAAM,2GAAqBrD,UACpCH,EAAAA,EAAAA,KAAC6D,EAAAA,EAAK,CAAC3D,UAAQ,EAAC4D,MAAqB,OAAdpC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,gBAEvC,KAIH1C,GACCrB,EAAAA,EAAAA,KAACC,EAAAA,EAAKsD,KAAI,CAACC,MAAM,yDAAWrD,UAC1BH,EAAAA,EAAAA,KAACgE,EAAAA,EAAM,CACL9D,UAAQ,EACR4D,MAAqB,OAAdpC,QAAc,IAAdA,GAAwB,QAAVT,EAAdS,EAAgBuC,gBAAQ,IAAAhD,OAAV,EAAdA,EAA0BiD,GACjCC,QAAS3C,EAAW4C,KAAKH,IAAQ,CAC/BT,MAAO,0DAAoBS,EAASI,eACpCP,MAAOG,EAASC,YAKtBlE,EAAAA,EAAAA,KAACC,EAAAA,EAAKsD,KAAI,CAACC,MAAM,yDAAYC,KAAK,aAAYtD,UAC5CH,EAAAA,EAAAA,KAACgE,EAAAA,EAAM,CACLM,YAAU,EACVC,YAAU,EACVC,iBAAiB,QACjBC,aAAcA,CAACC,EAAOC,IACd,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQnB,MAAMoB,cAAcC,SAASH,EAAME,eAE7CT,QAAS3C,EAAW4C,KAAKH,IAAQ,CAC/BT,MAAO,0DAAoBS,EAASI,eACpCP,MAAOG,EAASC,eAO1BlB,EAAAA,EAAAA,MAAC8B,EAAAA,EAAK,CAAClF,MAAO,CAAEmF,UAAW,QAAS5E,SAAA,EAClCH,EAAAA,EAAAA,KAACgF,EAAAA,GAAM,CACLC,KAAK,UACLC,QAAS7C,EACT9B,QAASe,EACTpB,SAAUA,EAASC,SACpB,4DAGDH,EAAAA,EAAAA,KAACgF,EAAAA,GAAM,CAACE,QAAS5C,EAAapC,SAAUA,EAASC,SAAC,8DAQ9D,C,gECzIe,SAASgF,EAAOrH,GAAqC,IAApC,eAAEsH,EAAc,cAAEvG,GAAef,EAC/D,MAAM,YACJuH,EAAW,WACXC,EAAU,oBACVC,EAAmB,kBACnB3G,EAAiB,qBACjB4G,EAAoB,mBACpBnG,EAAkB,sBAClBD,EAAqB,KACrBX,EAAI,SACJ6C,EAAQ,YACRC,EAAW,OACXzC,EAAM,UACNC,EAAS,gBACTR,EAAe,mBACfC,EAAkB,MAClBiH,EAAK,SACLC,EAAQ,UACRC,EAAS,aACTC,EAAY,WACZC,EAAU,cACVC,EAAa,SAEbC,EAAQ,iBACRC,EAAgB,oBAChBC,EAAmB,4BACnBC,EAA2B,kBAC3BC,EAAiB,oBACjBC,EAAmB,eAEnBlF,EAAc,QACdhC,EAAO,sBACPF,EAAqB,oBACrBqH,EAAmB,uBACnBpH,EAAsB,MAEtBE,EAAK,SACLmH,EAAQ,gBAER7E,EAAe,cACf8E,EAAa,4BAEbC,EAA2B,cAC3BC,EAAa,yBACbC,EAAwB,cAGxB5E,EAAa,+BACbC,EAA8B,+BAC9BC,EAA8B,6BAC9BC,GAA4B,2BAC5BC,GAA0B,qCAC1BC,GAAoC,qBAEpCzD,GAAoB,wBACpBC,KACEgI,EAAAA,EAAAA,GAAW,CAAEvB,mBAEjB,OACEpC,EAAAA,EAAAA,MAAA,OAAKpD,MAAO,CAAEC,MAAO,QAASM,SAAA,EAC5B6C,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAC2D,QAAQ,gBAAgBC,MAAM,SAASjH,MAAO,CAAEC,MAAO,QAASM,SAAA,EACpEH,EAAAA,EAAAA,KAAC8G,EAAAA,EAAI,CACHlH,MAAO,CAAEC,MAAO,qBAChBoF,KAAyB,aAAnBG,EAAgC,gBAAkB,OACxD2B,UAAWpB,EACXF,MAAOA,EACPuB,SAAU3B,EAEV4B,SACEjH,EAAAA,EAAAA,KAACkH,EAAAA,EAAO,CAACpH,UAAU,SAAS8C,MAAO,kFAAiBzC,UAClDH,EAAAA,EAAAA,KAACgF,EAAAA,GAAM,CACP,YAAU,gBACRE,QAASI,EACT6B,KAAK,QACLlC,KAAK,OACLmC,MAAMpH,EAAAA,EAAAA,KAACqH,EAAAA,EAAY,WAM3BrH,EAAAA,EAAAA,KAACkH,EAAAA,EAAO,CAACpH,UAAU,SAAS8C,MAAO,yDAAYzC,UAC7CH,EAAAA,EAAAA,KAACgF,EAAAA,GAAM,CACN,YAAU,cACTC,KAAK,UACLrF,MAAO,CAAEC,MAAO,OAAQyH,aAAa,QACrCF,MAAMpH,EAAAA,EAAAA,KAACuH,EAAAA,EAAY,IACnBrC,QAASK,EACThF,QAASe,SAKd1C,IACCoB,EAAAA,EAAAA,KAACgB,EAAmB,CAClBE,eAAgBA,EAChBlC,sBAAuBA,EACvBmC,KAAM0E,EACNzE,QAAS0E,EACT5F,SACqB,qBAAnBkF,GACmB,gCAAnBA,EAIF/D,UAAWH,EAAeG,aAI9BrB,EAAAA,EAAAA,KAAC3B,EAAkB,CACjBE,gBAAiBA,EACjBC,mBAAoBA,EACpBC,KAAMA,EACNG,kBAAmBA,EACnBC,cAAeA,EACfC,OAAQA,EACRC,UAAWA,EACXC,sBAAuBA,EACvBC,uBAAwBA,EACxBC,QAASA,EAKTR,qBAAsBA,GACtBC,wBAAyBA,GAEzBQ,MAAOA,EACPC,sBAAuBA,EACvBC,mBAAoBA,MAI5B,C","sources":["UI/app/Project/desktop/Project/CustomTableProject.jsx","UI/app/Project/desktop/Project/DrawerUpdateProject.jsx","UI/app/Project/desktop/Project/Project.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Table, Form } from \"antd\";\r\n\r\nimport { createStyles } from \"antd-style\";\r\n\r\nimport useCustomTableProject from \"../../componentLogic/useCustomTableProject\";\r\n\r\nconst useStyle = createStyles(({ css, token }) => {\r\n  const { antCls } = token;\r\n  return {\r\n    customTable: css`\r\n      ${antCls}-table {\r\n        ${antCls}-table-container {\r\n          ${antCls}-table-body,\r\n          ${antCls}-table-content {\r\n            scrollbar-width: thin;\r\n            scrollbar-color: #eaeaea transparent;\r\n            scrollbar-gutter: stable;\r\n          }\r\n        }\r\n      }\r\n    `,\r\n  };\r\n});\r\n\r\nexport default function CustomTableProject({\r\n  expandedRowKeys,\r\n  setExpandedRowKeys,\r\n  form,\r\n  targetStateOnProduct,\r\n  setTargetStateOnProduct,\r\n\r\n  selectedProjectId,\r\n  disabledTable,\r\n  tables,\r\n  setTables,\r\n  isLoadingGetProjectId,\r\n  isFetchingGetProjectId,\r\n  targets,\r\n  posts,\r\n  setDescriptionProduct,\r\n  descriptionProduct,\r\n}) {\r\n  const { styles } = useStyle();\r\n\r\n  const stylesColumnSelect = {\r\n    style: { width: \"100%\" },\r\n    placement: \"topLeft\",\r\n  };\r\n\r\n  const stylesColumnDate = {\r\n    style: { width: \"100%\" },\r\n  };\r\n\r\n  const { groupColumns, dataWithGroups, expandableConfig } =\r\n    useCustomTableProject({\r\n      expandedRowKeys,\r\n      setExpandedRowKeys,\r\n      form,\r\n      targetStateOnProduct,\r\n      setTargetStateOnProduct,\r\n\r\n      selectedProjectId,\r\n      disabledTable,\r\n      tables,\r\n      setTables,\r\n      isLoadingGetProjectId,\r\n      isFetchingGetProjectId,\r\n      targets,\r\n      posts,\r\n      setDescriptionProduct,\r\n      descriptionProduct,\r\n\r\n      stylesColumnSelect,\r\n      stylesColumnDate,\r\n    });\r\n\r\n  return (\r\n    <Form form={form} disabled={disabledTable}>\r\n      <Table\r\n        bordered\r\n        className={styles.customTable}\r\n        loading={isLoadingGetProjectId || isFetchingGetProjectId}\r\n        columns={groupColumns}\r\n        dataSource={dataWithGroups}\r\n        rowKey=\"key\"\r\n        pagination={false}\r\n        scroll={{ x: \"max-content\", y: \"calc(100vh - 320px)\" }}\r\n        style={{ width: \"100%\" }}\r\n        expandable={expandableConfig}\r\n      />\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Space,\r\n  Button,\r\n  Input,\r\n  Select,\r\n  Form,\r\n  Flex,\r\n  Drawer as DrawerAnt,\r\n} from \"antd\";\r\n\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\n\r\nimport useDrawerUpdateProject from \"../../componentLogic/useDrawerUpdateProject\";\r\n\r\nexport default function DrawerUpdateProject({\r\n  currentProject,\r\n  isLoadingGetProjectId,\r\n  open,\r\n  setOpen,\r\n  disabled,\r\n  programId,\r\n}) {\r\n\r\n\r\n  const {\r\n    form,\r\n    isSaving,\r\n    setIsSaving,\r\n    strategies,\r\n    isLoadingGetNew,\r\n\r\n    currentProgram,\r\n    isLoadingGetProgramId,\r\n    isErrorGetProgramId,\r\n    isFetchingGetProgramId,\r\n\r\n    updateProject,\r\n    isLoadingUpdateProjectMutation,\r\n    isSuccessUpdateProjectMutation,\r\n    isErrorUpdateProjectMutation,\r\n    ErrorUpdateProjectMutation,\r\n    localIsResponseUpdateProjectMutation,\r\n\r\n    handlePostValuesChange,\r\n    handleSave,\r\n    handleReset,\r\n  } = useDrawerUpdateProject({\r\n    currentProject,\r\n    isLoadingGetProjectId,\r\n    open,\r\n    setOpen,\r\n    disabled,\r\n    programId,\r\n  });\r\n  \r\n  return (\r\n    <>\r\n      <DrawerAnt\r\n        closable\r\n        destroyOnClose2\r\n        title={<div style={{ whiteSpace: \"nowrap\" }}>Обновление проекта</div>}\r\n        placement=\"right\"\r\n        open={open}\r\n        loading={isLoadingGetProjectId || isLoadingGetNew}\r\n        onClose={() => {\r\n          setOpen(false);\r\n          handleReset();\r\n        }}\r\n        width={isMobile ? 300 : 350}\r\n      >\r\n        <Flex vertical={true} style={{ height: \"100%\" }}>\r\n          <Form\r\n            disabled={disabled}\r\n            form={form}\r\n            onValuesChange={handlePostValuesChange}\r\n            layout=\"vertical\"\r\n            style={{ flexGrow: 1 }}\r\n          >\r\n            {/* Название проекта */}\r\n            <Form.Item\r\n              label=\"Название проекта\"\r\n              name=\"projectName\"\r\n              rules={[\r\n                { required: true, message: \"Пожалуйста, введите название!\" },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            {/* Программа у проекта */}\r\n            {programId ? (\r\n              <Form.Item label=\"Программа у проекта\">\r\n                <Input disabled value={currentProgram?.projectName} />\r\n              </Form.Item>\r\n            ) : null}\r\n\r\n            {/* Стратегия */}\r\n\r\n            {programId ? (\r\n              <Form.Item label=\"Стратегия\">\r\n                <Select\r\n                  disabled\r\n                  value={currentProgram?.strategy?.id}\r\n                  options={strategies.map((strategy) => ({\r\n                    label: \"Стратегия\" + \" \" + strategy.strategyNumber,\r\n                    value: strategy.id,\r\n                  }))}\r\n                />\r\n              </Form.Item>\r\n            ) : (\r\n              <Form.Item label=\"Стратегия\" name=\"strategyId\">\r\n                <Select\r\n                  allowClear\r\n                  showSearch\r\n                  optionFilterProp=\"label\"\r\n                  filterOption={(input, option) =>\r\n                    option?.label.toLowerCase().includes(input.toLowerCase())\r\n                  }\r\n                  options={strategies.map((strategy) => ({\r\n                    label: \"Стратегия\" + \" \" + strategy.strategyNumber,\r\n                    value: strategy.id,\r\n                  }))}\r\n                />\r\n              </Form.Item>\r\n            )}\r\n          </Form>\r\n\r\n          <Space style={{ marginTop: \"auto\" }}>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={handleSave}\r\n              loading={isSaving}\r\n              disabled={disabled}\r\n            >\r\n              Сохранить\r\n            </Button>\r\n            <Button onClick={handleReset} disabled={disabled}>\r\n              Сбросить\r\n            </Button>\r\n          </Space>\r\n        </Flex>\r\n      </DrawerAnt>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport CustomTableProject from \"./CustomTableProject\";\r\nimport DrawerUpdateProject from \"./DrawerUpdateProject\";\r\n\r\nimport { SaveOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Tabs, Button, Flex, Tooltip } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport useProject from \"../../componentLogic/useProject\";\r\n\r\nexport default function Project({ activeTabTypes, disabledTable }) {\r\n  const {\r\n    onChangeTab,\r\n    addProject,\r\n    updateSingleProject,\r\n    selectedProjectId,\r\n    setSelectedProjectId,\r\n    descriptionProduct,\r\n    setDescriptionProduct,\r\n    form,\r\n    isSaving,\r\n    setIsSaving,\r\n    tables,\r\n    setTables,\r\n    expandedRowKeys,\r\n    setExpandedRowKeys,\r\n    items,\r\n    setItems,\r\n    activeTab,\r\n    setActiveTab,\r\n    openDrawer,\r\n    setOpenDrawer,\r\n    // Получение данных проектов\r\n    projects,\r\n    archivesProjects,\r\n    projectsWithProgram,\r\n    archivesProjectsWithProgram,\r\n    isErrorGetProject,\r\n    isLoadingGetProject,\r\n    // Получение данных выбранного проекта\r\n    currentProject,\r\n    targets,\r\n    isLoadingGetProjectId,\r\n    isErrorGetProjectId,\r\n    isFetchingGetProjectId,\r\n    // Данные для создания проекта\r\n    posts,\r\n    programs,\r\n\r\n    isLoadingGetNew,\r\n    isErrorGetNew,\r\n    // Создание нового проекта\r\n    reduxSelectedOrganizationId,\r\n    createProject,\r\n    isLoadingProjectMutation,\r\n\r\n    // Обновление проекта\r\n    updateProject,\r\n    isLoadingUpdateProjectMutation,\r\n    isSuccessUpdateProjectMutation,\r\n    isErrorUpdateProjectMutation,\r\n    ErrorUpdateProjectMutation,\r\n    localIsResponseUpdateProjectMutation,\r\n\r\n    targetStateOnProduct,\r\n    setTargetStateOnProduct,\r\n  } = useProject({ activeTabTypes });\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Flex justify=\"space-between\" align=\"center\" style={{ width: \"100%\" }}>\r\n        <Tabs\r\n          style={{ width: \"calc(100% - 40px)\" }}\r\n          type={activeTabTypes === \"projects\" ? \"editable-card\" : \"card\"}\r\n          activeKey={activeTab}\r\n          items={items}\r\n          onChange={onChangeTab}\r\n          // onEdit={addProject}\r\n          addIcon={\r\n            <Tooltip placement=\"bottom\" title={\"создать проект\"}>\r\n              <Button\r\n              data-tour=\"create-button\"\r\n                onClick={addProject}\r\n                size=\"small\"\r\n                type=\"text\"\r\n                icon={<PlusOutlined />}\r\n              />\r\n            </Tooltip>\r\n          }\r\n        />\r\n\r\n        <Tooltip placement=\"bottom\" title={\"сохранить\"}>\r\n          <Button\r\n           data-tour=\"save-button\"\r\n            type=\"primary\"\r\n            style={{ width: \"40px\", marginBottom:\"15px\" }}\r\n            icon={<SaveOutlined />}\r\n            onClick={updateSingleProject}\r\n            loading={isSaving}\r\n          />\r\n        </Tooltip>\r\n      </Flex>\r\n\r\n      {selectedProjectId && (\r\n        <DrawerUpdateProject\r\n          currentProject={currentProject}\r\n          isLoadingGetProjectId={isLoadingGetProjectId}\r\n          open={openDrawer}\r\n          setOpen={setOpenDrawer}\r\n          disabled={\r\n            activeTabTypes === \"archivesProjects\" ||\r\n            activeTabTypes === \"archivesProjectsWithProgram\"\r\n              ? true\r\n              : false\r\n          }\r\n          programId={currentProject.programId}\r\n        />\r\n      )}\r\n\r\n      <CustomTableProject\r\n        expandedRowKeys={expandedRowKeys}\r\n        setExpandedRowKeys={setExpandedRowKeys}\r\n        form={form}\r\n        selectedProjectId={selectedProjectId}\r\n        disabledTable={disabledTable}\r\n        tables={tables}\r\n        setTables={setTables}\r\n        isLoadingGetProjectId={isLoadingGetProjectId}\r\n        isFetchingGetProjectId={isFetchingGetProjectId}\r\n        targets={targets}\r\n        // targetStateOnProduct={targets.find(\r\n        //   (target) =>\r\n        //     target.type === \"Продукт\" && target.targetState === \"Активная\"\r\n        // )}\r\n        targetStateOnProduct={targetStateOnProduct}\r\n        setTargetStateOnProduct={setTargetStateOnProduct}\r\n        \r\n        posts={posts}\r\n        setDescriptionProduct={setDescriptionProduct}\r\n        descriptionProduct={descriptionProduct}\r\n      ></CustomTableProject>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["useStyle","createStyles","_ref","css","token","antCls","customTable","_templateObject","_taggedTemplateLiteral","CustomTableProject","_ref2","expandedRowKeys","setExpandedRowKeys","form","targetStateOnProduct","setTargetStateOnProduct","selectedProjectId","disabledTable","tables","setTables","isLoadingGetProjectId","isFetchingGetProjectId","targets","posts","setDescriptionProduct","descriptionProduct","styles","groupColumns","dataWithGroups","expandableConfig","useCustomTableProject","stylesColumnSelect","style","width","placement","stylesColumnDate","_jsx","Form","disabled","children","Table","bordered","className","loading","columns","dataSource","rowKey","pagination","scroll","x","y","expandable","DrawerUpdateProject","_currentProgram$strat","currentProject","open","setOpen","programId","isSaving","setIsSaving","strategies","isLoadingGetNew","currentProgram","isLoadingGetProgramId","isErrorGetProgramId","isFetchingGetProgramId","updateProject","isLoadingUpdateProjectMutation","isSuccessUpdateProjectMutation","isErrorUpdateProjectMutation","ErrorUpdateProjectMutation","localIsResponseUpdateProjectMutation","handlePostValuesChange","handleSave","handleReset","useDrawerUpdateProject","_Fragment","DrawerAnt","closable","destroyOnClose2","title","whiteSpace","onClose","isMobile","_jsxs","Flex","vertical","height","onValuesChange","layout","flexGrow","Item","label","name","rules","required","message","Input","value","projectName","Select","strategy","id","options","map","strategyNumber","allowClear","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","includes","Space","marginTop","Button","type","onClick","Project","activeTabTypes","onChangeTab","addProject","updateSingleProject","setSelectedProjectId","items","setItems","activeTab","setActiveTab","openDrawer","setOpenDrawer","projects","archivesProjects","projectsWithProgram","archivesProjectsWithProgram","isErrorGetProject","isLoadingGetProject","isErrorGetProjectId","programs","isErrorGetNew","reduxSelectedOrganizationId","createProject","isLoadingProjectMutation","useProject","justify","align","Tabs","activeKey","onChange","addIcon","Tooltip","size","icon","PlusOutlined","marginBottom","SaveOutlined"],"sourceRoot":""}