{"version":3,"file":"static/js/937.b076cd23.chunk.js","mappings":"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","sources":["webpack://good_management/./src/UI/app/PolicyPage/Policy.module.css?b3af","UI/image/folder.svg","UI/image/iconSublist.svg","UI/image/addCircleBlue.svg","UI/Custom/Mdxeditor/i18n.js","webpack://good_management/./src/UI/Custom/Mdxeditor/Mdxeditor.module.css?ace3","UI/Custom/Mdxeditor/Mdxeditor.jsx","webpack://good_management/./src/UI/Custom/modalFolder/ModalFolder.module.css?760e","UI/image/deleteGrey.svg","UI/Custom/modalFolder/ModalFolder.jsx","UI/app/PolicyPage/Policy.jsx","UI/app/PolicyPage/hooks/Directories.js","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/BottomHeaders.module.css?e3ba","webpack://good_management/./src/UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.module.css?2769","UI/Custom/Headers/BottomHeaders/ButtonAction/ButtonAction.jsx","UI/Custom/Headers/BottomHeaders/BottomHeaders.jsx","UI/image/subbarSearch.svg","webpack://good_management/./src/UI/Custom/ModalWindow.module.css?7f9e","UI/Custom/ModalWindow.jsx","webpack://good_management/./src/UI/Custom/WaveLetters.module.css?9fa3","UI/Custom/WaveLetters.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Policy_dialog__6zi1d\",\"item\":\"Policy_item__cdUFC\",\"itemName\":\"Policy_itemName__cZOWr\",\"div\":\"Policy_div__XwpXK\",\"five\":\"Policy_five__9sRuK\",\"sixth\":\"Policy_sixth__zc62C\",\"policySearch\":\"Policy_policySearch__-pfjC\",\"listUL\":\"Policy_listUL__8iyXB\",\"listULElement\":\"Policy_listULElement__wWnZm\",\"policySearchItem\":\"Policy_policySearchItem__O8oZJ\",\"listULElementNested\":\"Policy_listULElementNested__IqRxO\",\"listULElementNestedTwo\":\"Policy_listULElementNestedTwo__0pXeM\",\"listULNested\":\"Policy_listULNested__IbgxV\",\"policySearchItemNested\":\"Policy_policySearchItemNested__XfXZ3\",\"policySearchItemNestedNested\":\"Policy_policySearchItemNestedNested__uShK-\",\"listText\":\"Policy_listText__0gH6e\",\"textMontserrat\":\"Policy_textMontserrat__tzVu0\",\"textMontserrat14\":\"Policy_textMontserrat14__ErxvG\",\"activeText\":\"Policy_activeText__2lG13\",\"draftText\":\"Policy_draftText__RHY+M\",\"completedText\":\"Policy_completedText__JbSyv\",\"headerText\":\"Policy_headerText__iBZkD\",\"main\":\"Policy_main__vMNS5\"};","var _desc, _defs, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgFolder(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip321_3153\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / folder\",\n    width: 24,\n    height: 24,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip321_3153)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path\",\n    d: \"M10.41 4.16L4.16 4.16C3.02 4.16 2.09 5.1 2.09 6.25L2.08 18.75C2.08 19.89 3.02 20.83 4.16 20.83L20.83 20.83C21.97 20.83 22.91 19.89 22.91 18.75L22.91 8.33C22.91 7.18 21.97 6.25 20.83 6.25L12.5 6.25L10.41 4.16Z\",\n    fill: \"#B4B4B4\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolder);\nexport default __webpack_public_path__ + \"static/media/folder.9371c16f5cfa59d1b8e2cff639352637.svg\";\nexport { ForwardRef as ReactComponent };","var _desc, _defs, _rect, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgIconSublist(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip321_3149\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / sublist hiden\",\n    width: 24,\n    height: 24,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"icon / sublist hiden\",\n    width: 24,\n    height: 24,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip321_3149)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M9.5 17.5L14.5 12.5L9.5 7.5L9.5 17.5Z\",\n    fill: \"#B4B4B4\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconSublist);\nexport default __webpack_public_path__ + \"static/media/iconSublist.43b3bf2387f47155182eaf9390745e0d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgAddCircleBlue(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10 18C5.59 18 2 14.41 2 10C2 5.59 5.59 2 10 2C14.41 2 18 5.59 18 10C18 14.41 14.41 18 10 18ZM10 0C8.68678 0 7.38642 0.258658 6.17317 0.761205C4.95991 1.26375 3.85752 2.00035 2.92893 2.92893C1.05357 4.8043 0 7.34784 0 10C0 12.6522 1.05357 15.1957 2.92893 17.0711C3.85752 17.9997 4.95991 18.7362 6.17317 19.2388C7.38642 19.7413 8.68678 20 10 20C12.6522 20 15.1957 18.9464 17.0711 17.0711C18.9464 15.1957 20 12.6522 20 10C20 8.68678 19.7413 7.38642 19.2388 6.17317C18.7362 4.95991 17.9997 3.85752 17.0711 2.92893C16.1425 2.00035 15.0401 1.26375 13.8268 0.761205C12.6136 0.258658 11.3132 0 10 0ZM11 5H9V9H5V11H9V15H11V11H15V9H11V5Z\",\n    fill: \"#005475\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgAddCircleBlue);\nexport default __webpack_public_path__ + \"static/media/addCircleBlue.be7fbd9213fdc99cda8452bf9f369267.svg\";\nexport { ForwardRef as ReactComponent };","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\ni18n.use(initReactI18next).init({\n    resources: {\n      ru: {\n        translation: {\n          \"toolbar.undo\": \"Отменить\",\n          \"toolbar.redo\": \"Вернуть\",\n\n          \"toolbar.bold\": \"Жирный\",\n          \"toolbar.removeBold\": \"Убрать жирный\",\n          \"toolbar.italic\": \"Курсив\",\n          \"toolbar.underline\": \"Подчеркнутый\",\n          \n          \"toolbar.bulletedList\": \"Маркированный список\",\n          \"toolbar.numberedList\": \"Нумерованный список\",\n          \"toolbar.checkList\": \"Контрольный список\",\n\n          \"toolbar.image\": \"Вставить изображение\",\n          \"toolbar.table\": \"Вставить таблицу\",\n          \"toolbar.link\": \"Создать ссылку\",\n\n          \"table.rowMenu\": \"Меню строк\",\n          \"table.columnMenu\": \"Меню столбцов\",\n\n          \"table.alignRight\": \"Выравнивание справа\",\n          \"table.alignCenter\": \"Выравнивание по центру\",\n          \"table.alignLeft\": \"Выравнивание слева\",\n\n          \"table.insertColumnRight\": \"Добавить столбец справа\",\n          \"table.insertColumnLeft\": \"Добавить столбец слева\",\n\n          \"table.deleteColumn\": \"Удалить столбец\",\n          \"table.deleteRow\": \"Удалить строку\",\n\n          \"table.deleteTable\": \"Удалить таблицу\",\n          \"table.insertRowAbove\": \"Добавить строку сверху\",\n          \"table.insertRowBelow\": \"Добавить строку снизу\",\n\n\n          \"uploadImage.dialogTitle\": \"Загрузка изображения\",\n          \"uploadImage.addViaUrlInstructionsNoUpload\": \"Добавление изображения по URL-адресу:\",\n          \"uploadImage.alt\": \"Текст когда изображение не загрузилось\",\n          \"uploadImage.title\": \"Подпись\",\n          \"uploadImage.uploadInstructions\": \"Загрузите изображение со своего устройства:\",\n          \"uploadImage.addViaUrlInstructions\": \"Или добавьте изображение с URL-адреса:\",\n          \n          \"imageEditor.deleteImage\": \"Удалить\",\n          \"imageEditor.editImage\": \"Изменить\",\n\n          \"dialogControls.save\": \"Сохранить\",\n          \"dialogControls.cancel\": \"Отменить\",\n\n          \"createLink.url\": \"Ссылка\",\n          \"createLink.title\": \"Название\",\n    \n          \"linkPreview.open\": \"Открыть\",\n          \"linkPreview.remove\": \"Удалить\",\n          \"linkPreview.edit\": \"Изменить\",\n          \"linkPreview.copyToClipboard\": \"Скопировать ссылку\",\n        },\n      },\n    },\n    lng: \"ru\",\n    fallbackLng: \"en\",\n    // debug: true, \n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Mdxeditor_wrapper__zRwrw\",\"editorContainer\":\"Mdxeditor_editorContainer__NwU+r\",\"toolbar-custom\":\"Mdxeditor_toolbar-custom__spgun\"};","import React, { useRef, useEffect } from \"react\";\nimport \"@mdxeditor/editor/style.css\";\nimport {\n  MDXEditor,\n  toolbarPlugin,\n  UndoRedo,\n  BoldItalicUnderlineToggles,\n  ListsToggle,\n  InsertImage,\n  InsertTable,\n  listsPlugin,\n  tablePlugin,\n  imagePlugin,\n  CreateLink,\n  linkDialogPlugin,\n  linkPlugin,\n  Separator,\n} from \"@mdxeditor/editor\";\nimport i18n from \"./i18n\";\nimport classes from \"./Mdxeditor.module.css\";\nimport { usePostImageMutation } from \"@services\";\nimport { baseUrl } from \"@helpers/constants\";\n\nexport default function Mdxeditor({\n  editorState,\n  setEditorState,\n  userId,\n  readOnly,\n}) {\n  const editorRef = useRef(null); // Ссылка на редактор\n\n  // Функция для обновления содержимого редактора и состояния\n  const updateEditorContent = (newContent) => {\n    if (editorRef.current) {\n      editorRef.current.setMarkdown(newContent); // Обновляем содержимое через setMarkdown\n      setEditorState(newContent); // Обновляем состояние редактора\n    }\n  };\n\n  const [postImage] = usePostImageMutation();\n\n  // Функция для обработки загрузки изображений\n  const imageUploadHandler = async (file) => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      // Вызов postImage для отправки файла на сервер\n      const response = await postImage(formData).unwrap();\n\n      // Проверка формата ответа\n      const filePath = (response.filePath || response.data?.filePath)?.replace(\n        /\\\\/g,\n        \"/\"\n      );\n\n      if (!filePath) {\n        throw new Error(\"filePath не найден в ответе сервера\");\n      }\n\n      console.log(\"Успешно загружено:\", filePath);\n\n      return `${baseUrl}${filePath}`;\n    } catch (error) {\n      console.error(\"Ошибка загрузки изображения:\", error);\n      return Promise.reject(error);\n    }\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.editorContainer}>\n        <MDXEditor\n          contentEditableClassName={classes.par}\n          ref={editorRef}\n          markdown={editorState}\n          translation={(key, defaultValue, interpolations) =>\n            i18n.t(key, { defaultValue, ...interpolations })\n          }\n          placeholder=\"Нажмите, чтобы ввести текст\"\n          readOnly={readOnly}\n          onChange={updateEditorContent}\n          plugins={[\n            linkPlugin(),\n            linkDialogPlugin(),\n            imagePlugin({ imageUploadHandler }),\n            tablePlugin(),\n            listsPlugin(),\n            toolbarPlugin({\n              toolbarClassName: classes[\"toolbar-custom\"],\n              toolbarContents: () => (\n                <>\n                  <div style={{ marginRight: \"20px\" }}>\n                    <UndoRedo />\n                  </div>\n                  <div style={{ marginRight: \"20px\" }}>\n                    <BoldItalicUnderlineToggles />\n                  </div>\n                  <div style={{ marginRight: \"20px\" }}>\n                    <ListsToggle />\n                  </div>\n                  <InsertImage />\n                  <Separator />\n                  <InsertTable />\n                  <Separator />\n                  <CreateLink />\n                </>\n              ),\n            }),\n          ]}\n        />\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"ModalFolder_modal__Sa4pq\",\"modalWindow\":\"ModalFolder_modalWindow__j68zF\",\"exit\":\"ModalFolder_exit__LXmmF\",\"header\":\"ModalFolder_header__g7HPS\",\"search\":\"ModalFolder_search__sEGjL\",\"item1\":\"ModalFolder_item1__tKz45\",\"item2\":\"ModalFolder_item2__d1g5e\",\"modalTableRowIcon\":\"ModalFolder_modalTableRowIcon__lPum1\",\"tablesContainer\":\"ModalFolder_tablesContainer__ojPhV\",\"tableWrapper\":\"ModalFolder_tableWrapper__MFzwk\",\"tableHeader\":\"ModalFolder_tableHeader__If34g\",\"tableContent\":\"ModalFolder_tableContent__A35rH\",\"scrollContent\":\"ModalFolder_scrollContent__1UFUv\",\"row\":\"ModalFolder_row__oIkE8\"};","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgDeleteGrey(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.25 3H11.625L10.875 2.25H7.125L6.375 3H3.75V4.5H14.25M4.5 14.25C4.5 14.6478 4.65804 15.0294 4.93934 15.3107C5.22064 15.592 5.60218 15.75 6 15.75H12C12.3978 15.75 12.7794 15.592 13.0607 15.3107C13.342 15.0294 13.5 14.6478 13.5 14.25V5.25H4.5V14.25Z\",\n    fill: \"#999999\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgDeleteGrey);\nexport default __webpack_public_path__ + \"static/media/deleteGrey.2e090a4fecb2115c1cee015631954b1e.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport classes from \"./ModalFolder.module.css\";\nimport deleteGrey from \"../../image/deleteGrey.svg\";\nimport exitModal from \"../../image/exitModal.svg\";\nimport Blacksavetmp from \"../../image/Blacksavetmp.svg\";\nimport Input from \"@Custom/Input/Input\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\n\nexport default function ModalFolder({\n  searchArrayDirectives,\n  searchArrayInstructions,\n  arrayDirectives,\n  arrayInstructions,\n  inputSearchModalDirectory,\n  handleInputChangeModalSearch,\n  handleCheckboxChange,\n  directoryName,\n  setDirectoryName,\n  save,\n  setOpenModalDeleteDirectory,\n  exit,\n  buttonDelete,\n}) {\n  const renderDirectives = () => {\n    const directivesToRender = searchArrayDirectives.length > 0 \n      ? searchArrayDirectives \n      : arrayDirectives;\n    \n    return directivesToRender?.map((item) => (\n      <div\n        key={item.id}\n        className={classes.row}\n        onClick={() => handleCheckboxChange(item.id, \"directives\")}\n      >\n        <input \n          type=\"checkbox\" \n          checked={item.checked} \n          onChange={(e) => e.stopPropagation()}\n        />\n        <span>{item.policyName}</span>\n      </div>\n    ));\n  };\n\n  const renderInstructions = () => {\n    const instructionsToRender = searchArrayInstructions.length > 0 \n      ? searchArrayInstructions \n      : arrayInstructions;\n    \n    return instructionsToRender?.map((item) => (\n      <div\n        key={item.id}\n        className={classes.row}\n        onClick={() => handleCheckboxChange(item.id, \"instructions\")}\n      >\n        <input \n          type=\"checkbox\" \n          checked={item.checked} \n          onChange={(e) => e.stopPropagation()}\n        />\n        <span>{item.policyName}</span>\n      </div>\n    ));\n  };\n\n  return (\n    <div className={classes.modal}>\n      <div className={classes.modalWindow}>\n        <img\n          src={exitModal}\n          alt=\"exitModal\"\n          onClick={exit}\n          className={classes.exit}\n        />\n\n        <div className={classes.header}>\n          <div className={classes.item1}>\n            <input\n              type=\"search\"\n              placeholder=\"Найти\"\n              value={inputSearchModalDirectory}\n              onChange={handleInputChangeModalSearch}\n              className={classes.search}\n            />\n          </div>\n\n          <div className={classes.item2}>\n            <Input\n              name={\"Название папки\"}\n              value={directoryName}\n              onChange={setDirectoryName}\n            />\n\n            <div className={classes.modalTableRowIcon}>\n              <ButtonImage\n                name={\"сохранить\"}\n                icon={Blacksavetmp}\n                onClick={save}\n              />\n              {buttonDelete && (\n                <ButtonImage\n                  name={\"удалить\"}\n                  icon={deleteGrey}\n                  onClick={() => setOpenModalDeleteDirectory(true)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n\n        <div className={classes.tablesContainer}>\n          {/* Таблица директив */}\n          <div className={classes.tableWrapper}>\n            <div className={classes.tableHeader}>Директивы</div>\n            <div className={classes.tableContent}>\n              <div className={classes.scrollContent}>\n                {renderDirectives()}\n              </div>\n            </div>\n          </div>\n\n          {/* Таблица инструкций */}\n          <div className={classes.tableWrapper}>\n            <div className={classes.tableHeader}>Инструкции</div>\n            <div className={classes.tableContent}>\n              <div className={classes.scrollContent}>\n                {renderInstructions()}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./Policy.module.css\";\nimport subbarSearch from \"@image/subbarSearch.svg\";\nimport folder from \"@image/folder.svg\";\nimport iconSublist from \"@image/iconSublist.svg\";\nimport HandlerMutation from \"@Custom/HandlerMutation.jsx\";\nimport HandlerQeury from \"@Custom/HandlerQeury.jsx\";\nimport addCircleBlue from \"@image/addCircleBlue.svg\";\nimport WaveLetters from \"@Custom/WaveLetters.jsx\";\nimport Mdxeditor from \"@Custom/Mdxeditor/Mdxeditor.jsx\";\nimport Headers from \"@Custom/Headers/Headers.jsx\";\nimport BottomHeaders from \"@Custom/Headers/BottomHeaders/BottomHeaders.jsx\";\nimport Select from \"@Custom/Select/Select.jsx\";\nimport ModalFolder from \"@Custom/modalFolder/ModalFolder\";\nimport ModalWindow from \"@Custom/ModalWindow\";\nimport { usePolicyHook, useGetReduxOrganization } from \"@hooks\";\nimport { useDirectories } from \"./hooks/Directories\";\nimport { useParams } from \"react-router-dom\";\n\nimport { ConfigProvider, Tour } from \"antd\";\nimport ruRU from \"antd/locale/ru_RU\";\n\nexport default function Policy() {\n  const { policyId } = useParams();\n\n  useEffect(() => {\n    if (policyId) {\n      setSelectedPolicyId(policyId);\n    }\n  }, []);\n\n  const selectRef = useRef(null);\n\n  const [isOpenSearch, setIsOpenSearch] = useState(false);\n\n  const [selectedPolicyId, setSelectedPolicyId] = useState(null);\n  const [policyName, setPolicyName] = useState(null);\n  const [type, setType] = useState(null);\n  const [state, setState] = useState(null);\n  const [editorState, setEditorState] = useState(\"\");\n  const [disabledArchive, setDisabledArchive] = useState(false);\n\n  const { reduxSelectedOrganizationId } = useGetReduxOrganization();\n\n  const refName = useRef(null);\n  const refType = useRef(null);\n  const refStatus = useRef(null);\n  const refCreate = useRef(null);\n  const refUpdate = useRef(null);\n\n  const [open, setOpen] = useState(false);\n\n  const steps = [\n    {\n      title: \"Название политики\",\n      description: \"Здесь можно поменять название выбранной политики\",\n      target: () => refName.current, // Добавляем проверку\n    },\n    {\n      title: \"Выбрать политику\",\n      description: \"Нажмите и выберите политику\",\n      target: () => selectRef.current, // Добавляем проверку\n    },\n    {\n      title: \"Тип политики\",\n      description: \"Нажмите и поменяйте тип\",\n      target: () => (selectedPolicyId ? refType.current : null), // Добавляем проверку\n      disabled: !selectedPolicyId,\n    },\n    {\n      title: \"Состояние политики\",\n      description: \"Нажмите и поменяйте состояние\",\n      target: () => (selectedPolicyId ? refStatus.current : null), // Добавляем проверку\n      disabled: !selectedPolicyId,\n    },\n    {\n      title: \"Создать\",\n      description: \"Нажмите для создания стратегии\",\n      target: () => refCreate.current,\n    },\n    {\n      title: \"Сохранить\",\n      description: \"Нажмите для сохранения\",\n      target: () => refUpdate.current,\n    },\n  ].filter((step) => !step.disabled); // Фильтруем шаги, у которых disabled=true;\n\n  const {\n    //useGetPoliciesQuery\n    isLoadingGetPolicies,\n    isErrorGetPolicies,\n    isFetchingGetPolicies,\n\n    //Valera\n    instructionsActive,\n    instructionsDraft,\n    instructionsCompleted,\n\n    directivesActive,\n    directivesDraft,\n    directivesCompleted,\n\n    //useGetPoliciesIdQuery\n    currentPolicy,\n    isLoadingGetPoliciesId,\n    isFetchingGetPoliciesId,\n    isErrorGetPoliciesId,\n\n    postPolicy,\n    isLoadingPostPoliciesMutation,\n    isSuccessPostPoliciesMutation,\n    isErrorPostPoliciesMutation,\n    ErrorPostPoliciesMutation,\n    localIsResponsePostPoliciesMutation,\n\n    updatePolicy,\n    isLoadingUpdatePoliciesMutation,\n    isSuccessUpdatePoliciesMutation,\n    isErrorUpdatePoliciesMutation,\n    ErrorUpdatePoliciesMutation,\n    localIsResponseUpdatePoliciesMutation,\n  } = usePolicyHook({\n    policyId: selectedPolicyId,\n    organizationId: reduxSelectedOrganizationId,\n  });\n\n  const {\n    setCurrentDirectoryInstructions,\n    setCurrentDirectoryDirectives,\n\n    directoriesSendBD,\n    currentDirectoryName,\n    setCurrentDirectoryName,\n\n    directoryName,\n    setDirectoryName,\n\n    currentDirectoryInstructions,\n    currentDirectoryDirectives,\n\n    inputSearchModalDirectory,\n    filterArraySearchModalDirectives,\n    filterArraySearchModalInstructions,\n\n    //Получение папок\n    foldersSort,\n    isLoadingGetPolicyDirectories,\n    isErrorGetPolicyDirectories,\n    isFetchingGetPolicyDirectories,\n\n    //Создание папки\n    openModalCreateDirectory,\n\n    openCreateDirectory,\n    exitCreateDirectory,\n\n    saveFolder,\n\n    isLoadingPostPoliciesDirectoriesMutation,\n    isSuccessPostPoliciesDirectoriesMutation,\n    isErrorPostPoliciesDirectoriesMutation,\n    ErrorPostPoliciesDirectoriesMutation,\n    localIsResponsePostPolicyDirectoriesMutation,\n\n    //Обновление папки\n    openModalUpdateDirectory,\n\n    updateDirectory,\n    exitUpdateDirectory,\n\n    saveUpdateFolder,\n\n    isLoadingUpdatePolicyDirectoriesMutation,\n    isSuccessUpdatePolicyDirectoriesMutation,\n    isErrorUpdatePolicyDirectoriesMutation,\n    ErrorUpdateDirectories,\n    localIsResponseUpdatePolicyDirectoriesMutation,\n\n    //Удаление папки\n    openModalDeleteDirectory,\n    setOpenModalDeleteDirectory,\n\n    saveDeleteFolder,\n\n    isLoadingDeletePolicyDirectoriesMutation,\n    isSuccessDeletePolicyDirectoriesMutation,\n    isErrorDeletePolicyDirectoriesMutation,\n    ErrorDeleteDirectories,\n    localIsResponseDeletePolicyDirectoriesMutation,\n\n    handleInputChangeModalSearch,\n    handleCheckboxChange,\n    handleCheckboxChangeUpdate,\n  } = useDirectories({ instructionsActive, directivesActive });\n\n  const savePostPolicy = async () => {\n    await postPolicy({\n      organizationId: reduxSelectedOrganizationId,\n    })\n      .unwrap()\n      .then((result) => {\n        setSelectedPolicyId(result.id);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  const saveUpdatePolicy = async () => {\n    const Data = {};\n\n    if (policyName !== null && currentPolicy.policyName !== policyName) {\n      Data.policyName = policyName;\n    }\n    if (state !== null && currentPolicy.state !== state) {\n      Data.state = state;\n    }\n    if (type !== null && currentPolicy.type !== type) {\n      Data.type = type;\n    }\n    if (editorState !== null && currentPolicy.content !== editorState) {\n      Data.content = editorState;\n    }\n    await updatePolicy({\n      _id: selectedPolicyId,\n      ...Data,\n    })\n      .unwrap()\n      .then(() => {})\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  const getPolicyId = (id) => {\n    setSelectedPolicyId(id);\n  };\n\n  useEffect(() => {\n    if (currentPolicy.policyName) {\n      setPolicyName(currentPolicy.policyName);\n    }\n    if (currentPolicy.type) {\n      setType(currentPolicy.type);\n    }\n    if (currentPolicy.state) {\n      setState(currentPolicy.state);\n    }\n    if (currentPolicy.content && currentPolicy.content !== editorState) {\n      setEditorState(currentPolicy.content);\n    }\n  }, [currentPolicy.id]);\n\n  useEffect(() => {\n    if (instructionsActive.length > 0) {\n      const update = instructionsActive.map((item) => ({\n        id: item.id,\n        policyName: item.policyName,\n        checked: false,\n      }));\n      setCurrentDirectoryInstructions(update);\n    }\n    if (directivesActive.length > 0) {\n      const update = directivesActive.map((item) => ({\n        id: item.id,\n        policyName: item.policyName,\n        checked: false,\n      }));\n      setCurrentDirectoryDirectives(update);\n    }\n  }, [isLoadingGetPolicies, isFetchingGetPolicies]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (selectRef.current && !selectRef.current.contains(event.target)) {\n        setIsOpenSearch(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  const arrayTypes = [\n    { id: \"Директива\", value: \"Директива\" },\n    { id: \"Инструкция\", value: \"Инструкция\" },\n  ];\n\n  const arrayState = [\n    { id: \"Черновик\", value: \"Черновик\" },\n    { id: \"Активный\", value: \"Активный\" },\n    { id: \"Отменён\", value: \"Отменён\" },\n  ];\n\n  const btnYes = () => {\n    saveDeleteFolder();\n  };\n\n  const btnNo = () => {\n    setOpenModalDeleteDirectory(false);\n  };\n\n  return (\n    <div className={classes.dialog}>\n      <Headers name={\"политика\"} funcActiveHint={() => setOpen(true)}>\n        <BottomHeaders\n          create={savePostPolicy}\n          update={saveUpdatePolicy}\n          refCreate={refCreate}\n          refUpdate={refUpdate}\n        >\n          <div className={classes.item} ref={refName}>\n            <div className={classes.itemName} >\n              <span>\n                Название политики <span style={{ color: \"red\" }}>*</span>\n              </span>\n            </div>\n            <div className={classes.div}>\n              <input\n                type=\"text\"\n                value={policyName}\n                onChange={(e) => setPolicyName(e.target.value)}\n                title=\"Название политики\"\n                className={`${classes.five} ${classes.textMontserrat14}`}\n                disabled={disabledArchive}\n              ></input>\n              <div className={classes.sixth} ref={selectRef}>\n                <img\n                  src={subbarSearch}\n                  alt=\"subbarSearch\"\n                  onClick={() => setIsOpenSearch(true)}\n                />\n                {isOpenSearch && (\n                  <ul className={classes.policySearch}>\n                    <li className={classes.policySearchItemNested}>\n                      <div className={classes.listUL}>\n                        <img src={folder} alt=\"folder\" />\n                        <div className={classes.listText}>Директивы</div>\n                        <img\n                          src={iconSublist}\n                          alt=\"iconSublist\"\n                          style={{ marginLeft: \"auto\" }}\n                        />\n                      </div>\n                      <ul className={classes.listULElementNested}>\n                        <li className={classes.policySearchItemNestedNested}>\n                          <div className={classes.listULNested}>\n                            <img src={folder} alt=\"folder\" />\n                            <div\n                              className={`${classes.listText} ${classes.activeText}`}\n                            >\n                              Активные\n                            </div>\n                            <img\n                              src={iconSublist}\n                              alt=\"iconSublist\"\n                              style={{ marginLeft: \"auto\" }}\n                            />\n                          </div>\n                          <ul className={classes.listULElementNestedTwo}>\n                            {directivesActive?.map((item) => (\n                              <li\n                                key={item.id}\n                                onClick={() => {\n                                  getPolicyId(item.id);\n                                  setIsOpenSearch(false);\n                                }}\n                                className={classes.textMontserrat}\n                              >\n                                {item.policyName}\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n\n                        <li className={classes.policySearchItemNestedNested}>\n                          <div className={classes.listULNested}>\n                            <img src={folder} alt=\"folder\" />\n                            <div\n                              className={`${classes.listText} ${classes.draftText}`}\n                            >\n                              Черновики\n                            </div>\n                            <img\n                              src={iconSublist}\n                              alt=\"iconSublist\"\n                              style={{ marginLeft: \"auto\" }}\n                            />\n                          </div>\n                          <ul className={classes.listULElementNestedTwo}>\n                            {directivesDraft?.map((item) => (\n                              <li\n                                key={item.id}\n                                onClick={() => {\n                                  getPolicyId(item.id);\n                                  setIsOpenSearch(false);\n                                }}\n                                className={classes.textMontserrat}\n                              >\n                                {item.policyName}\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n\n                        <li className={classes.policySearchItemNestedNested}>\n                          <div className={classes.listULNested}>\n                            <img src={folder} alt=\"folder\" />\n                            <div\n                              className={`${classes.listText} ${classes.completedText}`}\n                            >\n                              Завершенные\n                            </div>\n                            <img\n                              src={iconSublist}\n                              alt=\"iconSublist\"\n                              style={{ marginLeft: \"auto\" }}\n                            />\n                          </div>\n                          <ul className={classes.listULElementNestedTwo}>\n                            {directivesCompleted?.map((item) => (\n                              <li\n                                key={item.id}\n                                onClick={() => {\n                                  getPolicyId(item.id);\n                                  setDisabledArchive(true);\n                                  setIsOpenSearch(false);\n                                }}\n                                className={classes.textMontserrat}\n                              >\n                                {item.policyName}\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n\n                    <li className={classes.policySearchItemNested}>\n                      <div className={classes.listUL}>\n                        <img src={folder} alt=\"folder\" />\n                        <div className={classes.listText}>Инструкции</div>\n                        <img\n                          src={iconSublist}\n                          alt=\"iconSublist\"\n                          style={{ marginLeft: \"auto\" }}\n                        />\n                      </div>\n                      <ul className={classes.listULElementNested}>\n                        <li className={classes.policySearchItemNestedNested}>\n                          <div className={classes.listULNested}>\n                            <img src={folder} alt=\"folder\" />\n                            <div\n                              className={`${classes.listText} ${classes.activeText}`}\n                            >\n                              Активные\n                            </div>\n                            <img\n                              src={iconSublist}\n                              alt=\"iconSublist\"\n                              style={{ marginLeft: \"auto\" }}\n                            />\n                          </div>\n                          <ul className={classes.listULElementNestedTwo}>\n                            {instructionsActive?.map((item) => (\n                              <li\n                                key={item.id}\n                                onClick={() => {\n                                  getPolicyId(item.id);\n                                  setIsOpenSearch(false);\n                                }}\n                                className={classes.textMontserrat}\n                              >\n                                {item.policyName}\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n\n                        <li className={classes.policySearchItemNestedNested}>\n                          <div className={classes.listULNested}>\n                            <img src={folder} alt=\"folder\" />\n                            <div\n                              className={`${classes.listText} ${classes.draftText}`}\n                            >\n                              Черновики\n                            </div>\n                            <img\n                              src={iconSublist}\n                              alt=\"iconSublist\"\n                              style={{ marginLeft: \"auto\" }}\n                            />\n                          </div>\n                          <ul className={classes.listULElementNestedTwo}>\n                            {instructionsDraft?.map((item) => (\n                              <li\n                                key={item.id}\n                                onClick={() => {\n                                  getPolicyId(item.id);\n                                  setIsOpenSearch(false);\n                                }}\n                                className={classes.textMontserrat}\n                              >\n                                {item.policyName}\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n\n                        <li className={classes.policySearchItemNestedNested}>\n                          <div className={classes.listULNested}>\n                            <img src={folder} alt=\"folder\" />\n                            <div\n                              className={`${classes.listText} ${classes.completedText}`}\n                            >\n                              Завершенные\n                            </div>\n                            <img\n                              src={iconSublist}\n                              alt=\"iconSublist\"\n                              style={{ marginLeft: \"auto\" }}\n                            />\n                          </div>\n                          <ul className={classes.listULElementNestedTwo}>\n                            {instructionsCompleted?.map((item) => (\n                              <li\n                                key={item.id}\n                                onClick={() => {\n                                  getPolicyId(item.id);\n                                  setDisabledArchive(true);\n                                  setIsOpenSearch(false);\n                                }}\n                                className={classes.textMontserrat}\n                              >\n                                {item.policyName}\n                              </li>\n                            ))}\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n\n                    {foldersSort?.map((item) => {\n                      let hasInstruction = false;\n                      let hasDirective = false;\n                      return (\n                        <li className={classes.policySearchItem} key={item.id}>\n                          <div\n                            className={classes.listUL}\n                            onClick={() => updateDirectory(item)}\n                          >\n                            <img src={folder} alt=\"folder\" />\n                            <div className={classes.listText}>\n                              {item.directoryName}\n                            </div>\n                            <img\n                              src={iconSublist}\n                              alt=\"iconSublist\"\n                              style={{ marginLeft: \"auto\" }}\n                            />\n                          </div>\n                          <ul className={classes.listULElement}>\n                            {item.policyToPolicyDirectories?.map((element) => {\n                              const isInstruction =\n                                element.policy.type === \"Инструкция\";\n\n                              let instructionHeader = null;\n\n                              if (isInstruction && !hasInstruction) {\n                                hasInstruction = true;\n                                instructionHeader = (\n                                  <li\n                                    key=\"instruction-header\"\n                                    className={`${classes.headerText}`}\n                                  >\n                                    Инструкции\n                                  </li>\n                                );\n                              }\n\n                              const isDirective =\n                                element.policy.type === \"Директива\";\n\n                              let directiveHeader = null;\n\n                              if (isDirective && !hasDirective) {\n                                hasDirective = true;\n                                directiveHeader = (\n                                  <li\n                                    key=\"directive-header\"\n                                    className={`${classes.headerText}`}\n                                  >\n                                    Директивы\n                                  </li>\n                                );\n                              }\n\n                              return (\n                                <React.Fragment key={element.policy.id}>\n                                  {directiveHeader}\n                                  {instructionHeader}\n                                  <li\n                                    onClick={() => {\n                                      getPolicyId(element.policy.id);\n                                      setIsOpenSearch(false);\n                                    }}\n                                    className={classes.textMontserrat}\n                                  >\n                                    {element.policy.policyName}\n                                  </li>\n                                </React.Fragment>\n                              );\n                            })}\n                          </ul>\n                        </li>\n                      );\n                    })}\n\n                    <li className={classes.policySearchItem}>\n                      <div\n                        className={classes.listUL}\n                        onClick={openCreateDirectory}\n                      >\n                        <img src={addCircleBlue} alt=\"addCircleBlue\" />\n                        <div className={classes.listText}>Создать папку</div>\n                      </div>\n                    </li>\n                  </ul>\n                )}\n              </div>\n            </div>\n          </div>\n          {currentPolicy.id && (\n            <>\n              <Select\n               refSelect={refType}\n                name={\"Тип\"}\n                value={type}\n                onChange={setType}\n                array={arrayTypes}\n                arrayItem={\"value\"}\n                disabledPole={disabledArchive}\n              ></Select>\n              <Select\n                refSelect={refStatus}\n                name={\"Состояние\"}\n                value={state}\n                onChange={setState}\n                array={arrayState}\n                arrayItem={\"value\"}\n                disabledPole={disabledArchive}\n              ></Select>\n            </>\n          )}\n        </BottomHeaders>\n      </Headers>\n\n      <ConfigProvider locale={ruRU}>\n        <Tour open={open} onClose={() => setOpen(false)} steps={steps} />\n      </ConfigProvider>\n\n      <div className={classes.main}>\n        {isErrorPostPoliciesMutation ||\n        (isErrorGetPolicies && isErrorGetPolicyDirectories) ? (\n          <>\n            <HandlerQeury\n              Error={\n                isErrorGetPolicies ||\n                isErrorGetPolicyDirectories ||\n                isErrorPostPoliciesMutation\n              }\n            ></HandlerQeury>\n          </>\n        ) : (\n          <>\n            {isErrorGetPoliciesId ? (\n              <HandlerQeury Error={isErrorGetPoliciesId}></HandlerQeury>\n            ) : (\n              <>\n                <HandlerQeury\n                  Loading={isLoadingGetPolicies}\n                  Fetching={isFetchingGetPolicies}\n                ></HandlerQeury>\n\n                <HandlerQeury\n                  Loading={isLoadingGetPolicyDirectories}\n                  Fetching={isFetchingGetPolicyDirectories}\n                ></HandlerQeury>\n\n                {isFetchingGetPoliciesId || isLoadingGetPoliciesId ? (\n                  <HandlerQeury\n                    Loading={isLoadingGetPoliciesId}\n                    Fetching={isFetchingGetPoliciesId}\n                  ></HandlerQeury>\n                ) : (\n                  <>\n                    {currentPolicy.content ? (\n                      <>\n                        <Mdxeditor\n                          key={currentPolicy.id}\n                          editorState={currentPolicy.content}\n                          setEditorState={setEditorState}\n                          readOnly={disabledArchive}\n                        ></Mdxeditor>\n\n                        <HandlerMutation\n                          Loading={isLoadingPostPoliciesMutation}\n                          Error={\n                            isErrorPostPoliciesMutation &&\n                            localIsResponsePostPoliciesMutation\n                          }\n                          Success={\n                            isSuccessPostPoliciesMutation &&\n                            localIsResponsePostPoliciesMutation\n                          }\n                          textSuccess={\"Политика успешно создана.\"}\n                          textError={\n                            ErrorPostPoliciesMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? ErrorPostPoliciesMutation.data.errors[0]\n                                  .errors[0]\n                              : ErrorPostPoliciesMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n\n                        <HandlerMutation\n                          Loading={isLoadingUpdatePoliciesMutation}\n                          Error={\n                            isErrorUpdatePoliciesMutation &&\n                            localIsResponseUpdatePoliciesMutation\n                          }\n                          Success={\n                            isSuccessUpdatePoliciesMutation &&\n                            localIsResponseUpdatePoliciesMutation\n                          }\n                          textSuccess={`Политика ${policyName} обновлена`}\n                          textError={\n                            ErrorUpdatePoliciesMutation?.data?.errors?.[0]\n                              ?.errors?.[0]\n                              ? ErrorUpdatePoliciesMutation.data.errors[0]\n                                  .errors[0]\n                              : ErrorUpdatePoliciesMutation?.data?.message\n                          }\n                        ></HandlerMutation>\n                      </>\n                    ) : (\n                      <>\n                        <WaveLetters\n                          letters={\"Выберите политику\"}\n                        ></WaveLetters>\n                      </>\n                    )}\n\n                    <HandlerMutation\n                      Loading={isLoadingPostPoliciesDirectoriesMutation}\n                      Error={\n                        isErrorPostPoliciesDirectoriesMutation &&\n                        localIsResponsePostPolicyDirectoriesMutation\n                      }\n                      Success={\n                        isSuccessPostPoliciesDirectoriesMutation &&\n                        localIsResponsePostPolicyDirectoriesMutation\n                      }\n                      textSuccess={`Папка ${directoryName} создана`}\n                      textError={\n                        ErrorPostPoliciesDirectoriesMutation?.data?.errors?.[0]\n                          ?.errors?.[0]\n                          ? ErrorPostPoliciesDirectoriesMutation.data.errors[0]\n                              .errors[0]\n                          : ErrorPostPoliciesDirectoriesMutation?.data?.message\n                      }\n                    ></HandlerMutation>\n\n                    <HandlerMutation\n                      Loading={isLoadingUpdatePolicyDirectoriesMutation}\n                      Error={\n                        isErrorUpdatePolicyDirectoriesMutation &&\n                        localIsResponseUpdatePolicyDirectoriesMutation\n                      }\n                      Success={\n                        isSuccessUpdatePolicyDirectoriesMutation &&\n                        localIsResponseUpdatePolicyDirectoriesMutation\n                      }\n                      textSuccess={`Папка ${currentDirectoryName} обновлена`}\n                      textError={\n                        ErrorUpdateDirectories?.data?.errors?.[0]?.errors?.[0]\n                          ? ErrorUpdateDirectories.data.errors[0].errors[0]\n                          : ErrorUpdateDirectories?.data?.message\n                      }\n                    ></HandlerMutation>\n\n                    <HandlerMutation\n                      Loading={isLoadingDeletePolicyDirectoriesMutation}\n                      Error={\n                        isErrorDeletePolicyDirectoriesMutation &&\n                        localIsResponseDeletePolicyDirectoriesMutation\n                      }\n                      Success={\n                        isSuccessDeletePolicyDirectoriesMutation &&\n                        localIsResponseDeletePolicyDirectoriesMutation\n                      }\n                      textSuccess={`Папка ${currentDirectoryName} удалена`}\n                      textError={\n                        ErrorDeleteDirectories?.data?.errors?.[0]?.errors?.[0]\n                          ? ErrorDeleteDirectories.data.errors[0].errors[0]\n                          : ErrorDeleteDirectories?.data?.message\n                      }\n                    ></HandlerMutation>\n\n                    {openModalCreateDirectory && (\n                      <ModalFolder\n                        searchArrayDirectives={filterArraySearchModalDirectives}\n                        searchArrayInstructions={\n                          filterArraySearchModalInstructions\n                        }\n                        arrayDirectives={directivesActive}\n                        arrayInstructions={instructionsActive}\n                        handleInputChangeModalSearch={\n                          handleInputChangeModalSearch\n                        }\n                        inputSearchModalDirectory={inputSearchModalDirectory}\n                        handleCheckboxChange={handleCheckboxChange}\n                        directoryName={directoryName}\n                        setDirectoryName={setDirectoryName}\n                        save={saveFolder}\n                        setOpenModalDeleteDirectory={\n                          setOpenModalDeleteDirectory\n                        }\n                        exit={exitCreateDirectory}\n                      ></ModalFolder>\n                    )}\n\n                    {openModalUpdateDirectory && (\n                      <ModalFolder\n                        searchArrayDirectives={filterArraySearchModalDirectives}\n                        searchArrayInstructions={\n                          filterArraySearchModalInstructions\n                        }\n                        arrayDirectives={currentDirectoryDirectives}\n                        arrayInstructions={currentDirectoryInstructions}\n                        handleInputChangeModalSearch={\n                          handleInputChangeModalSearch\n                        }\n                        inputSearchModalDirectory={inputSearchModalDirectory}\n                        handleCheckboxChange={handleCheckboxChangeUpdate}\n                        directoryName={currentDirectoryName}\n                        setDirectoryName={setCurrentDirectoryName}\n                        save={saveUpdateFolder}\n                        setOpenModalDeleteDirectory={\n                          setOpenModalDeleteDirectory\n                        }\n                        exit={exitUpdateDirectory}\n                        buttonDelete={true}\n                      ></ModalFolder>\n                    )}\n\n                    {openModalDeleteDirectory && (\n                      <ModalWindow\n                        text={` Вы точно хотите удалить папку ${currentDirectoryName}`}\n                        close={setOpenModalDeleteDirectory}\n                        btnYes={btnYes}\n                        btnNo={btnNo}\n                      ></ModalWindow>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {\n  useDeleteDirectoriesMutation,\n  useGetDirectoriesQuery,\n  usePostDirectoriesMutation,\n  useUpdateDirectoriesMutation,\n} from \"@hooks\";\nimport { usePolicyDirectoriesHook } from \"../../../../hooks/usePolicyDirectoriesHook\";\n\nexport function useDirectories({ instructionsActive, directivesActive }) {\n  const [currentDirectoryName, setCurrentDirectoryName] = useState();\n  const [currentDirectoryId, setCurrentDirectoryId] = useState();\n\n  const [openModalCreateDirectory, setOpenModalCreateDirectory] =\n    useState(false);\n  const [openModalUpdateDirectory, setOpenModalUpdateDirectory] =\n    useState(false);\n  const [openModalDeleteDirectory, setOpenModalDeleteDirectory] =\n    useState(false);\n\n  const [directoryName, setDirectoryName] = useState(\"\");\n\n  const [directoriesSendBD, setDirectoriesSendBD] = useState([]);\n  const [directoriesUpdate, setDirectoriesUpdate] = useState([]);\n\n  const [currentDirectoryInstructions, setCurrentDirectoryInstructions] =\n    useState([]);\n  const [currentDirectoryDirectives, setCurrentDirectoryDirectives] = useState(\n    []\n  );\n\n  const [inputSearchModalDirectory, setInputSearchModalDirectory] =\n    useState(\"\");\n  const [\n    filterArraySearchModalDirectives,\n    setFilterArraySearchModalDirectives,\n  ] = useState([]);\n  const [\n    filterArraySearchModalInstructions,\n    setFilterArraySearchModalInstructions,\n  ] = useState([]);\n\n  const {\n    folders,\n    foldersSort,\n    isLoadingGetPolicyDirectories,\n    isErrorGetPolicyDirectories,\n    isFetchingGetPolicyDirectories,\n\n    deletePolicyDirectories,\n    isLoadingDeletePolicyDirectoriesMutation,\n    isSuccessDeletePolicyDirectoriesMutation,\n    isErrorDeletePolicyDirectoriesMutation,\n    ErrorDeleteDirectories,\n    localIsResponseDeletePolicyDirectoriesMutation,\n\n    updatePolicyDirectories,\n    isLoadingUpdatePolicyDirectoriesMutation,\n    isSuccessUpdatePolicyDirectoriesMutation,\n    isErrorUpdatePolicyDirectoriesMutation,\n    ErrorUpdateDirectories,\n    localIsResponseUpdatePolicyDirectoriesMutation,\n\n    postDirectory,\n    isLoadingPostPoliciesDirectoriesMutation,\n    isSuccessPostPoliciesDirectoriesMutation,\n    isErrorPostPoliciesDirectoriesMutation,\n    ErrorPostPoliciesDirectoriesMutation,\n    localIsResponsePostPolicyDirectoriesMutation,\n  } = usePolicyDirectoriesHook();\n\n  const saveFolder = async () => {\n    await postDirectory({\n      directoryName: directoryName,\n      policyToPolicyDirectories: directoriesSendBD,\n    })\n      .unwrap()\n      .then(() => {\n        setDirectoryName(\"\");\n        setDirectoriesSendBD([]);\n\n        setOpenModalCreateDirectory(false);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  const saveUpdateFolder = async () => {\n    await updatePolicyDirectories({\n      policyDirectoryId: currentDirectoryId,\n      directoryName: currentDirectoryName,\n      policyToPolicyDirectories: directoriesUpdate,\n    })\n      .unwrap()\n      .then(() => {\n        exitUpdateDirectory();\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  const saveDeleteFolder = async () => {\n    await deletePolicyDirectories({\n      policyDirectoryId: currentDirectoryId,\n    })\n      .unwrap()\n      .then(() => {\n        setOpenModalDeleteDirectory(false);\n        setOpenModalUpdateDirectory(false);\n      })\n      .catch((error) => {\n        console.error(\"Ошибка:\", JSON.stringify(error, null, 2)); // выводим детализированную ошибку\n      });\n  };\n\n  const openCreateDirectory = () => {\n    setOpenModalCreateDirectory(true);\n  };\n  const exitCreateDirectory = () => {\n    setOpenModalCreateDirectory(false);\n  };\n\n  const updateDirectory = (element) => {\n    const obj = folders?.filter((item) => item.id === element.id);\n    if (obj?.length > 0) {\n      const { id, directoryName, policyToPolicyDirectories } = obj[0];\n      const policyIds = policyToPolicyDirectories.map(\n        (element) => element.policy.id\n      );\n      setDirectoriesUpdate(policyIds);\n      const filterArray = instructionsActive\n        .filter((item) => policyIds.includes(item.id))\n        .map((item) => ({\n          id: item.id,\n          policyName: item.policyName,\n          checked: true,\n        }));\n      const filterArray1 = directivesActive\n        .filter((item) => policyIds.includes(item.id))\n        .map((item) => ({\n          id: item.id,\n          policyName: item.policyName,\n          checked: true,\n        }));\n\n      const update = currentDirectoryInstructions\n        ?.map((item) => {\n          const foundItem = filterArray?.find(\n            (element) => item.id === element.id\n          );\n          return {\n            id: item.id,\n            policyName: item.policyName,\n            checked: foundItem ? true : false,\n          };\n        })\n        ?.sort((a, b) => {\n          // Сначала сортируем по checked: true должны быть выше\n          if (a.checked === b.checked) {\n            // Если оба элемента имеют одинаковое значение checked, сортируем по policyName (алфавитно)\n            return a.policyName.localeCompare(b.policyName);\n          }\n          return b.checked - a.checked; // true (1) должно быть выше false (0)\n        });\n\n      const update1 = currentDirectoryDirectives\n        ?.map((item) => {\n          const foundItem = filterArray1?.find(\n            (element) => item.id === element.id\n          );\n          return {\n            id: item.id,\n            policyName: item.policyName,\n            checked: foundItem ? true : false,\n          };\n        })\n        ?.sort((a, b) => {\n          // Сначала сортируем по checked: true должны быть выше\n          if (a.checked === b.checked) {\n            // Если оба элемента имеют одинаковое значение checked, сортируем по policyName (алфавитно)\n            return a.policyName.localeCompare(b.policyName);\n          }\n          return b.checked - a.checked; // true (1) должно быть выше false (0)\n        });\n      setCurrentDirectoryInstructions(update);\n      setCurrentDirectoryDirectives(update1);\n      setCurrentDirectoryName(directoryName);\n      setCurrentDirectoryId(id);\n      setOpenModalUpdateDirectory(true);\n    }\n  };\n  const exitUpdateDirectory = () => {\n    setOpenModalUpdateDirectory(false);\n  };\n\n  const handleCheckboxChange = (id) => {\n    setDirectoriesSendBD((prev) => {\n      if (prev.includes(id)) {\n        return prev.filter((item) => item !== id);\n      } else {\n        return [...prev, id];\n      }\n    });\n  };\n  const handleCheckboxChangeUpdate = (id, type) => {\n    setDirectoriesUpdate((prev) => {\n      if (prev.includes(id)) {\n        return prev.filter((item) => item !== id);\n      } else {\n        return [...prev, id];\n      }\n    });\n\n    if (type === \"directives\") {\n      setCurrentDirectoryDirectives((prev) => {\n        return prev.map((item) => {\n          if (item.id === id) {\n            return { ...item, checked: !item.checked };\n          }\n          return item;\n        });\n      });\n    }\n\n    if (type === \"instructions\") {\n      setCurrentDirectoryInstructions((prev) => {\n        return prev.map((item) => {\n          if (item.id === id) {\n            return { ...item, checked: !item.checked };\n          }\n          return item;\n        });\n      });\n    }\n  };\n\n  const handleInputChangeModalSearch = (e) => {\n    setInputSearchModalDirectory(e.target.value);\n  };\n\n  useEffect(() => {\n    if (inputSearchModalDirectory !== \"\") {\n      const arrayDirectives = [...directivesActive];\n      const arrayInstructions = [...instructionsActive];\n      const filteredDirectives = arrayDirectives.filter((item) =>\n        item.policyName\n          .toLowerCase()\n          .includes(inputSearchModalDirectory.toLowerCase())\n      );\n      const filteredInstructions = arrayInstructions.filter((item) =>\n        item.policyName\n          .toLowerCase()\n          .includes(inputSearchModalDirectory.toLowerCase())\n      );\n      setFilterArraySearchModalDirectives(filteredDirectives);\n      setFilterArraySearchModalInstructions(filteredInstructions);\n    } else {\n      setFilterArraySearchModalDirectives([]);\n      setFilterArraySearchModalInstructions([]);\n    }\n  }, [inputSearchModalDirectory]);\n\n  useEffect(() => {\n    if (openModalUpdateDirectory === false) {\n      setInputSearchModalDirectory(\"\");\n      setFilterArraySearchModalDirectives([]);\n      setFilterArraySearchModalInstructions([]);\n    }\n  }, [openModalUpdateDirectory]);\n\n  useEffect(() => {\n    if (openModalCreateDirectory === false) {\n      setInputSearchModalDirectory(\"\");\n      setFilterArraySearchModalDirectives([]);\n      setFilterArraySearchModalInstructions([]);\n    }\n  }, [openModalCreateDirectory]);\n\n  return {\n    setCurrentDirectoryInstructions,\n    setCurrentDirectoryDirectives,\n\n    directoriesSendBD,\n    currentDirectoryName,\n    setCurrentDirectoryName,\n\n    directoryName,\n    setDirectoryName,\n\n    currentDirectoryInstructions,\n    currentDirectoryDirectives,\n\n    inputSearchModalDirectory,\n    filterArraySearchModalDirectives,\n    filterArraySearchModalInstructions,\n\n    //Получение папок\n    foldersSort,\n    isLoadingGetPolicyDirectories,\n    isErrorGetPolicyDirectories,\n    isFetchingGetPolicyDirectories,\n\n    //Создание папки\n    openModalCreateDirectory,\n\n    openCreateDirectory,\n    exitCreateDirectory,\n\n    saveFolder,\n\n    isLoadingPostPoliciesDirectoriesMutation,\n    isSuccessPostPoliciesDirectoriesMutation,\n    isErrorPostPoliciesDirectoriesMutation,\n    ErrorPostPoliciesDirectoriesMutation,\n    localIsResponsePostPolicyDirectoriesMutation,\n\n    //Обновление папки\n    openModalUpdateDirectory,\n\n    updateDirectory,\n    exitUpdateDirectory,\n\n    saveUpdateFolder,\n\n    isLoadingUpdatePolicyDirectoriesMutation,\n    isSuccessUpdatePolicyDirectoriesMutation,\n    isErrorUpdatePolicyDirectoriesMutation,\n    ErrorUpdateDirectories,\n    localIsResponseUpdatePolicyDirectoriesMutation,\n\n\n    //Удаление папки\n    openModalDeleteDirectory,\n    setOpenModalDeleteDirectory,\n\n    saveDeleteFolder,\n\n    isLoadingDeletePolicyDirectoriesMutation,\n    isSuccessDeletePolicyDirectoriesMutation,\n    isErrorDeletePolicyDirectoriesMutation,\n    ErrorDeleteDirectories,\n    localIsResponseDeletePolicyDirectoriesMutation,\n\n    handleInputChangeModalSearch,\n    handleCheckboxChange,\n    handleCheckboxChangeUpdate,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"editText\":\"BottomHeaders_editText__BUuuG\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ButtonAction_wrapper__S7EYo\"};","import React from \"react\";\nimport classes from \"./ButtonAction.module.css\";\nimport iconAdd from \"../../../../image/iconAdd.svg\";\nimport Blacksavetmp from \"../../../../image/Blacksavetmp.svg\";\nimport ButtonImage from \"@Custom/buttonImage/ButtonImage\";\nexport default function ButtonAction({ create, update, refUpdate, refCreate }) {\n  return (\n    <div className={classes.wrapper}>\n      {create && (\n        <ButtonImage\n          refAction={refCreate}\n          name={\"создать\"}\n          icon={iconAdd}\n          onClick={create}\n        ></ButtonImage>\n      )}\n\n      {update && (\n        <ButtonImage\n          refAction={refUpdate}\n          name={\"обновить\"}\n          icon={Blacksavetmp}\n          onClick={update}\n        ></ButtonImage>\n      )}\n    </div>\n  );\n}\n","import React from 'react'\nimport classes from \"./BottomHeaders.module.css\"\nimport ButtonAction from './ButtonAction/ButtonAction'\n\nexport default function BottomHeaders({children, create, update,  refUpdate, refCreate}) {\n  return (\n    <div className={classes.editText}>\n        {children}\n        <ButtonAction create={create} update={update} refUpdate={refUpdate} refCreate={refCreate}></ButtonAction>\n    </div>\n  )\n}\n","var _desc, _defs, _rect, _g;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSubbarSearch(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"\\n\\t\\t\\tCreated with Pixso.\\n\\t\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip8_4774\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"white\",\n    fillOpacity: 0\n  })))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"subbar / search\",\n    width: 16,\n    height: 16,\n    fill: \"#FFFFFF\",\n    fillOpacity: 0\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip8_4774)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M10.33 9.33L9.8 9.33L9.61 9.15C10.41 8.21 10.83 6.94 10.6 5.59C10.29 3.73 8.74 2.26 6.87 2.03C4.05 1.68 1.68 4.05 2.03 6.87C2.25 8.74 3.73 10.29 5.59 10.6C6.94 10.83 8.21 10.41 9.15 9.61L9.33 9.8L9.33 10.33L12.16 13.16C12.43 13.43 12.88 13.43 13.15 13.16C13.43 12.89 13.43 12.44 13.15 12.17L10.33 9.33ZM6.33 9.33C4.67 9.33 3.33 7.99 3.33 6.33C3.33 4.67 4.67 3.33 6.33 3.33C7.99 3.33 9.33 4.67 9.33 6.33C9.33 7.99 7.99 9.33 6.33 9.33Z\",\n    fill: \"#3A3A3A\",\n    fillOpacity: 1,\n    fillRule: \"nonzero\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubbarSearch);\nexport default __webpack_public_path__ + \"static/media/subbarSearch.228587dc2f4983eef0e3a45c32fd687a.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"modalDelete\":\"ModalWindow_modalDelete__ukhRp\",\"modalDeleteElement\":\"ModalWindow_modalDeleteElement__6zWsf\",\"modalRow1\":\"ModalWindow_modalRow1__pu+1f\",\"modalRow2\":\"ModalWindow_modalRow2__KBA6s\",\"btnYes\":\"ModalWindow_btnYes__g3eEP\",\"btnNo\":\"ModalWindow_btnNo__0IBST\",\"textBtnYes\":\"ModalWindow_textBtnYes__bEP3u\",\"textBtnNo\":\"ModalWindow_textBtnNo__yJDBD\",\"text\":\"ModalWindow_text__YqzfM\",\"exitImage\":\"ModalWindow_exitImage__Bc2Og\"};","import React from \"react\";\nimport classes from \"./ModalWindow.module.css\";\nimport exit from \"../image/exitModal.svg\";\n\nexport default function ModalWindow({ text, close, btnYes, btnNo, exitBtn }) {\n  return (\n    <div className={classes.modalDelete}>\n      <div className={classes.modalDeleteElement}>\n        <img\n          src={exit}\n          alt=\"exit\"\n          className={classes.exitImage}\n          onClick={() => close(false)}\n        />\n        <div className={classes.modalRow1}>\n          <span className={classes.text}>{text}</span>\n        </div>\n        {!exitBtn && (\n          <div className={classes.modalRow2}>\n            <button\n              className={`${classes.btnYes} ${classes.textBtnYes}`}\n              onClick={btnYes}\n            >\n              Да\n            </button>\n            <button\n              className={`${classes.btnNo} ${classes.textBtnNo}`}\n              onClick={btnNo}\n            >\n              Нет\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wave\":\"WaveLetters_wave__2Gves\"};","import React from \"react\";\nimport classes from \"./WaveLetters.module.css\";\nexport default function WaveLetters({ letters }) {\n  const arrayLetters = letters.split(\"\");\n  return (\n    <div className={classes.wave}>\n      {arrayLetters?.map((item, index) => (\n        <span key={index} style={{ \"--i\": index + 1 }}>\n          {item === \" \" ? \"\\u00A0\" + \"\\u00A0\" : item}\n        </span>\n      ))}\n    </div>\n  );\n}\n"],"names":["i18n","initReactI18next","init","resources","ru","translation","lng","fallbackLng","interpolation","escapeValue","Mdxeditor","_ref","editorState","setEditorState","userId","readOnly","editorRef","useRef","postImage","usePostImageMutation","_jsx","className","classes","wrapper","children","editorContainer","MDXEditor","contentEditableClassName","par","ref","markdown","key","defaultValue","interpolations","t","placeholder","onChange","newContent","current","setMarkdown","plugins","linkPlugin","linkDialogPlugin","imagePlugin","imageUploadHandler","async","_ref2","_response$data","formData","FormData","append","file","response","unwrap","filePath","data","replace","Error","console","log","baseUrl","error","Promise","reject","tablePlugin","listsPlugin","toolbarPlugin","toolbarClassName","toolbarContents","_jsxs","_Fragment","style","marginRight","UndoRedo","BoldItalicUnderlineToggles","ListsToggle","InsertImage","Separator","InsertTable","CreateLink","ModalFolder","searchArrayDirectives","searchArrayInstructions","arrayDirectives","arrayInstructions","inputSearchModalDirectory","handleInputChangeModalSearch","handleCheckboxChange","directoryName","setDirectoryName","save","setOpenModalDeleteDirectory","exit","buttonDelete","modal","modalWindow","src","exitModal","alt","onClick","header","item1","type","value","search","item2","Input","name","modalTableRowIcon","ButtonImage","icon","Blacksavetmp","deleteGrey","tablesContainer","tableWrapper","tableHeader","tableContent","scrollContent","renderDirectives","directivesToRender","length","map","item","row","id","checked","e","stopPropagation","policyName","renderInstructions","instructionsToRender","Policy","_ErrorPostPoliciesMut","_ErrorPostPoliciesMut2","_ErrorPostPoliciesMut3","_ErrorPostPoliciesMut4","_ErrorPostPoliciesMut5","_ErrorUpdatePoliciesM","_ErrorUpdatePoliciesM2","_ErrorUpdatePoliciesM3","_ErrorUpdatePoliciesM4","_ErrorUpdatePoliciesM5","_ErrorPostPoliciesDir","_ErrorPostPoliciesDir2","_ErrorPostPoliciesDir3","_ErrorPostPoliciesDir4","_ErrorPostPoliciesDir5","_ErrorUpdateDirectori","_ErrorUpdateDirectori2","_ErrorUpdateDirectori3","_ErrorUpdateDirectori4","_ErrorUpdateDirectori5","_ErrorDeleteDirectori","_ErrorDeleteDirectori2","_ErrorDeleteDirectori3","_ErrorDeleteDirectori4","_ErrorDeleteDirectori5","policyId","useParams","useEffect","setSelectedPolicyId","selectRef","isOpenSearch","setIsOpenSearch","useState","selectedPolicyId","setPolicyName","setType","state","setState","disabledArchive","setDisabledArchive","reduxSelectedOrganizationId","useGetReduxOrganization","refName","refType","refStatus","refCreate","refUpdate","open","setOpen","steps","title","description","target","disabled","filter","step","isLoadingGetPolicies","isErrorGetPolicies","isFetchingGetPolicies","instructionsActive","instructionsDraft","instructionsCompleted","directivesActive","directivesDraft","directivesCompleted","currentPolicy","isLoadingGetPoliciesId","isFetchingGetPoliciesId","isErrorGetPoliciesId","postPolicy","isLoadingPostPoliciesMutation","isSuccessPostPoliciesMutation","isErrorPostPoliciesMutation","ErrorPostPoliciesMutation","localIsResponsePostPoliciesMutation","updatePolicy","isLoadingUpdatePoliciesMutation","isSuccessUpdatePoliciesMutation","isErrorUpdatePoliciesMutation","ErrorUpdatePoliciesMutation","localIsResponseUpdatePoliciesMutation","usePolicyHook","organizationId","setCurrentDirectoryInstructions","setCurrentDirectoryDirectives","directoriesSendBD","currentDirectoryName","setCurrentDirectoryName","currentDirectoryInstructions","currentDirectoryDirectives","filterArraySearchModalDirectives","filterArraySearchModalInstructions","foldersSort","isLoadingGetPolicyDirectories","isErrorGetPolicyDirectories","isFetchingGetPolicyDirectories","openModalCreateDirectory","openCreateDirectory","exitCreateDirectory","saveFolder","isLoadingPostPoliciesDirectoriesMutation","isSuccessPostPoliciesDirectoriesMutation","isErrorPostPoliciesDirectoriesMutation","ErrorPostPoliciesDirectoriesMutation","localIsResponsePostPolicyDirectoriesMutation","openModalUpdateDirectory","updateDirectory","exitUpdateDirectory","saveUpdateFolder","isLoadingUpdatePolicyDirectoriesMutation","isSuccessUpdatePolicyDirectoriesMutation","isErrorUpdatePolicyDirectoriesMutation","ErrorUpdateDirectories","localIsResponseUpdatePolicyDirectoriesMutation","openModalDeleteDirectory","saveDeleteFolder","isLoadingDeletePolicyDirectoriesMutation","isSuccessDeletePolicyDirectoriesMutation","isErrorDeletePolicyDirectoriesMutation","ErrorDeleteDirectories","localIsResponseDeletePolicyDirectoriesMutation","handleCheckboxChangeUpdate","currentDirectoryId","setCurrentDirectoryId","setOpenModalCreateDirectory","setOpenModalUpdateDirectory","setDirectoriesSendBD","directoriesUpdate","setDirectoriesUpdate","setInputSearchModalDirectory","setFilterArraySearchModalDirectives","setFilterArraySearchModalInstructions","folders","deletePolicyDirectories","updatePolicyDirectories","postDirectory","usePolicyDirectoriesHook","filteredDirectives","toLowerCase","includes","filteredInstructions","policyToPolicyDirectories","then","catch","JSON","stringify","element","obj","_currentDirectoryInst","_currentDirectoryDire","policyIds","policy","filterArray","filterArray1","update","foundItem","find","sort","a","b","localeCompare","update1","policyDirectoryId","prev","useDirectories","getPolicyId","content","handleClickOutside","event","contains","document","addEventListener","removeEventListener","dialog","Headers","funcActiveHint","BottomHeaders","create","result","Data","_id","itemName","color","div","five","textMontserrat14","sixth","subbarSearch","policySearch","policySearchItemNested","listUL","folder","listText","iconSublist","marginLeft","listULElementNested","policySearchItemNestedNested","listULNested","activeText","listULElementNestedTwo","textMontserrat","draftText","completedText","_item$policyToPolicyD","hasInstruction","hasDirective","policySearchItem","listULElement","instructionHeader","headerText","directiveHeader","React","addCircleBlue","Select","refSelect","array","arrayItem","disabledPole","ConfigProvider","locale","ruRU","Tour","onClose","main","HandlerQeury","Loading","Fetching","HandlerMutation","Success","textSuccess","textError","errors","message","WaveLetters","letters","ModalWindow","text","close","btnYes","btnNo","ButtonAction","refAction","iconAdd","editText","exitBtn","modalDelete","modalDeleteElement","exitImage","modalRow1","modalRow2","textBtnYes","textBtnNo","arrayLetters","split","wave","index"],"sourceRoot":""}